<Workspace Version="0.9.1.4062" X="786.27285036474" Y="-202.375776117878" zoom="0.723116018994531" Name="Home" Description="" RunType="Manual" RunPeriod="1000" HasRunWithoutCrash="False">
  <NamespaceResolutionMap>
    <ClassMap partialName="List" resolvedName="DSCore.List" assemblyName="DSCoreNodes.dll" />
  </NamespaceResolutionMap>
  <Elements>
    <DSRevitNodesUI.ElementsOfCategory guid="80171361-c0e1-4a87-9c51-7d42229fcde5" type="DSRevitNodesUI.ElementsOfCategory" nickname="All Elements of Category" x="-1779.467210067" y="361.078126016449" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" />
    <DSRevitNodesUI.ElementsOfCategory guid="56a20d69-7614-4f28-b585-86e61f7af5d0" type="DSRevitNodesUI.ElementsOfCategory" nickname="All Elements of Category" x="-1780.45282610244" y="619.659936401088" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" />
    <DSRevitNodesUI.Categories guid="c644802a-96d6-4d3d-acac-6902c03d5506" type="DSRevitNodesUI.Categories" nickname="Categories" x="-2049.50346335172" y="345.952386752074" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" index="865:StructuralColumns" />
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="72b4479b-5c33-4844-8f66-06bde27cb7c8" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="Flatten" x="-1547.39800433881" y="598.107210303239" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" assembly="BuiltIn" function="Flatten@var[]..[]" />
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="dafeef20-fde7-4045-9f25-92f23004ae16" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="Flatten" x="-1545.29898850207" y="334.15680418634" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" assembly="BuiltIn" function="Flatten@var[]..[]" />
    <DSRevitNodesUI.Categories guid="50624e55-49cf-4010-9535-5f034a33d28c" type="DSRevitNodesUI.Categories" nickname="Categories" x="-2059.31731604761" y="576.211238254911" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" index="872:StructuralFraming" />
    <Dynamo.Nodes.DSModelElementSelection guid="cdc608a2-005e-4f6c-996c-d048a2f45fcc" type="Dynamo.Nodes.DSModelElementSelection" nickname="Column" x="-1521.71646323294" y="838.08251703139" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" />
    <Dynamo.Nodes.DSModelElementSelection guid="9539c0d6-0cbd-4ce4-adec-c23a513c88da" type="Dynamo.Nodes.DSModelElementSelection" nickname="Framing" x="-1516.73059775618" y="962.232323953347" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" />
    <CoreNodeModels.Logic.If guid="eb2be925-6870-4b83-8c4c-631d3ce5200b" type="CoreNodeModels.Logic.If" nickname="If" x="-45.3787681277979" y="1157.24815618005" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" />
    <CoreNodeModels.Logic.If guid="d5d47931-af6d-488c-9ca6-5dd3d7617480" type="CoreNodeModels.Logic.If" nickname="If" x="-456.237039173862" y="862.282075420114" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" />
    <PythonNodeModels.PythonStringNode guid="e272166a-c430-4306-81a5-f5d1afcd9365" type="PythonNodeModels.PythonStringNode" nickname="Are Elements Joined" x="-277.028014711669" y="1064.43462065242" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" inputcount="3" />
    <PythonNodeModels.PythonStringNode guid="fe9c5b7c-c719-47ec-82a8-3f93acc28981" type="PythonNodeModels.PythonStringNode" nickname="IsCuttingElementInJoin" x="178.184008062858" y="944.318258314246" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" inputcount="3" />
    <CoreNodeModels.Logic.If guid="44dbd9c5-9506-40fb-9f7c-e2e60c3fc2db" type="CoreNodeModels.Logic.If" nickname="If" x="406.092884955931" y="1138.06981846707" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" />
    <PythonNodeModels.PythonStringNode guid="a0c207d0-7dd4-4123-bc16-7f8ccacdf2fc" type="PythonNodeModels.PythonStringNode" nickname="SwitchJoinOrder" x="633.472304683394" y="983.463535047581" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" inputcount="3" />
    <CoreNodeModels.Input.StringInput guid="6210cfd6-906e-4392-84f8-8a49b6e9fa56" type="CoreNodeModels.Input.StringInput" nickname="Unjoin" x="-1237.64659302063" y="1276.98240268938" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false">
      <System.String>import clr
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *

clr.AddReference("RevitAPI")
import Autodesk
import Autodesk.Revit.DB.JoinGeometryUtils as rdj

clr.AddReference("RevitServices")
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager

clr.AddReference("RevitNodes")
import Revit
clr.ImportExtensions(Revit.Elements)
#The inputs to this node will be stored as a list in the IN variables.
dataEnteringNode = IN

A = UnwrapElement(IN[0]) # First Elements
B = UnwrapElement(IN[1]) # Second Elements

doc = DocumentManager.Instance.CurrentDBDocument
results = []

TransactionManager.Instance.EnsureInTransaction(doc)
try:
	results = rdj.UnjoinGeometry(doc,A,B)
except:
	pass





TransactionManager.Instance.TransactionTaskDone()
#Assign your output to the OUT variable.
OUT = A,B</System.String>
      <System.String value="import clr&#xD;&#xA;clr.AddReference('ProtoGeometry')&#xD;&#xA;from Autodesk.DesignScript.Geometry import *&#xD;&#xA;&#xD;&#xA;clr.AddReference(&quot;RevitAPI&quot;)&#xD;&#xA;import Autodesk&#xD;&#xA;import Autodesk.Revit.DB.JoinGeometryUtils as rdj&#xD;&#xA;&#xD;&#xA;clr.AddReference(&quot;RevitServices&quot;)&#xD;&#xA;import RevitServices&#xD;&#xA;from RevitServices.Persistence import DocumentManager&#xD;&#xA;from RevitServices.Transactions import TransactionManager&#xD;&#xA;&#xD;&#xA;clr.AddReference(&quot;RevitNodes&quot;)&#xD;&#xA;import Revit&#xD;&#xA;clr.ImportExtensions(Revit.Elements)&#xD;&#xA;#The inputs to this node will be stored as a list in the IN variables.&#xD;&#xA;dataEnteringNode = IN&#xD;&#xA;&#xD;&#xA;A = UnwrapElement(IN[0]) # First Elements&#xD;&#xA;B = UnwrapElement(IN[1]) # Second Elements&#xD;&#xA;&#xD;&#xA;doc = DocumentManager.Instance.CurrentDBDocument&#xD;&#xA;results = []&#xD;&#xA;&#xD;&#xA;TransactionManager.Instance.EnsureInTransaction(doc)&#xD;&#xA;try:&#xD;&#xA;	results = rdj.UnjoinGeometry(doc,A,B)&#xD;&#xA;except:&#xD;&#xA;	pass&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;TransactionManager.Instance.TransactionTaskDone()&#xD;&#xA;#Assign your output to the OUT variable.&#xD;&#xA;OUT = A,B" />
    </CoreNodeModels.Input.StringInput>
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="3236a161-ed63-4abf-9725-a31d8b4adb3a" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="Element.Solids" x="-1155.82855851725" y="1076.39828689009" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" assembly="RevitNodes.dll" function="Revit.Elements.Element.Solids" />
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="2c03a7d7-7dc8-4729-bbfa-e0aaf91af6cb" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="Element.Solids" x="-1154.26165295573" y="978.632247010474" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" assembly="RevitNodes.dll" function="Revit.Elements.Element.Solids" />
    <CoreNodeModels.Input.StringInput guid="a924b62b-98bb-4f55-91c4-756fdd3e84e3" type="CoreNodeModels.Input.StringInput" nickname="IsCuttingElementInJoin" x="-976.738198219322" y="1336.70809008515" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false">
      <System.String>import clr
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *

clr.AddReference("RevitAPI")
import Autodesk
import Autodesk.Revit.DB.JoinGeometryUtils as rdj

clr.AddReference("RevitServices")
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager

clr.AddReference("RevitNodes")
import Revit
clr.ImportExtensions(Revit.Elements)
#The inputs to this node will be stored as a list in the IN variables.
dataEnteringNode = IN

A = UnwrapElement(IN[0]) # First Elements
B = UnwrapElement(IN[1]) # Second Elements

doc = DocumentManager.Instance.CurrentDBDocument
results = []

TransactionManager.Instance.EnsureInTransaction(doc)
try:
	results = rdj.IsCuttingElementInJoin(doc,A,B)
except:
	pass





TransactionManager.Instance.TransactionTaskDone()
#Assign your output to the OUT variable.
OUT = results</System.String>
      <System.String value="import clr&#xD;&#xA;clr.AddReference('ProtoGeometry')&#xD;&#xA;from Autodesk.DesignScript.Geometry import *&#xD;&#xA;&#xD;&#xA;clr.AddReference(&quot;RevitAPI&quot;)&#xD;&#xA;import Autodesk&#xD;&#xA;import Autodesk.Revit.DB.JoinGeometryUtils as rdj&#xD;&#xA;&#xD;&#xA;clr.AddReference(&quot;RevitServices&quot;)&#xD;&#xA;import RevitServices&#xD;&#xA;from RevitServices.Persistence import DocumentManager&#xD;&#xA;from RevitServices.Transactions import TransactionManager&#xD;&#xA;&#xD;&#xA;clr.AddReference(&quot;RevitNodes&quot;)&#xD;&#xA;import Revit&#xD;&#xA;clr.ImportExtensions(Revit.Elements)&#xD;&#xA;#The inputs to this node will be stored as a list in the IN variables.&#xD;&#xA;dataEnteringNode = IN&#xD;&#xA;&#xD;&#xA;A = UnwrapElement(IN[0]) # First Elements&#xD;&#xA;B = UnwrapElement(IN[1]) # Second Elements&#xD;&#xA;&#xD;&#xA;doc = DocumentManager.Instance.CurrentDBDocument&#xD;&#xA;results = []&#xD;&#xA;&#xD;&#xA;TransactionManager.Instance.EnsureInTransaction(doc)&#xD;&#xA;try:&#xD;&#xA;	results = rdj.IsCuttingElementInJoin(doc,A,B)&#xD;&#xA;except:&#xD;&#xA;	pass&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;TransactionManager.Instance.TransactionTaskDone()&#xD;&#xA;#Assign your output to the OUT variable.&#xD;&#xA;OUT = results" />
    </CoreNodeModels.Input.StringInput>
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="63d99199-9dea-4da6-b5f6-d101006d8421" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="Geometry.DoesIntersect" x="-937.962084052796" y="1024.12435966223" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="true" assembly="ProtoGeometry.dll" function="Autodesk.DesignScript.Geometry.Geometry.DoesIntersect@Autodesk.DesignScript.Geometry.Geometry" />
    <CoreNodeModels.Input.StringInput guid="e993d555-29b6-43b7-be3b-63eecac70925" type="CoreNodeModels.Input.StringInput" nickname="AreElementsJoined" x="-723.566965313294" y="1408.53813269849" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false">
      <System.String>import clr
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *

clr.AddReference("RevitAPI")
import Autodesk
import Autodesk.Revit.DB.JoinGeometryUtils as rdj

clr.AddReference("RevitServices")
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager

clr.AddReference("RevitNodes")
import Revit
clr.ImportExtensions(Revit.Elements)
#The inputs to this node will be stored as a list in the IN variables.
dataEnteringNode = IN

A = UnwrapElement(IN[0]) # First Elements
B = UnwrapElement(IN[1]) # Second Elements

doc = DocumentManager.Instance.CurrentDBDocument
results = []

TransactionManager.Instance.EnsureInTransaction(doc)
try:
	results = rdj.AreElementsJoined(doc,A,B)
except:
	pass





TransactionManager.Instance.TransactionTaskDone()
#Assign your output to the OUT variable.
OUT = results</System.String>
      <System.String value="import clr&#xD;&#xA;clr.AddReference('ProtoGeometry')&#xD;&#xA;from Autodesk.DesignScript.Geometry import *&#xD;&#xA;&#xD;&#xA;clr.AddReference(&quot;RevitAPI&quot;)&#xD;&#xA;import Autodesk&#xD;&#xA;import Autodesk.Revit.DB.JoinGeometryUtils as rdj&#xD;&#xA;&#xD;&#xA;clr.AddReference(&quot;RevitServices&quot;)&#xD;&#xA;import RevitServices&#xD;&#xA;from RevitServices.Persistence import DocumentManager&#xD;&#xA;from RevitServices.Transactions import TransactionManager&#xD;&#xA;&#xD;&#xA;clr.AddReference(&quot;RevitNodes&quot;)&#xD;&#xA;import Revit&#xD;&#xA;clr.ImportExtensions(Revit.Elements)&#xD;&#xA;#The inputs to this node will be stored as a list in the IN variables.&#xD;&#xA;dataEnteringNode = IN&#xD;&#xA;&#xD;&#xA;A = UnwrapElement(IN[0]) # First Elements&#xD;&#xA;B = UnwrapElement(IN[1]) # Second Elements&#xD;&#xA;&#xD;&#xA;doc = DocumentManager.Instance.CurrentDBDocument&#xD;&#xA;results = []&#xD;&#xA;&#xD;&#xA;TransactionManager.Instance.EnsureInTransaction(doc)&#xD;&#xA;try:&#xD;&#xA;	results = rdj.AreElementsJoined(doc,A,B)&#xD;&#xA;except:&#xD;&#xA;	pass&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;TransactionManager.Instance.TransactionTaskDone()&#xD;&#xA;#Assign your output to the OUT variable.&#xD;&#xA;OUT = results" />
    </CoreNodeModels.Input.StringInput>
    <CoreNodeModels.Input.StringInput guid="adbaf92f-8916-4b94-8325-27bff412550e" type="CoreNodeModels.Input.StringInput" nickname="Join" x="-486.724141174614" y="1498.42035866476" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false">
      <System.String>import clr
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *

clr.AddReference("RevitAPI")
import Autodesk
import Autodesk.Revit.DB.JoinGeometryUtils as rdj

clr.AddReference("RevitServices")
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager

clr.AddReference("RevitNodes")
import Revit
clr.ImportExtensions(Revit.Elements)
#The inputs to this node will be stored as a list in the IN variables.
dataEnteringNode = IN

A = UnwrapElement(IN[0]) # First Elements
B = UnwrapElement(IN[1]) # Second Elements

doc = DocumentManager.Instance.CurrentDBDocument
results = []

TransactionManager.Instance.EnsureInTransaction(doc)
try:
	results = rdj.JoinGeometry(doc,A,B)
except:
	pass





TransactionManager.Instance.TransactionTaskDone()
#Assign your output to the OUT variable.
OUT = A,B</System.String>
      <System.String value="import clr&#xD;&#xA;clr.AddReference('ProtoGeometry')&#xD;&#xA;from Autodesk.DesignScript.Geometry import *&#xD;&#xA;&#xD;&#xA;clr.AddReference(&quot;RevitAPI&quot;)&#xD;&#xA;import Autodesk&#xD;&#xA;import Autodesk.Revit.DB.JoinGeometryUtils as rdj&#xD;&#xA;&#xD;&#xA;clr.AddReference(&quot;RevitServices&quot;)&#xD;&#xA;import RevitServices&#xD;&#xA;from RevitServices.Persistence import DocumentManager&#xD;&#xA;from RevitServices.Transactions import TransactionManager&#xD;&#xA;&#xD;&#xA;clr.AddReference(&quot;RevitNodes&quot;)&#xD;&#xA;import Revit&#xD;&#xA;clr.ImportExtensions(Revit.Elements)&#xD;&#xA;#The inputs to this node will be stored as a list in the IN variables.&#xD;&#xA;dataEnteringNode = IN&#xD;&#xA;&#xD;&#xA;A = UnwrapElement(IN[0]) # First Elements&#xD;&#xA;B = UnwrapElement(IN[1]) # Second Elements&#xD;&#xA;&#xD;&#xA;doc = DocumentManager.Instance.CurrentDBDocument&#xD;&#xA;results = []&#xD;&#xA;&#xD;&#xA;TransactionManager.Instance.EnsureInTransaction(doc)&#xD;&#xA;try:&#xD;&#xA;	results = rdj.JoinGeometry(doc,A,B)&#xD;&#xA;except:&#xD;&#xA;	pass&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;TransactionManager.Instance.TransactionTaskDone()&#xD;&#xA;#Assign your output to the OUT variable.&#xD;&#xA;OUT = A,B" />
    </CoreNodeModels.Input.StringInput>
    <CoreNodeModels.Input.StringInput guid="5211d125-757d-4642-82b4-6c02d1aca936" type="CoreNodeModels.Input.StringInput" nickname="SwitchJoinOrder" x="-255.657130041955" y="1554.61531488155" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false">
      <System.String>import clr
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *

clr.AddReference("RevitAPI")
import Autodesk
import Autodesk.Revit.DB.JoinGeometryUtils as rdj

clr.AddReference("RevitServices")
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager

clr.AddReference("RevitNodes")
import Revit
clr.ImportExtensions(Revit.Elements)
#The inputs to this node will be stored as a list in the IN variables.
dataEnteringNode = IN

A = UnwrapElement(IN[0]) # First Elements
B = UnwrapElement(IN[1]) # Second Elements

doc = DocumentManager.Instance.CurrentDBDocument
results = []

TransactionManager.Instance.EnsureInTransaction(doc)
try:
	results = rdj.SwitchJoinOrder(doc,B,A)
except:
	pass





TransactionManager.Instance.TransactionTaskDone()
#Assign your output to the OUT variable.
OUT = results</System.String>
      <System.String value="import clr&#xD;&#xA;clr.AddReference('ProtoGeometry')&#xD;&#xA;from Autodesk.DesignScript.Geometry import *&#xD;&#xA;&#xD;&#xA;clr.AddReference(&quot;RevitAPI&quot;)&#xD;&#xA;import Autodesk&#xD;&#xA;import Autodesk.Revit.DB.JoinGeometryUtils as rdj&#xD;&#xA;&#xD;&#xA;clr.AddReference(&quot;RevitServices&quot;)&#xD;&#xA;import RevitServices&#xD;&#xA;from RevitServices.Persistence import DocumentManager&#xD;&#xA;from RevitServices.Transactions import TransactionManager&#xD;&#xA;&#xD;&#xA;clr.AddReference(&quot;RevitNodes&quot;)&#xD;&#xA;import Revit&#xD;&#xA;clr.ImportExtensions(Revit.Elements)&#xD;&#xA;#The inputs to this node will be stored as a list in the IN variables.&#xD;&#xA;dataEnteringNode = IN&#xD;&#xA;&#xD;&#xA;A = UnwrapElement(IN[0]) # First Elements&#xD;&#xA;B = UnwrapElement(IN[1]) # Second Elements&#xD;&#xA;&#xD;&#xA;doc = DocumentManager.Instance.CurrentDBDocument&#xD;&#xA;results = []&#xD;&#xA;&#xD;&#xA;TransactionManager.Instance.EnsureInTransaction(doc)&#xD;&#xA;try:&#xD;&#xA;	results = rdj.SwitchJoinOrder(doc,B,A)&#xD;&#xA;except:&#xD;&#xA;	pass&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;TransactionManager.Instance.TransactionTaskDone()&#xD;&#xA;#Assign your output to the OUT variable.&#xD;&#xA;OUT = results" />
    </CoreNodeModels.Input.StringInput>
    <CoreNodeModels.Input.StringInput guid="b7d32b78-51c4-4abd-9bab-68884972b365" type="CoreNodeModels.Input.StringInput" nickname="GetJoin" x="7.57681702327363" y="1613.05299020401" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false">
      <System.String>import clr
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *

clr.AddReference("RevitAPI")
import Autodesk
import Autodesk.Revit.DB.JoinGeometryUtils as rdj

clr.AddReference("RevitServices")
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager

clr.AddReference("RevitNodes")
import Revit
clr.ImportExtensions(Revit.Elements)
#The inputs to this node will be stored as a list in the IN variables.
dataEnteringNode = IN

elementA = UnwrapElement(IN[0]) # First Elements

doc = DocumentManager.Instance.CurrentDBDocument
results = []

results = rdj.GetJoinedElements (doc,elementA)






TransactionManager.Instance.TransactionTaskDone()
#Assign your output to the OUT variable.
OUT = results</System.String>
      <System.String value="import clr&#xD;&#xA;clr.AddReference('ProtoGeometry')&#xD;&#xA;from Autodesk.DesignScript.Geometry import *&#xD;&#xA;&#xD;&#xA;clr.AddReference(&quot;RevitAPI&quot;)&#xD;&#xA;import Autodesk&#xD;&#xA;import Autodesk.Revit.DB.JoinGeometryUtils as rdj&#xD;&#xA;&#xD;&#xA;clr.AddReference(&quot;RevitServices&quot;)&#xD;&#xA;import RevitServices&#xD;&#xA;from RevitServices.Persistence import DocumentManager&#xD;&#xA;from RevitServices.Transactions import TransactionManager&#xD;&#xA;&#xD;&#xA;clr.AddReference(&quot;RevitNodes&quot;)&#xD;&#xA;import Revit&#xD;&#xA;clr.ImportExtensions(Revit.Elements)&#xD;&#xA;#The inputs to this node will be stored as a list in the IN variables.&#xD;&#xA;dataEnteringNode = IN&#xD;&#xA;&#xD;&#xA;elementA = UnwrapElement(IN[0]) # First Elements&#xD;&#xA;&#xD;&#xA;doc = DocumentManager.Instance.CurrentDBDocument&#xD;&#xA;results = []&#xD;&#xA;&#xD;&#xA;results = rdj.GetJoinedElements (doc,elementA)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;TransactionManager.Instance.TransactionTaskDone()&#xD;&#xA;#Assign your output to the OUT variable.&#xD;&#xA;OUT = results" />
    </CoreNodeModels.Input.StringInput>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="26edf539-ed04-482d-a981-012c3e2107dc" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="176.685340340768" y="1181.03094612431" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" CodeText="&quot;Successful&quot;;" ShouldFocus="false" />
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="d59c4f41-6e87-488f-a1bb-69c06a7167dc" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="Element.Solids" x="-1351.93443810867" y="644.586159436742" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" assembly="RevitNodes.dll" function="Revit.Elements.Element.Solids" />
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="f09b03f0-45d9-481f-8796-7c3da1e23969" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="Element.Solids" x="-1355.75246894542" y="347.765967565482" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" assembly="RevitNodes.dll" function="Revit.Elements.Element.Solids" />
    <PythonNodeModels.PythonNode guid="67fb1177-9904-4b67-b763-17573496a35b" type="PythonNodeModels.PythonNode" nickname="Python Script" x="-878.363959555233" y="407.518833031995" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" inputcount="4">
      <Script>import clr
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *

clr.AddReference("RevitAPI")
import Autodesk
import Autodesk.Revit.DB.JoinGeometryUtils as rdj

clr.AddReference("RevitServices")
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager

clr.AddReference("RevitNodes")
import Revit
clr.ImportExtensions(Revit.Elements)
#The inputs to this node will be stored as a list in the IN variables.
dataEnteringNode = IN

elementA = UnwrapElement(IN[0])
elementB = UnwrapElement(IN[1])
geo1 = IN[2]
geo2 = IN[3]

doc = DocumentManager.Instance.CurrentDBDocument
results = []
TransactionManager.Instance.EnsureInTransaction(doc)
for i in range(0,len(elementA)-1):
	g1=geo1[i]
	A=elementA[i]
	for j in range(0,len(elementB)-1):
		g2=geo2[j]
		B=elementB[j]
		try:
			if not g1.DoesIntersect(g2):
				results = rdj.UnjoinGeometry(doc,A,B)
			
			elif not rdj.AreElementsJoined(doc,A,B):				
				results = rdj.JoinGeometry(doc,A,B)
			elif not rdj.IsCuttingElementInJoin(doc,A,B):
				results = rdj.SwitchJoinOrder(doc,B,A)
			else:
				results = "Nothing to join"
		except:
			pass

TransactionManager.Instance.TransactionTaskDone()
#Assign your output to the OUT variable.
OUT = results</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="48348ce9-6400-4c73-9179-1b06671f14b6" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="Flatten" x="-1164.22540743306" y="557.218869444008" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" assembly="BuiltIn" function="Flatten@var[]..[]" />
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="b63a8c87-bc66-4a19-94ce-6b5b47f84fe5" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="Flatten" x="-1166.97985686528" y="457.732594971235" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" assembly="BuiltIn" function="Flatten@var[]..[]" />
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="80171361-c0e1-4a87-9c51-7d42229fcde5" start_index="0" end="dafeef20-fde7-4045-9f25-92f23004ae16" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="56a20d69-7614-4f28-b585-86e61f7af5d0" start_index="0" end="72b4479b-5c33-4844-8f66-06bde27cb7c8" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="c644802a-96d6-4d3d-acac-6902c03d5506" start_index="0" end="80171361-c0e1-4a87-9c51-7d42229fcde5" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="72b4479b-5c33-4844-8f66-06bde27cb7c8" start_index="0" end="d59c4f41-6e87-488f-a1bb-69c06a7167dc" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="72b4479b-5c33-4844-8f66-06bde27cb7c8" start_index="0" end="67fb1177-9904-4b67-b763-17573496a35b" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="dafeef20-fde7-4045-9f25-92f23004ae16" start_index="0" end="f09b03f0-45d9-481f-8796-7c3da1e23969" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="dafeef20-fde7-4045-9f25-92f23004ae16" start_index="0" end="67fb1177-9904-4b67-b763-17573496a35b" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="50624e55-49cf-4010-9535-5f034a33d28c" start_index="0" end="56a20d69-7614-4f28-b585-86e61f7af5d0" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="cdc608a2-005e-4f6c-996c-d048a2f45fcc" start_index="0" end="e272166a-c430-4306-81a5-f5d1afcd9365" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="cdc608a2-005e-4f6c-996c-d048a2f45fcc" start_index="0" end="fe9c5b7c-c719-47ec-82a8-3f93acc28981" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="cdc608a2-005e-4f6c-996c-d048a2f45fcc" start_index="0" end="a0c207d0-7dd4-4123-bc16-7f8ccacdf2fc" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="cdc608a2-005e-4f6c-996c-d048a2f45fcc" start_index="0" end="2c03a7d7-7dc8-4729-bbfa-e0aaf91af6cb" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="9539c0d6-0cbd-4ce4-adec-c23a513c88da" start_index="0" end="e272166a-c430-4306-81a5-f5d1afcd9365" end_index="2" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="9539c0d6-0cbd-4ce4-adec-c23a513c88da" start_index="0" end="fe9c5b7c-c719-47ec-82a8-3f93acc28981" end_index="2" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="9539c0d6-0cbd-4ce4-adec-c23a513c88da" start_index="0" end="a0c207d0-7dd4-4123-bc16-7f8ccacdf2fc" end_index="2" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="9539c0d6-0cbd-4ce4-adec-c23a513c88da" start_index="0" end="3236a161-ed63-4abf-9725-a31d8b4adb3a" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="eb2be925-6870-4b83-8c4c-631d3ce5200b" start_index="0" end="fe9c5b7c-c719-47ec-82a8-3f93acc28981" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="d5d47931-af6d-488c-9ca6-5dd3d7617480" start_index="0" end="e272166a-c430-4306-81a5-f5d1afcd9365" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="e272166a-c430-4306-81a5-f5d1afcd9365" start_index="0" end="eb2be925-6870-4b83-8c4c-631d3ce5200b" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="fe9c5b7c-c719-47ec-82a8-3f93acc28981" start_index="0" end="44dbd9c5-9506-40fb-9f7c-e2e60c3fc2db" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="44dbd9c5-9506-40fb-9f7c-e2e60c3fc2db" start_index="0" end="a0c207d0-7dd4-4123-bc16-7f8ccacdf2fc" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="6210cfd6-906e-4392-84f8-8a49b6e9fa56" start_index="0" end="d5d47931-af6d-488c-9ca6-5dd3d7617480" end_index="2" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="3236a161-ed63-4abf-9725-a31d8b4adb3a" start_index="0" end="63d99199-9dea-4da6-b5f6-d101006d8421" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="2c03a7d7-7dc8-4729-bbfa-e0aaf91af6cb" start_index="0" end="63d99199-9dea-4da6-b5f6-d101006d8421" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="a924b62b-98bb-4f55-91c4-756fdd3e84e3" start_index="0" end="eb2be925-6870-4b83-8c4c-631d3ce5200b" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="63d99199-9dea-4da6-b5f6-d101006d8421" start_index="0" end="d5d47931-af6d-488c-9ca6-5dd3d7617480" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="e993d555-29b6-43b7-be3b-63eecac70925" start_index="0" end="d5d47931-af6d-488c-9ca6-5dd3d7617480" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="adbaf92f-8916-4b94-8325-27bff412550e" start_index="0" end="eb2be925-6870-4b83-8c4c-631d3ce5200b" end_index="2" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="5211d125-757d-4642-82b4-6c02d1aca936" start_index="0" end="44dbd9c5-9506-40fb-9f7c-e2e60c3fc2db" end_index="2" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="26edf539-ed04-482d-a981-012c3e2107dc" start_index="0" end="44dbd9c5-9506-40fb-9f7c-e2e60c3fc2db" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="d59c4f41-6e87-488f-a1bb-69c06a7167dc" start_index="0" end="48348ce9-6400-4c73-9179-1b06671f14b6" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="f09b03f0-45d9-481f-8796-7c3da1e23969" start_index="0" end="b63a8c87-bc66-4a19-94ce-6b5b47f84fe5" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="48348ce9-6400-4c73-9179-1b06671f14b6" start_index="0" end="67fb1177-9904-4b67-b763-17573496a35b" end_index="3" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="b63a8c87-bc66-4a19-94ce-6b5b47f84fe5" start_index="0" end="67fb1177-9904-4b67-b763-17573496a35b" end_index="2" portType="0" />
  </Connectors>
  <Notes />
  <Annotations>
    <Dynamo.Graph.Annotations.AnnotationModel guid="aca26d11-3a9a-4971-aa7f-85a8621cfcbf" annotationText="Đối tượng ***bị Cắt" left="-1789.467210067" top="304.15680418634" width="363.16822156493" height="124.921321830109" fontSize="14" InitialTop="334.15680418634" InitialHeight="123" TextblockHeight="20" backgrouund="#FFC1D676">
      <Models ModelGuid="80171361-c0e1-4a87-9c51-7d42229fcde5" />
      <Models ModelGuid="dafeef20-fde7-4045-9f25-92f23004ae16" />
    </Dynamo.Graph.Annotations.AnnotationModel>
    <Dynamo.Graph.Annotations.AnnotationModel guid="813b2034-172c-4a65-8ab9-d51cf1969c6e" annotationText="Đối tượng ***Cắt" left="-1790.45282610244" top="568.107210303239" width="362.05482176363" height="119.552726097849" fontSize="14" InitialTop="598.107210303239" InitialHeight="210.5" TextblockHeight="20" backgrouund="#FFC1D676">
      <Models ModelGuid="56a20d69-7614-4f28-b585-86e61f7af5d0" />
      <Models ModelGuid="72b4479b-5c33-4844-8f66-06bde27cb7c8" />
    </Dynamo.Graph.Annotations.AnnotationModel>
    <Dynamo.Graph.Annotations.AnnotationModel guid="8c0316ae-b9c9-4105-ba77-b94a7e5abbb5" annotationText="&lt;Click here to edit the group title&gt;" left="-1165.82855851725" top="948.632247010474" width="400.866474464454" height="220.766039879616" fontSize="14" InitialTop="978.632247010474" InitialHeight="220.766039879618" TextblockHeight="20" backgrouund="#FFC1D676">
      <Models ModelGuid="3236a161-ed63-4abf-9725-a31d8b4adb3a" />
      <Models ModelGuid="2c03a7d7-7dc8-4729-bbfa-e0aaf91af6cb" />
      <Models ModelGuid="63d99199-9dea-4da6-b5f6-d101006d8421" />
    </Dynamo.Graph.Annotations.AnnotationModel>
    <Dynamo.Graph.Annotations.AnnotationModel guid="6e3ab5c1-0c43-47e8-bbf8-486a860ecd62" annotationText="&lt;Click here to edit the group title&gt;" left="-466.237039173862" top="818.282075420114" width="147" height="189" fontSize="14" InitialTop="862.282075420114" InitialHeight="175" TextblockHeight="34" backgrouund="#FFFF7BAC">
      <Models ModelGuid="d5d47931-af6d-488c-9ca6-5dd3d7617480" />
    </Dynamo.Graph.Annotations.AnnotationModel>
    <Dynamo.Graph.Annotations.AnnotationModel guid="4f2bf011-4c08-490b-8646-c0ce996ae077" annotationText="&lt;Click here to edit the group title&gt;" left="-55.3787681277979" top="1113.24815618005" width="147" height="189" fontSize="14" InitialTop="1157.24815618005" InitialHeight="175" TextblockHeight="34" backgrouund="#FFFF7BAC">
      <Models ModelGuid="eb2be925-6870-4b83-8c4c-631d3ce5200b" />
    </Dynamo.Graph.Annotations.AnnotationModel>
    <Dynamo.Graph.Annotations.AnnotationModel guid="70afc562-6717-4d85-b32b-51e34e7b25b4" annotationText="&lt;Click here to edit the group title&gt;" left="396.092884955931" top="1094.06981846707" width="147" height="189" fontSize="14" InitialTop="1138.06981846707" InitialHeight="175" TextblockHeight="34" backgrouund="#FFFF7BAC">
      <Models ModelGuid="44dbd9c5-9506-40fb-9f7c-e2e60c3fc2db" />
    </Dynamo.Graph.Annotations.AnnotationModel>
  </Annotations>
  <Presets />
  <Cameras>
    <Camera Name="Background Preview" eyeX="-34676.62109375" eyeY="41159.453125" eyeZ="36405.98046875" lookX="15939.2421875" lookY="-35323.15234375" lookZ="-47119.25" upX="0.125204801559448" upY="0.920504868030548" upZ="-0.370127767324448" />
  </Cameras>
</Workspace>