<Workspace Version="0.9.1.4062" X="4291.7021628824" Y="-2292.84563408051" zoom="0.997576914121699" Name="Home" Description="" RunType="Manual" RunPeriod="1000" HasRunWithoutCrash="True">
  <NamespaceResolutionMap />
  <Elements>
    <PythonNodeModels.PythonNode guid="36a7fd07-e977-4524-bba2-b62928b70478" type="PythonNodeModels.PythonNode" nickname="Python Script" x="-4006.47302492307" y="2664.57698168861" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" inputcount="1">
      <Script>import clr
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *
clr.AddReference('RevitAPI')
from Autodesk.Revit.DB import *
clr.AddReference('RevitAPIUI')
from Autodesk.Revit.UI import TaskDialog
clr.AddReference("RevitNodes")
import Revit
clr.ImportExtensions(Revit.Elements)
clr.AddReference("RevitServices")
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager
from System.Collections.Generic import *
clr.ImportExtensions(Revit.GeometryConversion)

doc = DocumentManager.Instance.CurrentDBDocument
uiapp = DocumentManager.Instance.CurrentUIApplication
app = uiapp.Application

import sys
import System

#The inputs to this node will be stored as a list in the IN variables.
dataEnteringNode = IN
sampeVp = UnwrapElement(IN[0])

allCurrentSheets = FilteredElementCollector(doc).OfClass(ViewSheet).WhereElementIsNotElementType().ToElements()


allvpids = []
viewports=[]
typeIds = []
elemTypeS=[]
typenames = []

validtypes= []

sampleVPid = sampeVp.GetTypeId()

for sheet in allCurrentSheets:
	vpIds = sheet.GetAllViewports()
	allvpids.append(vpIds)
for vpids in allvpids:
	for id in vpids:
		viewport = doc.GetElement(id)
		viewports.append(viewport)
		
for vp in viewports:
	typeId = vp.GetTypeId()
	typeIds.append(typeId)
for id in typeIds:
	elem = doc.GetElement(id)
	elemTypeS.append(elem)
	
#define a transaction variable and describe the transactio
# Start Transaction
TransactionManager.Instance.EnsureInTransaction(doc)
try:
	for vp in viewports:
		if not vp.GetTypeId() == sampleVPid:
			vp.ChangeTypeId(sampleVPid)
except:
	pass
# End Transaction
TransactionManager.Instance.TransactionTaskDone()
doc.Regenerate()

result = "OK"
#Assign your output to the OUT variable.
OUT = viewports</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Nodes.DSModelElementSelection guid="9e6c319f-6cdd-489d-9875-7de136ed006d" type="Dynamo.Nodes.DSModelElementSelection" nickname="Select Sample Viewport with Type" x="-4297.05806504501" y="2666.46079217162" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false">
      <instance id="7982e5d3-e38c-4e52-b37e-5f327a4fac93-0005aa13" />
    </Dynamo.Nodes.DSModelElementSelection>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="9e6c319f-6cdd-489d-9875-7de136ed006d" start_index="0" end="36a7fd07-e977-4524-bba2-b62928b70478" end_index="0" portType="0" />
  </Connectors>
  <Notes />
  <Annotations />
  <Presets />
  <Cameras>
    <Camera Name="Background Preview" eyeX="-17" eyeY="24" eyeZ="50" lookX="12" lookY="-13" lookZ="-58" upX="0" upY="1" upZ="0" />
  </Cameras>
</Workspace>