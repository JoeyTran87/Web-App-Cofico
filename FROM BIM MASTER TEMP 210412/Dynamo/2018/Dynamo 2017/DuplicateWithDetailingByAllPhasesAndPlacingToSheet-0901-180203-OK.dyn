<Workspace Version="0.9.1.4062" X="3392.37524651524" Y="1603.81179725002" zoom="1.14868887461084" Name="Home" Description="" RunType="Manual" RunPeriod="1000" HasRunWithoutCrash="True">
  <NamespaceResolutionMap />
  <Elements>
    <PythonNodeModels.PythonNode guid="f244be85-17d4-4c45-a1ef-b62d68508b98" type="PythonNodeModels.PythonNode" nickname="Duplicate Views w Detailing follow phases" x="1751.08015059559" y="-746.820085651413" isVisible="false" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" inputcount="3">
      <Script>import clr
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *
clr.AddReference('RevitAPI')
from Autodesk.Revit.DB import *
clr.AddReference('RevitAPIUI')
from Autodesk.Revit.UI import TaskDialog
clr.AddReference("RevitNodes")
import Revit
clr.ImportExtensions(Revit.Elements)
clr.AddReference("RevitServices")
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager
from System.Collections.Generic import *
#The inputs to this node will be stored as a list in the IN variables.
dataEnteringNode = IN

doc = DocumentManager.Instance.CurrentDBDocument
uiapp = DocumentManager.Instance.CurrentUIApplication
app = uiapp.Application

###################################################
views = UnwrapElement(IN[0])
phases = UnwrapElement(IN[1])
newViewNames = IN[2]
###################################################

newViews = []
newViewsChunks = []
newviewIds=[]
oldviewnames=[] #tên ban đầu của các view input
viewDupOption = ViewDuplicateOption.WithDetailing#Option để duplicate w detailing
countPhases = len(phases)#đếm số lượng phases

#******************************************************
def chunks(l, n):
    """Yield successive n-sized chunks from l."""
    for i in range(0, len(l), n):
        yield  l[i:i + n]
#******************************************************
#############################################################
# Start Transaction
TransactionManager.Instance.EnsureInTransaction(doc)

try:
	for view in views:
		oldviewnames.append(view.ViewName)# lấy tên ban đầu của các view input
		for count in range(countPhases):
			newviewIds.append(view.Duplicate(viewDupOption))
			
	for id in newviewIds:			
		newViews.append(view.Document.GetElement(id))
	
	newviews2 = chunks(newViews,countPhases)#split list Newview theo số lượng phase	


except:
	pass

# End Transaction
TransactionManager.Instance.TransactionTaskDone()
doc.Regenerate()
#############################################################
#Assign your output to the OUT variable.
OUT = newviews2,oldviewnames</Script>
    </PythonNodeModels.PythonNode>
    <CoreNodeModels.Input.StringInput guid="8caad1fb-b45d-4e2e-8a70-24f1b5f59494" type="CoreNodeModels.Input.StringInput" nickname="Tiền tố View " x="-2263.34342724954" y="-1162.41016796572" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false">
      <System.String>3D- GH-F6_</System.String>
      <System.String value="3D- GH-F6_" />
    </CoreNodeModels.Input.StringInput>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="217556e0-b6e6-41ad-9562-2741ea525750" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="1516.09131210966" y="-572.392493646953" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" CodeText="//sheet name;&#xA;sf+&quot;_&quot;+mf+&quot;_&quot;+pf;" ShouldFocus="false" />
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="f43fbfec-8ae1-4fc3-b0a3-29fb6add9167" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="List.GetItemAtIndex = Phases in Revit" x="-566.33864610633" y="-821.943945777631" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" assembly="DSCoreNodes.dll" function="DSCore.List.GetItemAtIndex@var[]..[],int" />
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="04a6c7fe-4d2b-453c-8224-b67a7c646218" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="SortIndexByValue" x="-698.940420362619" y="-682.828859853024" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" assembly="BuiltIn" function="SortIndexByValue@double[],bool" />
    <CoreNodeModels.Input.BoolSelector guid="f8ac1e48-ec4b-4d28-a153-8deba8792431" type="CoreNodeModels.Input.BoolSelector" nickname="Boolean" x="-898.993900803641" y="-606.009784965511" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false">
      <System.Boolean>True</System.Boolean>
    </CoreNodeModels.Input.BoolSelector>
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="c237413d-0f2d-4d6f-b7ab-5342022cc79d" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="Element.GetParameterValueByName" x="-991.921353371457" y="-814.734388884135" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" assembly="RevitNodes.dll" function="Revit.Elements.Element.GetParameterValueByName@string" />
    <PythonNodeModels.PythonNode guid="01972f26-a0f1-4f1c-a3f4-f9da7c18eb3e" type="PythonNodeModels.PythonNode" nickname="Get phases" x="-1237.59355950663" y="-667.884971470591" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" inputcount="1">
      <Script>#import libraries and reference
import clr
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *
clr.AddReference('RevitAPI')
from Autodesk.Revit.DB import *
clr.AddReference('RevitAPIUI')
from Autodesk.Revit.UI import TaskDialog
clr.AddReference("RevitNodes")
import Revit
clr.ImportExtensions(Revit.Elements)
# Import geometry conversion extension methods
clr.ImportExtensions(Revit.GeometryConversion)
# Import DocumentManager and TransactionManager
clr.AddReference("RevitServices")
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager
from System.Collections.Generic import *


doc = DocumentManager.Instance.CurrentDBDocument
uiapp = DocumentManager.Instance.CurrentUIApplication
app = uiapp.Application
#The inputs to this node will be stored as a list in the IN variables.
dataEnteringNode = IN

elems = list()
elemName = list()
elemDes = list()

for phase in doc.Phases:
	elems.append(phase)
	elemName.append(phase.Name)


# Start Transaction
TransactionManager.Instance.EnsureInTransaction(doc)

# End Transaction
TransactionManager.Instance.TransactionTaskDone()
doc.Regenerate()

#Assign your output to the OUT variable.
OUT = elems</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="304543b0-df44-4c87-82b5-308eb837a3a1" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="Element.GetParameterValueByName" x="-608.091693589126" y="-368.335300187403" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" assembly="RevitNodes.dll" function="Revit.Elements.Element.GetParameterValueByName@string" />
    <CoreNodeModels.Input.StringInput guid="2c8a8853-d33a-48c6-9549-066a4bece8f9" type="CoreNodeModels.Input.StringInput" nickname="Tiền tố Sheet Number" x="-2263.34342724954" y="-1086.14820385612" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false">
      <System.String>X_GH-CONS SEQUENCE-</System.String>
      <System.String value="X_GH-CONS SEQUENCE-" />
    </CoreNodeModels.Input.StringInput>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="b286cb1d-810b-4c84-900d-47ce576eb913" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="80.1973651879083" y="-1108.47139272589" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" CodeText="//Sheet numbers&#xA;shsf+n;&#xA;//Sheet names or Phase string&#xA;pf;" ShouldFocus="false" />
    <DSRevitNodesUI.FamilyTypes guid="c02f792b-3300-4456-8358-9f0cf5b412ed" type="DSRevitNodesUI.FamilyTypes" nickname="Chọn thư viện Khung tên (#chưa dùng)" x="-2263.34342724954" y="-902.098189435429" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" index="0:A0 desire:A0 desire" />
    <PythonNodeModels.PythonNode guid="148071d0-cfd2-4d30-838d-2271394cf5a4" type="PythonNodeModels.PythonNode" nickname="Place viewports to sheet" x="4438.17767225359" y="-855.884161469542" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" inputcount="1">
      <Script>#import libraries and reference
import clr

clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *

clr.AddReference('RevitAPI')
from Autodesk.Revit.DB import *
from Autodesk.Revit.DB import ElementId
from Autodesk.Revit.DB import ViewSheet

clr.AddReference('RevitAPIUI')
from Autodesk.Revit.UI import TaskDialog

clr.AddReference("RevitNodes")
import Revit
clr.ImportExtensions(Revit.Elements)


# Import geometry conversion extension methods
clr.ImportExtensions(Revit.GeometryConversion)


# Import DocumentManager and TransactionManager

clr.AddReference("RevitServices")
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager
from System.Collections.Generic import *


doc = DocumentManager.Instance.CurrentDBDocument
uiapp = DocumentManager.Instance.CurrentUIApplication
app = uiapp.Application
########################################################################################
#The inputs to this node will be stored as a list in the IN variables.
dataEnteringNode = IN
lists = UnwrapElement(IN[0])
#sheets = UnwrapElement(IN[0])
#views = UnwrapElement(IN[1])
#positions = UnwrapElement(IN[2])
########################################################################################
newViewports=[]
#sheetIds = []
#viewIds = []

#for sheet in sheets:
#	sheetIds.append(sheet.Id)
#for view in views:
#	viewIds.append(view.Id)
#n = len(sheets)

# Start Transaction
TransactionManager.Instance.EnsureInTransaction(doc)
try:
	# Xóa viewport trong sheet neu co
#	for vs in newSheets:
#		vps = vs.GetAllViewports()		
#		for vp in vps:
#			vpe = doc.GetElement(vp)
#			vs.DeleteViewport(vpe)		
	
#	for i in range(len(sheets)):
#		for j in range(len(views[i])):
#			viewport = Viewport.Create(doc,sheets[i].Id,views[i][j].Id,positions[i][j])
#			newViewports.append(vp)

	for list in lists:
		viewport = Viewport.Create(doc,list[0].Id,list[1].Id,list[2])
		newViewports.append(viewport)
except:
	pass

# End Transaction
TransactionManager.Instance.TransactionTaskDone()
doc.Regenerate()

#Assign your output to the OUT variable.
OUT = newViewports</Script>
    </PythonNodeModels.PythonNode>
    <PythonNodeModels.PythonNode guid="c080b489-0cbd-4910-871d-aab1da160cb3" type="PythonNodeModels.PythonNode" nickname="Get Sheet containing view &amp; Position of views inside" x="70.1838179820094" y="-477.611392725887" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" inputcount="1">
      <Script>#import libraries and reference
import clr

clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *

clr.AddReference('RevitAPI')
from Autodesk.Revit.DB import *
from Autodesk.Revit.DB import ElementId
from Autodesk.Revit.DB import ViewSheet
from Autodesk.Revit.DB import Viewport

clr.AddReference('RevitAPIUI')
from Autodesk.Revit.UI import TaskDialog

clr.AddReference("RevitNodes")
import Revit
clr.ImportExtensions(Revit.Elements)


# Import geometry conversion extension methods
clr.ImportExtensions(Revit.GeometryConversion)


# Import DocumentManager and TransactionManager

clr.AddReference("RevitServices")
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager
from System.Collections.Generic import *


doc = DocumentManager.Instance.CurrentDBDocument
uiapp = DocumentManager.Instance.CurrentUIApplication
app = uiapp.Application

#The inputs to this node will be stored as a list in the IN variables.
dataEnteringNode = IN
views = UnwrapElement(IN[0])

# View Id
viewIds=[]
for a in range(0,len(views)):
	viewIds.append(views[a].Id)

# get all obljuect
sheets = FilteredElementCollector(doc).OfClass(ViewSheet) 

sheetResults = []

for sheet in sheets:
	placedViewIds = sheet.GetAllPlacedViews()	#Id cua view duoc place trong sheet
	for viewid in viewIds:
		for placedViewId in placedViewIds:
			if viewid == placedViewId:
				sheetResults.append(sheet)

positions=[]

viewportIds = sheetResults[0].GetAllViewports() # lấy tat ca viewport trong sheet ket qua dầu tiên [0]
for viewId in viewIds:
	for viewportId in viewportIds:
		viewport = doc.GetElement(viewportId)
		if viewId == viewport.ViewId:
			boundingbox = viewport.get_BoundingBox(sheetResults[0])
			positions.append((boundingbox.Max + boundingbox.Min)/2)	
		


OUT = positions
#sheetResult, viewId</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="ef090c89-7f56-4847-bf2b-531fb68b08ea" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="Document.ActiveView" x="355.489543779897" y="-193.317071086631" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" assembly="RevitNodes.dll" function="Revit.Application.Document.ActiveView" />
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="2beb931c-0fc1-411b-9ff2-5db44361ac3c" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="Document.Current" x="184.796705485048" y="-192.759607861662" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="true" assembly="RevitNodes.dll" function="Revit.Application.Document.Current" />
    <CoreNodeModels.Watch guid="03dcd92a-2941-4ebd-96fe-93c525838e1b" type="CoreNodeModels.Watch" nickname="Watch" x="221.021713883928" y="-840.299198289874" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" />
    <CoreNodeModels.Watch guid="65615db8-8831-4d1f-bd80-163f0b9e8378" type="CoreNodeModels.Watch" nickname="Watch" x="414.862942680348" y="-838.719734890327" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" />
    <PythonNodeModels.PythonNode guid="323c3d9b-5d43-4d5c-a0f1-a455e21a7e9a" type="PythonNodeModels.PythonNode" nickname="test Get titleblock" x="953.494414442341" y="-1135.84775993056" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" inputcount="1">
      <Script>#import libraries and reference
import clr

clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *

clr.AddReference('RevitAPI')
from Autodesk.Revit.DB import *
from Autodesk.Revit.DB import ElementId
from Autodesk.Revit.DB import ViewSheet
from Autodesk.Revit.DB import FamilySymbol
from Autodesk.Revit.DB import Element

clr.AddReference('RevitAPIUI')
from Autodesk.Revit.UI import TaskDialog

clr.AddReference("RevitNodes")
import Revit
clr.ImportExtensions(Revit.Elements)


# Import geometry conversion extension methods
clr.ImportExtensions(Revit.GeometryConversion)


# Import DocumentManager and TransactionManager

clr.AddReference("RevitServices")
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager
from System.Collections.Generic import *


doc = DocumentManager.Instance.CurrentDBDocument
uiapp = DocumentManager.Instance.CurrentUIApplication
app = uiapp.Application

#The inputs to this node will be stored as a list in the IN variables.
dataEnteringNode = IN

# lấy typeId của sheet
allCurrentSheets = FilteredElementCollector(doc).OfClass(ViewSheet).WhereElementIsNotElementType().ToElements()



OUT = allCurrentSheets[4].SheetNumber</Script>
    </PythonNodeModels.PythonNode>
    <PythonNodeModels.PythonNode guid="b7799526-094e-4564-aac8-3370fcb9bd07" type="PythonNodeModels.PythonNode" nickname="Create Sheets" x="710.026866765348" y="-944.416384618752" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" inputcount="2">
      <Script>#import libraries and reference
import clr

clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *

clr.AddReference('RevitAPI')
from Autodesk.Revit.DB import *
from Autodesk.Revit.DB import ElementId
from Autodesk.Revit.DB import ViewSheet
from Autodesk.Revit.DB import FamilySymbol
from Autodesk.Revit.DB import Element

clr.AddReference('RevitAPIUI')
from Autodesk.Revit.UI import TaskDialog

clr.AddReference("RevitNodes")
import Revit
clr.ImportExtensions(Revit.Elements)


# Import geometry conversion extension methods
clr.ImportExtensions(Revit.GeometryConversion)


# Import DocumentManager and TransactionManager

clr.AddReference("RevitServices")
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager
from System.Collections.Generic import *


doc = DocumentManager.Instance.CurrentDBDocument
uiapp = DocumentManager.Instance.CurrentUIApplication
app = uiapp.Application

#The inputs to this node will be stored as a list in the IN variables.
dataEnteringNode = IN
newSheetNumbers = IN[0]
newSheetNames = IN[1]

############################################################################################################
# lấy typeId của sheet
nTid = FilteredElementCollector(doc).OfCategory(BuiltInCategory.OST_TitleBlocks).WhereElementIsElementType().FirstElement().Id

# lấy tất cả current sheet
allCurrentSheets = FilteredElementCollector(doc).OfClass(ViewSheet).WhereElementIsNotElementType().ToElements()

newSheetNumbersAfterCheck = []

newSheets =[] # cac sheet duoc tao mới
nsSheetnumbers = [] # Number sheet moi
nsSheetNames = []# Name sheet moi
filCurrentSheets = []
finalSheets =[]
# Start Transaction
TransactionManager.Instance.EnsureInTransaction(doc)

try:
# Tìm các sheet có Number trùng với List Sheetnumber và xóa đi number đó trong list Sheetnumber và sheetname
	newSheetNumbersAfterCheck = newSheetNumbers[:] # sao chep list
	for a in range(len(allCurrentSheets)):
		for b in range(len(newSheetNumbers)):
			if allCurrentSheets[a].SheetNumber == newSheetNumbers[b]:
				newSheetNumbersAfterCheck.remove(newSheetNumbers[b])
				
	for i in range(len(newSheetNumbersAfterCheck)):
		newSheets.append(ViewSheet.Create(doc,nTid))
		newSheets[i].SheetNumber = newSheetNumbersAfterCheck[i]	
	
	allCurrentSheets2 = FilteredElementCollector(doc).OfClass(ViewSheet).WhereElementIsNotElementType().ToElements()
		
		
	for j in range(len(allCurrentSheets2)):
		for k in range(len(newSheetNames)):
			if allCurrentSheets2[j].SheetNumber == newSheetNumbers[k]:
				allCurrentSheets2[j].ViewName = newSheetNames[k]
				finalSheets.append(allCurrentSheets2[j])
	
except:
	pass
# End Transaction
TransactionManager.Instance.TransactionTaskDone()
doc.Regenerate()

OUT = finalSheets</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="6bc4e49b-7279-4434-a5c8-1613b2e3c37f" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="-202.33864610633" y="-1141.97423479" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" CodeText="n = Count(phases);&#xA;rank = (1..n..1);" ShouldFocus="false" />
    <Dynamo.Nodes.DSModelElementsSelection guid="dbd4a35f-392c-4634-afba-517c2a78cca0" type="Dynamo.Nodes.DSModelElementsSelection" nickname="Chọn các viewport trong sheet" x="-2263.34342724954" y="-994.720741873906" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false">
      <instance id="2a4394d3-4645-4719-879a-e67a62549b12-00040f8a" />
      <instance id="2a4394d3-4645-4719-879a-e67a62549b12-00040f8b" />
      <instance id="1d23b9bc-41df-473d-a85c-c7b643f4e678-0004333e" />
      <instance id="1d23b9bc-41df-473d-a85c-c7b643f4e678-00043349" />
      <instance id="1d23b9bc-41df-473d-a85c-c7b643f4e678-0004334b" />
      <instance id="1d23b9bc-41df-473d-a85c-c7b643f4e678-00043353" />
    </Dynamo.Nodes.DSModelElementsSelection>
    <PythonNodeModels.PythonNode guid="dbf3e339-1abb-42c2-a1a7-7fc835926915" type="PythonNodeModels.PythonNode" nickname="Viewports to Views" x="-186.855715821548" y="-249.574832732068" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" inputcount="1">
      <Script>#import libraries and reference
import clr

clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *

clr.AddReference('RevitAPI')
from Autodesk.Revit.DB import *
from Autodesk.Revit.DB import ElementId
from Autodesk.Revit.DB import ViewSheet
from Autodesk.Revit.DB import Viewport

clr.AddReference('RevitAPIUI')
from Autodesk.Revit.UI import TaskDialog

clr.AddReference("RevitNodes")
import Revit
clr.ImportExtensions(Revit.Elements)


# Import geometry conversion extension methods
clr.ImportExtensions(Revit.GeometryConversion)


# Import DocumentManager and TransactionManager

clr.AddReference("RevitServices")
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager
from System.Collections.Generic import *


doc = DocumentManager.Instance.CurrentDBDocument
uiapp = DocumentManager.Instance.CurrentUIApplication
app = uiapp.Application

#The inputs to this node will be stored as a list in the IN variables.
dataEnteringNode = IN

inputs = UnwrapElement(IN[0])
viewports=[]

viewIds =[]
views=[]

viewportTypeId = FilteredElementCollector(doc).OfCategory(BuiltInCategory.OST_Viewports).WhereElementIsNotElementType().FirstElement().GetTypeId()

for input in inputs:
	if input.GetTypeId() == viewportTypeId:
		viewports.append(input)
		
for viewport in viewports:
	viewIds.append(viewport.ViewId)
	views.append(doc.GetElement(viewport.ViewId))	

OUT = views
#sheetResult, viewId</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="8ee6f4b8-8652-4026-8dcb-0566d39e7949" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="Element.Parameters" x="-1102.18427494342" y="-344.491947559863" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" assembly="RevitNodes.dll" function="Revit.Elements.Element.Parameters" />
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="1f79b71a-bfd3-4fc3-b701-7d9e7b99cc97" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="-1091.93624726963" y="-480.39315088865" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" CodeText="&quot;Sequence Number&quot;;&#xA;&quot;Name&quot;;" ShouldFocus="false" />
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="0e9274a2-43a9-4f39-b536-31c9b8867061" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="List.OfRepeatedItem" x="2308.73412259747" y="-369.831388409055" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" assembly="DSCoreNodes.dll" function="DSCore.List.OfRepeatedItem@var[]..[],int" />
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="a53e585e-633c-420b-92f9-36d31e7707b2" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="Count" x="1209.09131210966" y="-343.831388409055" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" assembly="BuiltIn" function="Count@var[]..[]" />
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="88a007f1-848a-4afa-8a09-b2d188f93719" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="Flatten" x="2792.11444695774" y="-699.217229656643" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" assembly="BuiltIn" function="Flatten@var[]..[]" />
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="6fc45b64-f33e-4436-907d-3bb3af8c3292" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="Flatten" x="2539.42206944609" y="-367.124459094938" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" assembly="BuiltIn" function="Flatten@var[]..[]" />
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="42bae365-de08-4948-aca1-e97bb22a1b1a" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="2058.89977709759" y="-706.398059392553" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" CodeText="output[0];&#xA;output[1];" ShouldFocus="false" />
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="17e83e9c-53d4-4fe8-bd24-24dec9cdda2c" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="List.OfRepeatedItem" x="2229.60687190796" y="-550.567024161353" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" assembly="DSCoreNodes.dll" function="DSCore.List.OfRepeatedItem@var[]..[],int" />
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="0506f421-0aa6-467f-95da-18a0b0a51337" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="Count" x="1209.09131210966" y="-524.567024161353" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" assembly="BuiltIn" function="Count@var[]..[]" />
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="62507e9a-8fba-46af-afc8-6454bf2f5771" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="List.Transpose" x="2414.25422088234" y="-548.545586280073" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" assembly="DSCoreNodes.dll" function="DSCore.List.Transpose@var[]..[]" />
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="4d2c7eb2-e25a-46b4-a18a-7aa15316d5ef" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="Flatten" x="2580.69596542113" y="-556.383727062893" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" assembly="BuiltIn" function="Flatten@var[]..[]" />
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="9a1ae5b7-f096-4b37-a609-3ccc24e25f6d" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="2733.80473750975" y="-462.246180846413" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" CodeText="ssf+&quot;_&quot;+name;" ShouldFocus="false" />
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="4f6d8ac7-298d-41c7-8b1d-13ad0f8203f1" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="Flatten" x="2938.35409554001" y="-586.094703196293" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" assembly="BuiltIn" function="Flatten@var[]..[]" />
    <PythonNodeModels.PythonNode guid="695bc585-7704-4365-a2c9-6b7d3d3f3d99" type="PythonNodeModels.PythonNode" nickname="Change Names and Phases" x="3149.87794963386" y="-516.470182488336" isVisible="false" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" inputcount="4">
      <Script>import clr
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *
clr.AddReference('RevitAPI')
from Autodesk.Revit.DB import *
clr.AddReference('RevitAPIUI')
from Autodesk.Revit.UI import TaskDialog
clr.AddReference("RevitNodes")
import Revit
clr.ImportExtensions(Revit.Elements)
clr.AddReference("RevitServices")
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager
from System.Collections.Generic import *
#The inputs to this node will be stored as a list in the IN variables.
dataEnteringNode = IN

doc = DocumentManager.Instance.CurrentDBDocument
uiapp = DocumentManager.Instance.CurrentUIApplication
app = uiapp.Application

###################################################
views = UnwrapElement(IN[0])
names = UnwrapElement(IN[1])
phases = UnwrapElement(IN[2])#Id của phase
phasescount = UnwrapElement(IN[3])
#############################################################
viewphases=[]
newviews=[]
#############################################################
#************************************************************************
def chunks(l, n):
    """Yield successive n-sized chunks from l."""
    for i in range(0, len(l), n):
        yield  l[i:i + n]
#************************************************************************


# Start Transaction
TransactionManager.Instance.EnsureInTransaction(doc)
try:
	for i in range(len(views)):
		view = views[i]
		view.ViewName = names[i]
		viewphases.append(view.LookupParameter("Phase"))
	for j in range(len(viewphases)):
		viewphases[j].Set(phases[j])
		
	#newviews = chunks(views,phasescount)
except:
	pass
# End Transaction
TransactionManager.Instance.TransactionTaskDone()
doc.Regenerate()
#############################################################
#Assign your output to the OUT variable.
OUT = views</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="bdf42912-9da3-486a-9f3e-43c8467ceef2" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="Flatten" x="2831.68134704442" y="-299.640444012742" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" assembly="BuiltIn" function="Flatten@var[]..[]" />
    <PythonNodeModels.PythonNode guid="0eec3edd-b2b2-41fd-8c63-0ddb51e16d99" type="PythonNodeModels.PythonNode" nickname="Ids of Phases" x="2363.16373697231" y="-241.310341819044" isVisible="false" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" inputcount="1">
      <Script>import clr
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *
clr.AddReference('RevitAPI')
from Autodesk.Revit.DB import *
clr.AddReference('RevitAPIUI')
from Autodesk.Revit.UI import TaskDialog
clr.AddReference("RevitNodes")
import Revit
clr.ImportExtensions(Revit.Elements)
clr.AddReference("RevitServices")
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager
from System.Collections.Generic import *
#The inputs to this node will be stored as a list in the IN variables.
dataEnteringNode = IN

doc = DocumentManager.Instance.CurrentDBDocument
uiapp = DocumentManager.Instance.CurrentUIApplication
app = uiapp.Application

###################################################
phases = UnwrapElement(IN[0])

#############################################################
phaseIds=[]

for phase in phases:
	phaseIds.append(phase.Id)

#############################################################
#Assign your output to the OUT variable.
OUT = phaseIds</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="b744fb76-93f6-4074-8eec-27c23adb92f1" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="List.OfRepeatedItem" x="2565.25085357569" y="-226.238458608778" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" assembly="DSCoreNodes.dll" function="DSCore.List.OfRepeatedItem@var[]..[],int" />
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="a5ffd777-9354-40bd-a788-345fea86be5f" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="List.Transpose" x="3529.13533769497" y="-831.076708589582" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" assembly="DSCoreNodes.dll" function="DSCore.List.Transpose@var[]..[]" />
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="ae63f343-d6c6-448f-8afb-46f5b5f06d12" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="List.OfRepeatedItem" x="3529.13533769497" y="-723.076708589582" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" assembly="DSCoreNodes.dll" function="DSCore.List.OfRepeatedItem@var[]..[],int" />
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="07a191b1-e8d1-4a0d-8c86-5ed8f387d0e4" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="Flatten" x="3768.13533769497" y="-831.076708589582" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" assembly="BuiltIn" function="Flatten@var[]..[]" />
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="896d670a-cad4-452c-986a-330610ace34d" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="Flatten" x="3768.13533769497" y="-723.076708589582" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" assembly="BuiltIn" function="Flatten@var[]..[]" />
    <PythonNodeModels.PythonNode guid="feba303b-c7ce-4b0f-b6ed-42eb2e459aae" type="PythonNodeModels.PythonNode" nickname="Sorting accending new Sheets" x="1200.65941443094" y="-1078.86248925893" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" inputcount="2">
      <Script>#import libraries and reference
import clr

clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *

clr.AddReference('RevitAPI')
from Autodesk.Revit.DB import *
from Autodesk.Revit.DB import ElementId
from Autodesk.Revit.DB import ViewSheet
from Autodesk.Revit.DB import FamilySymbol
from Autodesk.Revit.DB import Element

clr.AddReference('RevitAPIUI')
from Autodesk.Revit.UI import TaskDialog

clr.AddReference("RevitNodes")
import Revit
clr.ImportExtensions(Revit.Elements)


# Import geometry conversion extension methods
clr.ImportExtensions(Revit.GeometryConversion)


# Import DocumentManager and TransactionManager

clr.AddReference("RevitServices")
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager
from System.Collections.Generic import *


doc = DocumentManager.Instance.CurrentDBDocument
uiapp = DocumentManager.Instance.CurrentUIApplication
app = uiapp.Application
#######################################################################################################
#The inputs to this node will be stored as a list in the IN variables.
dataEnteringNode = IN
sheets = UnwrapElement(IN[0])
inisheetnumbers = UnwrapElement(IN[1])

#######################################################################################################
sortedSheets = []
sortedSheetNums = []
i=0
for ininum in inisheetnumbers:
	for sheet in sheets:
		i+=1
		if sheet.SheetNumber == ininum:
			sortedSheets.append(sheet)
			sortedSheetNums.append(sheet.SheetNumber)

OUT = sortedSheets</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="2029b0d7-035b-4fd8-beb1-d70ef277bed0" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="List.OfRepeatedItem" x="1506.09131210966" y="-912.611392725887" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" assembly="DSCoreNodes.dll" function="DSCore.List.OfRepeatedItem@var[]..[],int" />
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="c327881c-08e4-4f2f-806f-13682f2f6fe6" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="Flatten" x="3768.13533769497" y="-939.076708589582" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" assembly="BuiltIn" function="Flatten@var[]..[]" />
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="a8b987bb-b888-498f-9863-ee6f76600636" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="List.Transpose" x="3529.13533769497" y="-939.076708589582" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" assembly="DSCoreNodes.dll" function="DSCore.List.Transpose@var[]..[]" />
    <CoreNodeModels.CreateList guid="9fb5f370-7272-4e65-8193-6b52349c09a0" type="CoreNodeModels.CreateList" nickname="List.Create" x="3977.13533769497" y="-857.076708589582" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" inputcount="3" />
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="f79d33e6-db4c-42df-8a33-3d65108e6c10" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="List.Transpose" x="4197.13533769497" y="-857.076708589582" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" assembly="DSCoreNodes.dll" function="DSCore.List.Transpose@var[]..[]" />
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="f244be85-17d4-4c45-a1ef-b62d68508b98" start_index="0" end="42bae365-de08-4948-aca1-e97bb22a1b1a" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="8caad1fb-b45d-4e2e-8a70-24f1b5f59494" start_index="0" end="217556e0-b6e6-41ad-9562-2741ea525750" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="217556e0-b6e6-41ad-9562-2741ea525750" start_index="0" end="f244be85-17d4-4c45-a1ef-b62d68508b98" end_index="2" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="217556e0-b6e6-41ad-9562-2741ea525750" start_index="0" end="0e9274a2-43a9-4f39-b536-31c9b8867061" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="f43fbfec-8ae1-4fc3-b0a3-29fb6add9167" start_index="0" end="6bc4e49b-7279-4434-a5c8-1613b2e3c37f" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="f43fbfec-8ae1-4fc3-b0a3-29fb6add9167" start_index="0" end="f244be85-17d4-4c45-a1ef-b62d68508b98" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="f43fbfec-8ae1-4fc3-b0a3-29fb6add9167" start_index="0" end="0506f421-0aa6-467f-95da-18a0b0a51337" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="f43fbfec-8ae1-4fc3-b0a3-29fb6add9167" start_index="0" end="0eec3edd-b2b2-41fd-8c63-0ddb51e16d99" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="04a6c7fe-4d2b-453c-8224-b67a7c646218" start_index="0" end="f43fbfec-8ae1-4fc3-b0a3-29fb6add9167" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="f8ac1e48-ec4b-4d28-a153-8deba8792431" start_index="0" end="04a6c7fe-4d2b-453c-8224-b67a7c646218" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="c237413d-0f2d-4d6f-b7ab-5342022cc79d" start_index="0" end="04a6c7fe-4d2b-453c-8224-b67a7c646218" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="01972f26-a0f1-4f1c-a3f4-f9da7c18eb3e" start_index="0" end="f43fbfec-8ae1-4fc3-b0a3-29fb6add9167" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="01972f26-a0f1-4f1c-a3f4-f9da7c18eb3e" start_index="0" end="c237413d-0f2d-4d6f-b7ab-5342022cc79d" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="01972f26-a0f1-4f1c-a3f4-f9da7c18eb3e" start_index="0" end="304543b0-df44-4c87-82b5-308eb837a3a1" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="01972f26-a0f1-4f1c-a3f4-f9da7c18eb3e" start_index="0" end="8ee6f4b8-8652-4026-8dcb-0566d39e7949" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="304543b0-df44-4c87-82b5-308eb837a3a1" start_index="0" end="217556e0-b6e6-41ad-9562-2741ea525750" end_index="2" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="304543b0-df44-4c87-82b5-308eb837a3a1" start_index="0" end="b286cb1d-810b-4c84-900d-47ce576eb913" end_index="2" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="2c8a8853-d33a-48c6-9549-066a4bece8f9" start_index="0" end="b286cb1d-810b-4c84-900d-47ce576eb913" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="b286cb1d-810b-4c84-900d-47ce576eb913" start_index="0" end="65615db8-8831-4d1f-bd80-163f0b9e8378" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="b286cb1d-810b-4c84-900d-47ce576eb913" start_index="0" end="b7799526-094e-4564-aac8-3370fcb9bd07" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="b286cb1d-810b-4c84-900d-47ce576eb913" start_index="0" end="feba303b-c7ce-4b0f-b6ed-42eb2e459aae" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="b286cb1d-810b-4c84-900d-47ce576eb913" start_index="1" end="03dcd92a-2941-4ebd-96fe-93c525838e1b" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="b286cb1d-810b-4c84-900d-47ce576eb913" start_index="1" end="b7799526-094e-4564-aac8-3370fcb9bd07" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="c080b489-0cbd-4910-871d-aab1da160cb3" start_index="0" end="ae63f343-d6c6-448f-8afb-46f5b5f06d12" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="2beb931c-0fc1-411b-9ff2-5db44361ac3c" start_index="0" end="ef090c89-7f56-4847-bf2b-531fb68b08ea" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="b7799526-094e-4564-aac8-3370fcb9bd07" start_index="0" end="feba303b-c7ce-4b0f-b6ed-42eb2e459aae" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="6bc4e49b-7279-4434-a5c8-1613b2e3c37f" start_index="1" end="217556e0-b6e6-41ad-9562-2741ea525750" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="6bc4e49b-7279-4434-a5c8-1613b2e3c37f" start_index="1" end="b286cb1d-810b-4c84-900d-47ce576eb913" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="dbd4a35f-392c-4634-afba-517c2a78cca0" start_index="0" end="dbf3e339-1abb-42c2-a1a7-7fc835926915" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="dbf3e339-1abb-42c2-a1a7-7fc835926915" start_index="0" end="c080b489-0cbd-4910-871d-aab1da160cb3" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="dbf3e339-1abb-42c2-a1a7-7fc835926915" start_index="0" end="f244be85-17d4-4c45-a1ef-b62d68508b98" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="dbf3e339-1abb-42c2-a1a7-7fc835926915" start_index="0" end="a53e585e-633c-420b-92f9-36d31e7707b2" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="1f79b71a-bfd3-4fc3-b701-7d9e7b99cc97" start_index="0" end="c237413d-0f2d-4d6f-b7ab-5342022cc79d" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="1f79b71a-bfd3-4fc3-b701-7d9e7b99cc97" start_index="1" end="304543b0-df44-4c87-82b5-308eb837a3a1" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="0e9274a2-43a9-4f39-b536-31c9b8867061" start_index="0" end="6fc45b64-f33e-4436-907d-3bb3af8c3292" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="a53e585e-633c-420b-92f9-36d31e7707b2" start_index="0" end="0e9274a2-43a9-4f39-b536-31c9b8867061" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="a53e585e-633c-420b-92f9-36d31e7707b2" start_index="0" end="b744fb76-93f6-4074-8eec-27c23adb92f1" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="a53e585e-633c-420b-92f9-36d31e7707b2" start_index="0" end="2029b0d7-035b-4fd8-beb1-d70ef277bed0" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="88a007f1-848a-4afa-8a09-b2d188f93719" start_index="0" end="695bc585-7704-4365-a2c9-6b7d3d3f3d99" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="6fc45b64-f33e-4436-907d-3bb3af8c3292" start_index="0" end="9a1ae5b7-f096-4b37-a609-3ccc24e25f6d" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="42bae365-de08-4948-aca1-e97bb22a1b1a" start_index="0" end="88a007f1-848a-4afa-8a09-b2d188f93719" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="42bae365-de08-4948-aca1-e97bb22a1b1a" start_index="0" end="a5ffd777-9354-40bd-a788-345fea86be5f" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="42bae365-de08-4948-aca1-e97bb22a1b1a" start_index="1" end="17e83e9c-53d4-4fe8-bd24-24dec9cdda2c" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="17e83e9c-53d4-4fe8-bd24-24dec9cdda2c" start_index="0" end="62507e9a-8fba-46af-afc8-6454bf2f5771" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="0506f421-0aa6-467f-95da-18a0b0a51337" start_index="0" end="17e83e9c-53d4-4fe8-bd24-24dec9cdda2c" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="0506f421-0aa6-467f-95da-18a0b0a51337" start_index="0" end="695bc585-7704-4365-a2c9-6b7d3d3f3d99" end_index="3" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="0506f421-0aa6-467f-95da-18a0b0a51337" start_index="0" end="ae63f343-d6c6-448f-8afb-46f5b5f06d12" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="62507e9a-8fba-46af-afc8-6454bf2f5771" start_index="0" end="4d2c7eb2-e25a-46b4-a18a-7aa15316d5ef" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="4d2c7eb2-e25a-46b4-a18a-7aa15316d5ef" start_index="0" end="9a1ae5b7-f096-4b37-a609-3ccc24e25f6d" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="9a1ae5b7-f096-4b37-a609-3ccc24e25f6d" start_index="0" end="4f6d8ac7-298d-41c7-8b1d-13ad0f8203f1" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="4f6d8ac7-298d-41c7-8b1d-13ad0f8203f1" start_index="0" end="695bc585-7704-4365-a2c9-6b7d3d3f3d99" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="bdf42912-9da3-486a-9f3e-43c8467ceef2" start_index="0" end="695bc585-7704-4365-a2c9-6b7d3d3f3d99" end_index="2" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="0eec3edd-b2b2-41fd-8c63-0ddb51e16d99" start_index="0" end="b744fb76-93f6-4074-8eec-27c23adb92f1" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="b744fb76-93f6-4074-8eec-27c23adb92f1" start_index="0" end="bdf42912-9da3-486a-9f3e-43c8467ceef2" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="a5ffd777-9354-40bd-a788-345fea86be5f" start_index="0" end="07a191b1-e8d1-4a0d-8c86-5ed8f387d0e4" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="ae63f343-d6c6-448f-8afb-46f5b5f06d12" start_index="0" end="896d670a-cad4-452c-986a-330610ace34d" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="07a191b1-e8d1-4a0d-8c86-5ed8f387d0e4" start_index="0" end="9fb5f370-7272-4e65-8193-6b52349c09a0" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="896d670a-cad4-452c-986a-330610ace34d" start_index="0" end="9fb5f370-7272-4e65-8193-6b52349c09a0" end_index="2" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="feba303b-c7ce-4b0f-b6ed-42eb2e459aae" start_index="0" end="2029b0d7-035b-4fd8-beb1-d70ef277bed0" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="2029b0d7-035b-4fd8-beb1-d70ef277bed0" start_index="0" end="a8b987bb-b888-498f-9863-ee6f76600636" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="c327881c-08e4-4f2f-806f-13682f2f6fe6" start_index="0" end="9fb5f370-7272-4e65-8193-6b52349c09a0" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="a8b987bb-b888-498f-9863-ee6f76600636" start_index="0" end="c327881c-08e4-4f2f-806f-13682f2f6fe6" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="9fb5f370-7272-4e65-8193-6b52349c09a0" start_index="0" end="f79d33e6-db4c-42df-8a33-3d65108e6c10" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="f79d33e6-db4c-42df-8a33-3d65108e6c10" start_index="0" end="148071d0-cfd2-4d30-838d-2271394cf5a4" end_index="0" portType="0" />
  </Connectors>
  <Notes>
    <Dynamo.Graph.Notes.NoteModel guid="30ffcc36-a3e3-4460-bad3-b34d3b7308e9" text="1. Tạo 1 sheet mới&#xD;&#xA;2. Place view muốn Duplicate vào Sheet&#xD;&#xA;3. Active vào trong Viewport = double click vô view&#xD;&#xA;4. Inputting&#xD;&#xA;5. Run" x="-2258.26889151997" y="-1295.09684971548" />
    <Dynamo.Graph.Notes.NoteModel guid="64570c6a-bf94-401d-8439-e094ebf3f270" text="Tất cả các View phải cùng nằm trên 1 sheet" x="135.962050252403" y="-336.822915943501" />
    <Dynamo.Graph.Notes.NoteModel guid="fdff44af-7f01-448c-8194-cfb1539c88b1" text="Tên của View = Tên view ban đầu + Tiền tố View" x="-2555.92361172634" y="-1144.01505862114" />
    <Dynamo.Graph.Notes.NoteModel guid="0b3a4ddd-c1e0-49a9-90f3-a2850bf6aca4" text="Số Sheet bắt đầu = Tiền tố Sheet Number + số thứ tự Phase" x="-2561.66358978594" y="-1077.18235483292" />
  </Notes>
  <Annotations>
    <Dynamo.Graph.Annotations.AnnotationModel guid="05fc0b7a-21e4-4b29-897b-dac5e68aea78" annotationText="Get all Phases" left="-1247.59355950663" top="-851.943945777631" width="935.2549134003" height="600.451998217768" fontSize="14" InitialTop="-821.943945777631" InitialHeight="492.83075491828" TextblockHeight="20" backgrouund="#FFC1D676">
      <Models ModelGuid="f43fbfec-8ae1-4fc3-b0a3-29fb6add9167" />
      <Models ModelGuid="04a6c7fe-4d2b-453c-8224-b67a7c646218" />
      <Models ModelGuid="f8ac1e48-ec4b-4d28-a153-8deba8792431" />
      <Models ModelGuid="c237413d-0f2d-4d6f-b7ab-5342022cc79d" />
      <Models ModelGuid="8ee6f4b8-8652-4026-8dcb-0566d39e7949" />
      <Models ModelGuid="01972f26-a0f1-4f1c-a3f4-f9da7c18eb3e" />
      <Models ModelGuid="304543b0-df44-4c87-82b5-308eb837a3a1" />
      <Models ModelGuid="1f79b71a-bfd3-4fc3-b701-7d9e7b99cc97" />
    </Dynamo.Graph.Annotations.AnnotationModel>
    <Dynamo.Graph.Annotations.AnnotationModel guid="3afebaf3-2b85-4df4-8c94-e5c16ab7327d" annotationText="Inputting" left="-2571.66358978594" top="-1325.09684971548" width="614.39469826597" height="515.998660280051" fontSize="14" InitialTop="-1295.09684971548" InitialHeight="304.285416974313" TextblockHeight="20" backgrouund="#FFFF7BAC">
      <Models ModelGuid="8caad1fb-b45d-4e2e-8a70-24f1b5f59494" />
      <Models ModelGuid="2c8a8853-d33a-48c6-9549-066a4bece8f9" />
      <Models ModelGuid="c02f792b-3300-4456-8358-9f0cf5b412ed" />
      <Models ModelGuid="dbd4a35f-392c-4634-afba-517c2a78cca0" />
      <Models ModelGuid="30ffcc36-a3e3-4460-bad3-b34d3b7308e9" />
      <Models ModelGuid="fdff44af-7f01-448c-8194-cfb1539c88b1" />
      <Models ModelGuid="0b3a4ddd-c1e0-49a9-90f3-a2850bf6aca4" />
    </Dynamo.Graph.Annotations.AnnotationModel>
    <Dynamo.Graph.Annotations.AnnotationModel guid="e3206679-a049-454d-9d32-78b3e50b1f8a" annotationText="Duplicate View and set Parameter" left="1506.09131210966" top="-776.820085651413" width="1832.7866375242" height="669.581627042635" fontSize="14" InitialTop="-746.820085651413" InitialHeight="149" TextblockHeight="20" backgrouund="#FFFFC999">
      <Models ModelGuid="f244be85-17d4-4c45-a1ef-b62d68508b98" />
      <Models ModelGuid="217556e0-b6e6-41ad-9562-2741ea525750" />
      <Models ModelGuid="88a007f1-848a-4afa-8a09-b2d188f93719" />
      <Models ModelGuid="6fc45b64-f33e-4436-907d-3bb3af8c3292" />
      <Models ModelGuid="42bae365-de08-4948-aca1-e97bb22a1b1a" />
      <Models ModelGuid="62507e9a-8fba-46af-afc8-6454bf2f5771" />
      <Models ModelGuid="4d2c7eb2-e25a-46b4-a18a-7aa15316d5ef" />
      <Models ModelGuid="9a1ae5b7-f096-4b37-a609-3ccc24e25f6d" />
      <Models ModelGuid="4f6d8ac7-298d-41c7-8b1d-13ad0f8203f1" />
      <Models ModelGuid="695bc585-7704-4365-a2c9-6b7d3d3f3d99" />
      <Models ModelGuid="bdf42912-9da3-486a-9f3e-43c8467ceef2" />
      <Models ModelGuid="b744fb76-93f6-4074-8eec-27c23adb92f1" />
      <Models ModelGuid="0e9274a2-43a9-4f39-b536-31c9b8867061" />
      <Models ModelGuid="17e83e9c-53d4-4fe8-bd24-24dec9cdda2c" />
      <Models ModelGuid="0eec3edd-b2b2-41fd-8c63-0ddb51e16d99" />
    </Dynamo.Graph.Annotations.AnnotationModel>
    <Dynamo.Graph.Annotations.AnnotationModel guid="be65f48b-5f89-45fb-953e-a17bb965e89f" annotationText="Placing Views to Sheet" left="3519.13533769497" top="-969.076708589582" width="1092.04233455862" height="365" fontSize="14" InitialTop="-939.076708589582" InitialHeight="196.327658442881" TextblockHeight="20" backgrouund="#FFC1D676">
      <Models ModelGuid="148071d0-cfd2-4d30-838d-2271394cf5a4" />
      <Models ModelGuid="f79d33e6-db4c-42df-8a33-3d65108e6c10" />
      <Models ModelGuid="9fb5f370-7272-4e65-8193-6b52349c09a0" />
      <Models ModelGuid="07a191b1-e8d1-4a0d-8c86-5ed8f387d0e4" />
      <Models ModelGuid="896d670a-cad4-452c-986a-330610ace34d" />
      <Models ModelGuid="c327881c-08e4-4f2f-806f-13682f2f6fe6" />
      <Models ModelGuid="ae63f343-d6c6-448f-8afb-46f5b5f06d12" />
      <Models ModelGuid="a5ffd777-9354-40bd-a788-345fea86be5f" />
      <Models ModelGuid="a8b987bb-b888-498f-9863-ee6f76600636" />
    </Dynamo.Graph.Annotations.AnnotationModel>
    <Dynamo.Graph.Annotations.AnnotationModel guid="82147a3a-ee5f-4ceb-81e3-6009a82d8971" annotationText="Create New Sheets" left="-212.33864610633" top="-1171.97423479" width="1299.83306054867" height="633.254499899673" fontSize="14" InitialTop="-1141.97423479" InitialHeight="251.622794205614" TextblockHeight="20" backgrouund="#FFC1D676">
      <Models ModelGuid="b286cb1d-810b-4c84-900d-47ce576eb913" />
      <Models ModelGuid="b7799526-094e-4564-aac8-3370fcb9bd07" />
      <Models ModelGuid="03dcd92a-2941-4ebd-96fe-93c525838e1b" />
      <Models ModelGuid="65615db8-8831-4d1f-bd80-163f0b9e8378" />
      <Models ModelGuid="323c3d9b-5d43-4d5c-a0f1-a455e21a7e9a" />
      <Models ModelGuid="6bc4e49b-7279-4434-a5c8-1613b2e3c37f" />
    </Dynamo.Graph.Annotations.AnnotationModel>
    <Dynamo.Graph.Annotations.AnnotationModel guid="8e38a3e1-ccd8-409a-90d3-215931fc6c6a" annotationText="&lt;Click here to edit the group title&gt;" left="-196.855715821548" top="-507.611392725887" width="716.345259601445" height="407.851784864225" fontSize="14" InitialTop="-477.611392725887" InitialHeight="317.444185380867" TextblockHeight="20" backgrouund="#FFC1D676">
      <Models ModelGuid="c080b489-0cbd-4910-871d-aab1da160cb3" />
      <Models ModelGuid="ef090c89-7f56-4847-bf2b-531fb68b08ea" />
      <Models ModelGuid="2beb931c-0fc1-411b-9ff2-5db44361ac3c" />
      <Models ModelGuid="64570c6a-bf94-401d-8439-e094ebf3f270" />
      <Models ModelGuid="dbf3e339-1abb-42c2-a1a7-7fc835926915" />
    </Dynamo.Graph.Annotations.AnnotationModel>
  </Annotations>
  <Presets />
  <Cameras>
    <Camera Name="Background Preview" eyeX="-17" eyeY="24" eyeZ="50" lookX="12" lookY="-13" lookZ="-58" upX="0" upY="1" upZ="0" />
  </Cameras>
</Workspace>