{
  "Uuid": "6267e6fe-4476-4d69-b415-7480a51ab8ca",
  "IsCustomNode": false,
  "Description": null,
  "Name": "11-ZoneArea",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [
    {
      "Id": "b467b10149ae4c27bb3fda95e58b36e2",
      "Name": "Area Scheme Name",
      "Type": "string",
      "Value": "ZoneArea",
      "Description": "Creates a string."
    }
  ],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nclr.AddReference('RevitAPIUI')\r\nfrom Autodesk.Revit.UI import TaskDialog\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nclr.AddReference(\"RevitServices\")\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\nfrom System.Collections.Generic import *\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\n\r\nclr.AddReference('System.Windows.Forms')\r\nimport System.Windows.Forms\r\nfrom System.Windows.Forms import *\r\n\r\nimport Autodesk.Revit.DB.JoinGeometryUtils as JGU\r\n\r\n##\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\nuiapp = DocumentManager.Instance.CurrentUIApplication\r\napp = uiapp.Application\r\nopt = Options()\r\n###################\r\ndef UnjoinElementAlready(e,doc,cat):\r\n\tres = []\r\n\ttry:\r\n\t\tjoinedElems = getJoinElement(e,doc,cat)\r\n\t\tfor ee in joinedElems:\r\n\t\t\tJGU.UnjoinGeometry(doc,e,ee)\r\n\t\t\tres.append(ee)\r\n\texcept Exception, ex:\r\n\t\tres.append(ex)\r\n\t\tpass\r\n\treturn res\r\n\r\n\r\ndef getJoinElement(e,doc,cat):\r\n\tres = []\r\n\ttry:\r\n\t\tjoined = JGU.GetJoinedElements(doc,e)\r\n\t\tfor j in joined:\r\n\t\t\tee = doc.GetElement(j)\r\n\t\t\tif ee.Category.Name == cat:\r\n\t\t\t\tres.append(ee)\r\n\texcept Exception, ex:\r\n\t\tres.append(ex)\r\n\t\tpass\r\n\treturn res\r\ndef allElemsOfCat (catName,doc):\r\n\tres = []\r\n\tcat = []\r\n\tfor e in doc.Settings.Categories:\r\n\t#res.append(e.Name)\r\n\t\tif e.Name == catName.ToString():\r\n\t\t\tcat = e\t\r\n\telems = FilteredElementCollector(doc).OfCategoryId(cat.Id).WhereElementIsNotElementType()\t\r\n\tfor e in elems:\r\n\t\tres.append(e)\r\n\treturn res\r\n\r\ndef allElemsIntersectedOfCat(ee,catName,doc):\r\n\tres = []\r\n\tcat = []\r\n\tfor e in doc.Settings.Categories:\r\n\t\tif e.Name == catName.ToString():\r\n\t\t\tcat = e\t\r\n\ttry:\r\n\t\telems = FilteredElementCollector(doc).OfCategoryId(cat.Id).WherePasses(ElementIntersectsElementFilter(ee))#.WhereElementIsNotElementType()\r\n\texcept Exception, ex:\r\n\t\tres.append(ex)\r\n\t\tpass\r\n\tfor eee in elems:\r\n\t\ttry:\r\n\t\t\tres.append(eee)\r\n\t\texcept Exception, ex:\r\n\t\t\tres.append(ex)\r\n\t\t\tpass\r\n\t#joined = getJoinElement(ee, doc,catName)\r\n\t#res.Add(joined)\r\n\treturn res \r\n  \r\n\r\ndef allElemsNOTIntersectedOfCat(ee,catName,doc):\r\n\tres = []\r\n\tcat = []\r\n\tfor e in doc.Settings.Categories:\r\n\t#res.append(e.Name)\r\n\t\tif e.Name == catName.ToString():\r\n\t\t\tcat = e\t\r\n\t#elems = FilteredElementCollector(doc).OfCategoryId(cat.Id).WherePasses(ElementIntersectsElementFilter(ee),False)#.WhereElementIsNotElementType()\r\n\telems = getJoinElement(ee,doc,catName)\r\n\tfor eee in elems:\r\n\t\tif not JGU.IsCuttingElementInJoin(doc, ee, eee):\r\n\t\t\tres.append(eee)\r\n\treturn res\r\n\r\ndef joinTwoElement(a,b):\r\n\ttry: \r\n\t\tboolCut = JGU.AreElementsJoined(doc,a,b)\r\n\t\t#JGU.UnjoinGeometry(doc,a,b)\r\n\t\t\r\n\t\tif not boolCut:\r\n\t\t\tJGU.JoinGeometry(doc,a,b)\r\n\t\tif not JGU.IsCuttingElementInJoin(doc,a,b):\r\n\t\t\tJGU.SwitchJoinOrder(doc,a,b)\r\n\texcept :\r\n\t\tpass\t\r\ndef UNjoinTwoElement(a,b):\r\n\tJGU.UnjoinGeometry(doc,a,b)\r\n\r\ndef joinAllEnableJoinedElemsOfCat(e,cat,doc):\r\n\telems = allElemsIntersectedOfCat(e,cat,doc)\r\n\tfor el in elems:\r\n\t\ttry:\r\n\t\t\tjoinTwoElement(e,el)\r\n\t\texcept:\r\n\t\t\tpass\r\ndef UNjoinAllNOTJoinedElemsOfCat(e,cat,doc):\r\n\telems = allElemsNOTIntersectedOfCat(e,cat,doc)\r\n\tfor el in elems:\r\n\t\tUNjoinTwoElement(e,el)\r\n\t\t\r\n##############\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nazSchemeName = IN[0]\r\nareaElems = allElemsOfCat(\"Areas\",doc)\r\nareaTypes = []\r\nareasZone = []\r\nfor a in areaElems:\r\n\tat = doc.GetElement(a.LookupParameter(\"Area Scheme Id\").AsElementId()).Name\r\n\tif at == azSchemeName:\r\n\t\tareaTypes.append(at)\r\n\t\tareasZone.append(a)\r\nazNames = []\r\nfor az in areasZone:\r\n\tazNames.append(az.LookupParameter(\"Name\").AsString())\r\n\r\n#MessageBox.Show('Hello')\r\n# Assign your output to the OUT variable.\r\nOUT = azNames",
      "VariableInputPorts": true,
      "Id": "845fc1be1ff24353a8231f833057eed1",
      "Inputs": [
        {
          "Id": "416a160e0870413ca9cbc25a91add75a",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c08b8ed4a3bd4c0081ea4540b3526bd0",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "36086207ece84fe9b860dc311daf457d",
      "Inputs": [
        {
          "Id": "c3f5759ff0c245529cfd108c0f2fd2a5",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8f75c648c1bd47f28f06d139146b7d54",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the output of node."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "ZoneArea",
      "Id": "b467b10149ae4c27bb3fda95e58b36e2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d1a8cea79396428681f4b783d9a642dc",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    }
  ],
  "Connectors": [
    {
      "Start": "c08b8ed4a3bd4c0081ea4540b3526bd0",
      "End": "c3f5759ff0c245529cfd108c0f2fd2a5",
      "Id": "6136c14250ab4c79b0bc6eb40cf4e647"
    },
    {
      "Start": "d1a8cea79396428681f4b783d9a642dc",
      "End": "416a160e0870413ca9cbc25a91add75a",
      "Id": "156a12fdc0b647c1899710c02674e8cb"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.3.0.5885",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "Python Script-Area",
        "Id": "845fc1be1ff24353a8231f833057eed1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 164.41425867635874,
        "Y": 245.97550247895964
      },
      {
        "ShowGeometry": true,
        "Name": "Watch",
        "Id": "36086207ece84fe9b860dc311daf457d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 429.0,
        "Y": 178.0
      },
      {
        "ShowGeometry": true,
        "Name": "Area Scheme Name",
        "Id": "b467b10149ae4c27bb3fda95e58b36e2",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -85.508438020854328,
        "Y": 261.42845773512016
      }
    ],
    "Annotations": [],
    "X": 26.07978355010232,
    "Y": -247.38562482933594,
    "Zoom": 0.82886518097784456
  }
}