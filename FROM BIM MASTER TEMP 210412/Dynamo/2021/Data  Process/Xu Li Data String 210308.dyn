{
  "Uuid": "a1bbd422-b302-4c26-b2c7-ba6aefe67fb7",
  "IsCustomNode": false,
  "Description": null,
  "Name": "Xu Li Data String 210308",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nimport re\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\nstrIn = \"\"\"Bê tông vách hố thang trục (5/H)\r\nBê tông vách hố thang trục (10/H)\r\nBê tông vách bể xử lý nước thải đến cote -1.900\r\nBê tông vách tường chắn đất, cột C74, C75, C76, C77, C78, C79 trục (6-9/H) đến cote +3.000\r\nBê tông cột C81, C82, C83, C84, C82a, C83a\r\nVách bể tự hoại trục (11-12/L-M)\r\nBê tông vách tường chắn đất, cột C74, C75, C76, C77, C78, C79 trục (6-9/H) từ cote +3.000 đến cote +4.700\r\nVách bể tự hoại trục (11-12/L-M)\r\nCột C20, C21, C28 bể XLNT\r\nVách thang máy 1F trục (5/H) đến cote +3.000\r\nCột C66, C68, C70, vách W15, W15a tầng 1\r\nVách thang máy 1F trục (10/H) đến cote +3.000\r\nC47, C48, C49, C53, C54, C62, C63, C64, C67, C69, C71 trục (8-10/P2-G)\r\nW18, W18a trục (9/F-G)\r\n\"\"\"\r\ncond1=\"\"\"u\tu\r\nú\tu\r\nù\tu\r\nủ\tu\r\nũ\tu\r\nụ\tu\r\nư\tu\r\nứ\tu\r\nừ\tu\r\nử\tu\r\nữ\tu\r\nự\tu\r\ne\te\r\né\te\r\nè\te\r\nẻ\te\r\nẽ\te\r\nẹ\te\r\nê\te\r\nế\te\r\nề\te\r\nể\te\r\nễ\te\r\nệ\te\r\no\to\r\nó\to\r\nò\to\r\nỏ\to\r\nõ\to\r\nọ\to\r\nơ\to\r\nớ\to\r\nờ\to\r\nở\to\r\nỡ\to\r\nợ\to\r\nô\to\r\nố\to\r\nồ\to\r\nổ\to\r\nỗ\to\r\nộ\to\r\na\ta\r\ná\ta\r\nà\ta\r\nả\ta\r\nã\ta\r\nạ\ta\r\nă\ta\r\nắ\ta\r\nằ\ta\r\nẳ\ta\r\nẵ\ta\r\nặ\ta\r\nâ\ta\r\nấ\ta\r\nầ\ta\r\nẩ\ta\r\nẫ\ta\r\nậ\ta\r\ni\ti\r\ní\ti\r\nì\ti\r\nỉ\ti\r\nĩ\ti\r\nị\ti\r\ny\ty\r\ný\ty\r\nỳ\ty\r\nỷ\ty\r\nỹ\ty\r\nỵ\ty\"\"\"\r\n\r\ncond2=\"\"\"bê tông\tConcrete\r\nvách\tWall\r\nhố thang\tElevator Pit\r\nbể xử lí nước thải\tWater Treatment Tank\r\nbể XLNT\tWater Treatment Tank\r\nXLNT\tWater Treatment\r\nbể tự hoại\tSewage tank\r\ncột\tColumn\r\nchắn đất\tParam Wall\r\nthang máy\tElevator\r\ntrục\tGrid\r\nđến cote\tLevel Elevation\"\"\"\r\ndef fun1(str):\r\n\tres = re.sub(\" \",\"\",str)\r\n\tfor cd in cond1.Split(\"\\n\"):\r\n\t\tres = re.sub(cd.Split(\"\\t\")[0],cd.Split(\"\\t\")[1],res).lower()\r\n\treturn res#re.sub(\" \",\"\",str)\r\ndef fun2(cond2):\r\n\tres = []\r\n\tfor cd2 in cond2.split(\"\\n\"):\r\n\t\tr=[]\r\n\t\tr.append(fun1(cd2.split(\"\\t\")[0]))\r\n\t\tr.append(fun1(cd2.split(\"\\t\")[1]))\r\n\t\tres.append(r)\r\n\treturn res\r\ndef fun3(str,conds):\r\n\tres = \"\"\r\n\tfor cd in conds:\r\n\t\tif cd[0] in str:\r\n\t\t\tres += \"#\"+cd[1]\r\n\treturn res\r\ndef fun4(strIn,cond2): #hastag LIST\r\n\tres = []\r\n\tfor str in strIn.Split(\"\\n\"):\r\n\t\tres.append(fun3(fun1(str),fun2(cond2)))\r\n\treturn res\r\ndef fun41(strIn,cond2): #hastag 1 LINE\r\n\tres = \"\"\r\n\tfor str in strIn.Split(\"\\n\"):\r\n\t\tres += fun3(fun1(str),fun2(cond2)) +\"\\n\"\r\n\treturn res\t\r\ndef writeTxtFromTxtString(PATH, exDat): #from txt string\r\n\twith open(PATH,\"w\") as f:\r\n\t\tf.write(exDat.encode('utf8'))\t\r\n\treturn exDat\r\n#write txt\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = writeTxtFromTxtString(\"R:\\\\BimESC\\\\01_PROJECTS\\MOVENPICK HOTEL\\\\02-WIP\\\\06 ONEPLACE\\\\test\\\\text.txt\",fun41(strIn,cond2))",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "c9fcec325be14fbd9076e650f3d3dfc1",
      "Inputs": [
        {
          "Id": "5777a84f799644e9a8f8afcb5fb7e0e4",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4a016ec3fed7456ab33426394137cbfd",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "2bdb57329aad40c6b95300972c560ac0",
      "Inputs": [
        {
          "Id": "00788b40799e411ab7db5a4a3986fccb",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9f01376b0ffd4965ba897414f657a36d",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the output of node."
    }
  ],
  "Connectors": [
    {
      "Start": "4a016ec3fed7456ab33426394137cbfd",
      "End": "00788b40799e411ab7db5a4a3986fccb",
      "Id": "265dcaac6cb640128c639360d7797c09"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.10.0.3455",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "c9fcec325be14fbd9076e650f3d3dfc1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 416.92683030956368,
        "Y": 487.50902971186048
      },
      {
        "ShowGeometry": true,
        "Name": "Watch",
        "Id": "2bdb57329aad40c6b95300972c560ac0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 670.12481059218283,
        "Y": 460.66668445310842
      }
    ],
    "Annotations": [],
    "X": -280.38991187896647,
    "Y": -306.08860864012229,
    "Zoom": 0.93786713211844475
  }
}