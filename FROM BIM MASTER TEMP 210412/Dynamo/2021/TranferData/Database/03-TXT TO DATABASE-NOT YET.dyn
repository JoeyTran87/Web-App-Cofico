{
  "Uuid": "e93ad43d-789d-46b5-a19c-09805f9f991b",
  "IsCustomNode": false,
  "Description": null,
  "Name": "TRANFER DATA EXCEL TO EXCEL",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [
    {
      "Id": "1ad00db289ed4eaca690a14ad31f3425",
      "Name": "Sheet name 1",
      "Type": "string",
      "Value": "QTO",
      "Description": "Creates a string."
    },
    {
      "Id": "00a0be41f1bf4b0aac8ad9564ab4c42b",
      "Name": "Sheet name 2",
      "Type": "string",
      "Value": "WorkItemData",
      "Description": "Creates a string."
    }
  ],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "HintPath": "R:\\BimESC\\00-BIM STANDARD\\DYNAMO\\210223\\wip\\BIMData.xlsx",
      "InputValue": ".\\BIMData.xlsx",
      "NodeType": "ExtensionNode",
      "Id": "1306dab7588c4a5282086b009ba55ff8",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "807d4f8ea84b44b4b4d8613080790e2a",
          "Name": "",
          "Description": "Filename",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a file on the system to get its filename"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSOffice.Data.ImportExcel@var,string,bool,bool",
      "Id": "94c934f3920b46239f8d113d63cc6fed",
      "Inputs": [
        {
          "Id": "3e4c8c21b6204a3fab8be39d1493a474",
          "Name": "file",
          "Description": "File representing the Microsoft Excel spreadsheet.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "988510795036438585d5da1102a0839a",
          "Name": "sheetName",
          "Description": "Name of the worksheet containing the data.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "87bc720e873646a4ae7d1b86e655dfa6",
          "Name": "readAsStrings",
          "Description": "Toggle to switch between reading Excel file as strings.\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ac697512f77a442788e05a6df22bea8f",
          "Name": "showExcel",
          "Description": "Toggle to switch between showing and hiding the main Excel window.\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "efac13eec9ca4e99a6a441f3af220529",
          "Name": "data",
          "Description": "Rows of data from the Excel worksheet.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Read data from a Microsoft Excel spreadsheet. Data is read by row and returned in a series of lists by row. Rows and columns are zero-indexed; for example, the value in cell A1 will appear in the data list at [0,0]. This node requires Microsoft Excel to be installed.\n\nData.ImportExcel (file: var, sheetName: string, readAsStrings: bool = false, showExcel: bool = true): var[][]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "QTO",
      "Id": "1ad00db289ed4eaca690a14ad31f3425",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4d892139810b423d8640ec554a67e283",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "c774fe4499934bde9f83395fcb6d9902",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "96406bb0d1f346589c16d31940bf9cf5",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSOffice.Data.ImportExcel@var,string,bool,bool",
      "Id": "2631cab960054815bf55d1750aa2eea7",
      "Inputs": [
        {
          "Id": "0ebc517d4bc44cd0a748d765f5ef1076",
          "Name": "file",
          "Description": "File representing the Microsoft Excel spreadsheet.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c49473be884e4e1faa4727b51bc1374c",
          "Name": "sheetName",
          "Description": "Name of the worksheet containing the data.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "95ffb8c7aa734ffa80b743ee7aa6c986",
          "Name": "readAsStrings",
          "Description": "Toggle to switch between reading Excel file as strings.\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "19f3126fdd6f408cafd1939640d1ac1c",
          "Name": "showExcel",
          "Description": "Toggle to switch between showing and hiding the main Excel window.\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8026f7a426d247dcaff69e0a089dfa23",
          "Name": "data",
          "Description": "Rows of data from the Excel worksheet.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Read data from a Microsoft Excel spreadsheet. Data is read by row and returned in a series of lists by row. Rows and columns are zero-indexed; for example, the value in cell A1 will appear in the data list at [0,0]. This node requires Microsoft Excel to be installed.\n\nData.ImportExcel (file: var, sheetName: string, readAsStrings: bool = false, showExcel: bool = true): var[][]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "HintPath": "R:\\BimESC\\00-BIM STANDARD\\DYNAMO\\210223\\wip\\DOF- SCHEDULE REPORT-210130 (2).xlsx",
      "InputValue": ".\\DOF- SCHEDULE REPORT-210130 (2).xlsx",
      "NodeType": "ExtensionNode",
      "Id": "45a556badeca4a82b08d184184997d77",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c45a3e3b3c8e43d3a956bee0454df8e4",
          "Name": "",
          "Description": "Filename",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a file on the system to get its filename"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "WorkItemData",
      "Id": "00a0be41f1bf4b0aac8ad9564ab4c42b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f875487103af4b30b465b091d5909592",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.FileObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "96b02b688a504d64893aab526dcdd773",
      "Inputs": [
        {
          "Id": "30219b1bfc7249ca8de052448f4a21e2",
          "Name": "path",
          "Description": "Path to the file.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f1e7fb839f8e4a7e8e0421ab9b844f38",
          "Name": "file",
          "Description": "File object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a file object from a path."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.FileObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "9d02ded3d3a341fd9b9d95000fe84de3",
      "Inputs": [
        {
          "Id": "3eb011ce6d114d0ebd7d78e9202cf203",
          "Name": "path",
          "Description": "Path to the file.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8b67d9bfbf494aab99a209bb6cacc305",
          "Name": "file",
          "Description": "File object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a file object from a path."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "63e8aaa51eb44c70ab13e71366c734cb",
      "Inputs": [
        {
          "Id": "82116e2c9f9e49a482579bc397fa20f0",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f70d2818c63645a8921c867e12c488f0",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the output of node."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('System.IO')\r\nclr.AddReference('System.Drawing')\r\nclr.AddReference('System.Reflection')\r\nclr.AddReference('System.Threading')\r\nclr.AddReference(\"System.Windows.Forms\")\r\n\r\nimport System\r\nimport System.IO\r\nimport System.Drawing\r\nimport System.Reflection\r\nimport System.Windows.Forms\r\n\r\nfrom System.Threading import ApartmentState, Thread, ThreadStart\r\nfrom System.Windows.Forms import *\r\n\r\nimport os\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nexDat = IN[0]\r\npathIN = IN[1]\r\n\r\n#FILE PATH\r\ndir = \"\"\r\nfor p in pathIN.split(\"\\\\\")[:-1]:\r\n\tdir += p + \"\\\\\" \r\npath = dir+pathIN.split(\"\\\\\")[-1].split(\".\")[0]+\".txt\"\r\n\r\n#list1Line = []\r\nallText=\"\"\r\n\r\nTAB = \"\\t\"\r\nBREAKLINE = \"\\n\"\r\n\r\ntest1 = os.path.isdir(path)\r\ntest2 = os.path.exists(path)\r\ntest3 = os.path.isfile(path)\r\n\r\n# Place your code below this line\r\n\r\ndef writeTxtFromExcelDat(exDat,_TAB,_BREAKLINE): #from excel data list\r\n\tallText=\"\"\r\n\tTAB = _TAB\r\n\tBREAKLINE = _BREAKLINE\t\r\n\tfor d in exDat:\r\n\t\tstr = \"\"\r\n\t\tstrF = \"{0}{1}\"\t\t\r\n\t\tif d[0] and len(d)>0:\t\t\r\n\t\t\tfor c in d:\r\n\t\t\t\tif c:\r\n\t\t\t\t\tstr += strF.format(c,TAB)\r\n\t\tif len(str)>0:\r\n\t\t\tstr += BREAKLINE\t\r\n\t\t#list1Line.append(str)\r\n\t\tallText += str\t\r\n\tf = open(path,\"w\")\r\n\tf.write(allText.encode('utf8'))\r\n\tf.close\r\n\treturn allText\r\ndef writeTxtFromTxtString(exDat,_TAB,_BREAKLINE): #from txt string\t\r\n\tf = open(path,\"w\")\r\n\tf.write(exDat.encode('utf8'))\r\n\tf.close\r\n\treturn exDat\r\n###################\r\nif not test1 and len(exDat) >0:\r\n\tallText = writeTxtFromExcelDat(exDat,TAB,BREAKLINE)\r\n#MessageBox.Show(allText)\r\n# Assign your output to the OUT variable.\r\nOUT = allText",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "ecba35a76c114460acdafb54cbebc377",
      "Inputs": [
        {
          "Id": "4cec58cf58f54091b50ec5976f9a8724",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5bcf36705ed64ed988fdb53e3ee28647",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1c3c718fedca4d9da4b1c4f6beb14809",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('System.IO')\r\nclr.AddReference('System.Drawing')\r\nclr.AddReference('System.Reflection')\r\nclr.AddReference('System.Threading')\r\nclr.AddReference(\"System.Windows.Forms\")\r\n\r\nimport System\r\nimport System.IO\r\nimport System.Drawing\r\nimport System.Reflection\r\nimport System.Windows.Forms\r\n\r\nfrom System.Threading import ApartmentState, Thread, ThreadStart\r\nfrom System.Windows.Forms import *\r\n\r\nimport os\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nexDat = IN[0]\r\npathIN = IN[1]\r\n\r\n#FILE PATH\r\ndir = \"\"\r\nfor p in pathIN.split(\"\\\\\")[:-1]:\r\n\tdir += p + \"\\\\\" \r\npath = dir+pathIN.split(\"\\\\\")[-1].split(\".\")[0]+\".txt\"\r\n\r\n#list1Line = []\r\nallText=\"\"\r\n\r\nTAB = \"\\t\"\r\nBREAKLINE = \"\\n\"\r\n\r\ntest1 = os.path.isdir(path)\r\ntest2 = os.path.exists(path)\r\ntest3 = os.path.isfile(path)\r\n\r\n# Place your code below this line\r\n\r\ndef writeTxtFromExcelDat(exDat,_TAB,_BREAKLINE): #from excel data list\r\n\tallText=\"\"\r\n\tTAB = _TAB\r\n\tBREAKLINE = _BREAKLINE\t\r\n\tfor d in exDat:\r\n\t\tstr = \"\"\r\n\t\tstrF = \"{0}{1}\"\t\t\r\n\t\tif d[0] and len(d)>0:\t\t\r\n\t\t\tfor c in d:\r\n\t\t\t\tif c:\r\n\t\t\t\t\tstr += strF.format(c,TAB)\r\n\t\tif len(str)>0:\r\n\t\t\tstr += BREAKLINE\t\r\n\t\t#list1Line.append(str)\r\n\t\tallText += str\t\r\n\tf = open(path,\"w\")\r\n\tf.write(allText.encode('utf8'))\r\n\tf.close\r\n\treturn allText\r\ndef writeTxtFromTxtString(exDat,_TAB,_BREAKLINE): #from txt string\t\r\n\tf = open(path,\"w\")\r\n\tf.write(exDat.encode('utf8'))\r\n\tf.close\r\n\treturn exDat\r\n###################\r\nif not test1 and len(exDat) >0:\r\n\tallText = writeTxtFromExcelDat(exDat,TAB,BREAKLINE)\r\n#MessageBox.Show(allText)\r\n# Assign your output to the OUT variable.\r\nOUT = allText",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "57b99fdc267943718a53f43109b24abe",
      "Inputs": [
        {
          "Id": "febf8b4f70c14e298f06f2eba00305a6",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b5e5378cf9774a0eb7c7704b5cbaa264",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e23e74a733fe43d187f4eb94518ba72d",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "2aafca4723fb47a5951e8d4200dcc703",
      "Inputs": [
        {
          "Id": "904c1d80d74c4e37a81af6a44d708b60",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ab73679bd30b4af0872c772f29e61b7d",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the output of node."
    }
  ],
  "Connectors": [
    {
      "Start": "807d4f8ea84b44b4b4d8613080790e2a",
      "End": "30219b1bfc7249ca8de052448f4a21e2",
      "Id": "ff19a0a962f449bc98b138ab4ce85fb1"
    },
    {
      "Start": "807d4f8ea84b44b4b4d8613080790e2a",
      "End": "5bcf36705ed64ed988fdb53e3ee28647",
      "Id": "ced0fdb5cbb24661baa3ec622b6a0366"
    },
    {
      "Start": "807d4f8ea84b44b4b4d8613080790e2a",
      "End": "b5e5378cf9774a0eb7c7704b5cbaa264",
      "Id": "3e3b26be03764bb29608985a31deb206"
    },
    {
      "Start": "efac13eec9ca4e99a6a441f3af220529",
      "End": "4cec58cf58f54091b50ec5976f9a8724",
      "Id": "56ae6a2b658c4d65bd1ccf0199b33790"
    },
    {
      "Start": "4d892139810b423d8640ec554a67e283",
      "End": "988510795036438585d5da1102a0839a",
      "Id": "19c6027cb315489a9e29e69f3d2eab7e"
    },
    {
      "Start": "96406bb0d1f346589c16d31940bf9cf5",
      "End": "87bc720e873646a4ae7d1b86e655dfa6",
      "Id": "94b76c0e17364c449df7b72fa2186b25"
    },
    {
      "Start": "96406bb0d1f346589c16d31940bf9cf5",
      "End": "ac697512f77a442788e05a6df22bea8f",
      "Id": "2c3fe7b3b6fd42759f29045308af5cbb"
    },
    {
      "Start": "96406bb0d1f346589c16d31940bf9cf5",
      "End": "95ffb8c7aa734ffa80b743ee7aa6c986",
      "Id": "ba5652a0068c4727b077006891743924"
    },
    {
      "Start": "96406bb0d1f346589c16d31940bf9cf5",
      "End": "19f3126fdd6f408cafd1939640d1ac1c",
      "Id": "7c5bbbe947894ef2ad78101a55c9fb2f"
    },
    {
      "Start": "8026f7a426d247dcaff69e0a089dfa23",
      "End": "febf8b4f70c14e298f06f2eba00305a6",
      "Id": "10e5279ff63845238bdd4fd864ebc9b5"
    },
    {
      "Start": "c45a3e3b3c8e43d3a956bee0454df8e4",
      "End": "3eb011ce6d114d0ebd7d78e9202cf203",
      "Id": "19d07d02d6834fe68e18aacd5d97d564"
    },
    {
      "Start": "f875487103af4b30b465b091d5909592",
      "End": "c49473be884e4e1faa4727b51bc1374c",
      "Id": "9d74d3650857452eb352d55f3dc03870"
    },
    {
      "Start": "f1e7fb839f8e4a7e8e0421ab9b844f38",
      "End": "3e4c8c21b6204a3fab8be39d1493a474",
      "Id": "935eb073c89a4e3f88fd8dc2fccb42a2"
    },
    {
      "Start": "8b67d9bfbf494aab99a209bb6cacc305",
      "End": "0ebc517d4bc44cd0a748d765f5ef1076",
      "Id": "c86da5d6d18f4174a81453e87582696f"
    },
    {
      "Start": "1c3c718fedca4d9da4b1c4f6beb14809",
      "End": "82116e2c9f9e49a482579bc397fa20f0",
      "Id": "90b12d90b7604f408a0c8ec9d44d88d7"
    },
    {
      "Start": "e23e74a733fe43d187f4eb94518ba72d",
      "End": "904c1d80d74c4e37a81af6a44d708b60",
      "Id": "2d4b4c8ee09c41a988b433df48d7f386"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.10.0.3455",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "File Path-GetData",
        "Id": "1306dab7588c4a5282086b009ba55ff8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 198.61008609213974,
        "Y": 37.415934224682445
      },
      {
        "ShowGeometry": true,
        "Name": "Data.ImportExcel",
        "Id": "94c934f3920b46239f8d113d63cc6fed",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 879.46809346454165,
        "Y": 88.460050667921678
      },
      {
        "ShowGeometry": true,
        "Name": "Sheet name 1",
        "Id": "1ad00db289ed4eaca690a14ad31f3425",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 203.19484246092418,
        "Y": 160.13227451852663
      },
      {
        "ShowGeometry": true,
        "Name": "Boolean",
        "Id": "c774fe4499934bde9f83395fcb6d9902",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 398.964450812566,
        "Y": 258.17320858362689
      },
      {
        "ShowGeometry": true,
        "Name": "Data.ImportExcel",
        "Id": "2631cab960054815bf55d1750aa2eea7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 880.02794885084541,
        "Y": 365.27666380246342
      },
      {
        "ShowGeometry": true,
        "Name": "File Path-Write data to",
        "Id": "45a556badeca4a82b08d184184997d77",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 147.88542710118105,
        "Y": 364.97696904845452
      },
      {
        "ShowGeometry": true,
        "Name": "Sheet name 2",
        "Id": "00a0be41f1bf4b0aac8ad9564ab4c42b",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 209.04257729093678,
        "Y": 479.16656832549086
      },
      {
        "ShowGeometry": true,
        "Name": "File From Path",
        "Id": "96b02b688a504d64893aab526dcdd773",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 546.5770181809188,
        "Y": 86.219700554271441
      },
      {
        "ShowGeometry": true,
        "Name": "File From Path",
        "Id": "9d02ded3d3a341fd9b9d95000fe84de3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 552.78521737328686,
        "Y": 390.45112891262232
      },
      {
        "ShowGeometry": true,
        "Name": "Watch",
        "Id": "63e8aaa51eb44c70ab13e71366c734cb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1519.9428230665903,
        "Y": -342.20247079138539
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "ecba35a76c114460acdafb54cbebc377",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1280.5525802090831,
        "Y": 122.88305055364867
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "57b99fdc267943718a53f43109b24abe",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1292.0476766556699,
        "Y": 358.1877927097749
      },
      {
        "ShowGeometry": true,
        "Name": "Watch",
        "Id": "2aafca4723fb47a5951e8d4200dcc703",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1546.0309676071352,
        "Y": 227.14748144758153
      }
    ],
    "Annotations": [],
    "X": -810.9985282930561,
    "Y": 148.61844637502452,
    "Zoom": 0.71698295155822667
  }
}