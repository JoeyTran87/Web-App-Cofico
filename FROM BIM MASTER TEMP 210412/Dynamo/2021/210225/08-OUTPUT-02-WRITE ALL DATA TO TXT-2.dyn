{
  "Uuid": "3c9d0464-8643-5ffe-96e5-ab1769818209",
  "IsCustomNode": false,
  "Description": "",
  "Name": "08-OUTPUT-02-WRITE ALL DATA TO TXT-2",
  "ElementResolver": {
    "ResolutionMap": {
      "List": {
        "Key": "List",
        "Value": "BuiltIn.ds"
      }
    }
  },
  "Inputs": [
    {
      "Id": "85cea14d2dd94e1a85f60b881d20cd40",
      "Name": "Browse DIR manualy",
      "Type": "boolean",
      "Value": "false",
      "Description": "Selection between a true and false."
    },
    {
      "Id": "2380f17afee247ff97aa23f6550eb2ac",
      "Name": "Directory Path",
      "Type": "string",
      "Value": "C:\\Users\\USER\\Downloads",
      "Description": "Allows you to select a directory on the system to get its path"
    }
  ],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nclr.AddReference('RevitAPIUI')\r\nfrom Autodesk.Revit.UI import TaskDialog\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nclr.AddReference(\"RevitServices\")\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\nfrom System.Collections.Generic import *\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\n\r\n##\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\nuiapp = DocumentManager.Instance.CurrentUIApplication\r\napp = uiapp.Application\r\n\r\nopt = Options()\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n\r\n\r\n##\r\n\r\nres = []\r\ndir = \"\"\r\ndataFullPath =\"\"\r\n\r\n#\r\ntry:\r\n\tp = doc.PathName.split(\"\\\\\")\r\n\tpp = p[0:len(p)-1]\r\n\r\n\tfor s in pp:\r\n\t\tdir += s + \"\\\\\"\r\nexcept:\r\n\tpass\r\n\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = dir,doc.PathName.split(\"\\\\\")[-1].split(\".\")[0]",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "18ec972b473b4272969d8e2115eee377",
      "Inputs": [
        {
          "Id": "791f2c4f4c244b4bbd668bf0e87131be",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6f267b4b1b104a8d90e66e8057913ada",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "shn = \"QTO.ITEM.DAT\";\nSOCats = \"SOCats\";\nQTOdata = \"QTO.ITEM.DAT\";",
      "Id": "2304b0b89bb64748bf5be85e45904bbe",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a0a7d3cdd0354356be99c8828c52db99",
          "Name": "",
          "Description": "shn",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "52e47c7004ff4936bea1fd24122c3e02",
          "Name": "",
          "Description": "SOCats",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9bd4c9996986462f931e45aab22a7569",
          "Name": "",
          "Description": "QTOdata",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nclr.AddReference('RevitAPIUI')\r\nfrom Autodesk.Revit.UI import TaskDialog\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nclr.AddReference(\"RevitServices\")\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\nfrom System.Collections.Generic import *\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\n\r\n##\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\nuiapp = DocumentManager.Instance.CurrentUIApplication\r\napp = uiapp.Application\r\n\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\n\r\n\r\nt = Transaction(doc)\r\n\t\r\nt.Start(\"Units setup\")\r\ntry:\r\n\t#Area\r\n\tunit = Units(UnitSystem.Metric)\r\n\r\n\tfmOp = FormatOptions(DisplayUnitType.DUT_SQUARE_METERS,UnitSymbolType.UST_NONE,0.001)\r\n\t\r\n\tunit.SetFormatOptions(UnitType.UT_Area,fmOp)\r\n\t\r\n\tdoc.SetUnits(unit)\r\n\t#Volume\r\n\tunit1 = Units(UnitSystem.Metric)\r\n\r\n\tfmOp1 = FormatOptions(DisplayUnitType.DUT_CUBIC_METERS,UnitSymbolType.UST_NONE,0.001)\r\n\t\r\n\tunit.SetFormatOptions(UnitType.UT_Volume,fmOp1)\r\n\t\r\n\tdoc.SetUnits(unit)\r\n\t#doc.GetUnits().SetFormatOptions(UnitType.UT_Area,fmOp)\r\nexcept Exception, e:\r\n\tpass\r\nt.Commit()\r\n\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = 0",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "00a0f89a880b4019abc2622db9a7ee7e",
      "Inputs": [
        {
          "Id": "9d453d04f4394058a8b3bec7d622f3c2",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b4a640dd38184f0a8d56ce344c02d6fe",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nclr.AddReference('RevitAPIUI')\r\nfrom Autodesk.Revit.UI import TaskDialog\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nclr.AddReference(\"RevitServices\")\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\nfrom System.Collections.Generic import *\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\n\r\n##\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\nuiapp = DocumentManager.Instance.CurrentUIApplication\r\napp = uiapp.Application\r\n\r\nopt = Options()\r\ncategories = doc.Settings.Categories\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ncats = IN[0]\r\nprojectInfoDat = IN[1]\r\n# Place your code below this line\r\nres = []\r\nmodel_cat = []\r\nparamsets = []\r\ntypeparamsets = []\r\n\r\nelemDat=[]\r\n\r\n#NOTE\r\n\r\nTAB = \"____\"\r\nATTBREAK = \" : \"\r\nLINEBREAK = \"\\n\"\r\ndef getProperties (params):\r\n\toneline = \"\"\r\n\tfor p in params:\t\t\r\n\t\ttry:\r\n\t\t\tcbTxt = \"{0}{2}{1}\"\t\t\t\r\n\t\t\tn = p.Definition.Name\r\n\t\t\tv= \"\"\r\n\t\t\tif p.AsValueString():\r\n\t\t\t\tv = p.AsValueString()\r\n\t\t\telse:\r\n\t\t\t\tif p.StorageType == StorageType.String:\r\n\t\t\t\t\tif p.AsString():\r\n\t\t\t\t\t\tv = p.AsString()\t\t\r\n\t\t\toneline += cbTxt.format(n,v,ATTBREAK) + TAB\r\n\t\texcept:\r\n\t\t\tpass\r\n\treturn oneline\r\n\r\n###\r\ntry:\r\n\t### get all elements of categories\r\n\tfor c in categories:\r\n\t\tfor cat in cats:\r\n\t\t\tif cat and c.Name == cat:\r\n\t\t\t\tfor e in FilteredElementCollector(doc).OfCategoryId(c.Id).WhereElementIsNotElementType().ToElements():\r\n\t\t\t\t\tres.append(e)\r\nexcept:\r\n\tpass\r\n\r\n######## ParameterSet\r\nstrDat = \"\"\r\nfor e in res:\r\n\ttry:\r\n\t\t# projectInfoDat + BREAK\r\n\t\t#type property\r\n\t\ttyp = doc.GetElement(e.GetTypeId())\r\n\t\tstrDat += getProperties(typ.Parameters) + TAB\r\n\t\t#instance property\r\n\t\tstrDat +=  getProperties(e.Parameters) + TAB\t\r\n\t\tstrDat +=  LINEBREAK\t\r\n\t\telemDat.append(strDat)\t\r\n\texcept:\r\n\t\tpass\t\r\n# Assign your output to the OUT variable.\r\nOUT = strDat#elemDat",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "d3c1e3ad607143dcb9544b6c62fddd35",
      "Inputs": [
        {
          "Id": "6b9469459ab944e293a164d3a000e798",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4a7a1e533e9042fea32367312ec7583d",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9a05bf7cfb644ba1a9dadfa67c9d111a",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nclr.AddReference('RevitAPIUI')\r\nfrom Autodesk.Revit.UI import TaskDialog\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nclr.AddReference(\"RevitServices\")\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\nfrom System.Collections.Generic import *\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\n\r\n##\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\nuiapp = DocumentManager.Instance.CurrentUIApplication\r\napp = uiapp.Application\r\n####\r\n\r\nBREAK = \"____\"\r\nATTBREAK = \" : \"\r\n\r\n\r\n\r\ndef getProperties (params):\r\n\toneline = \"\"\r\n\tfor p in params:\t\t\r\n\t\ttry:\r\n\t\t\tcbTxt = \"{0}{2}{1}\"\t\t\t\r\n\t\t\tn = p.Definition.Name\r\n\t\t\tv= \"\"\r\n\t\t\tif p.AsValueString():\r\n\t\t\t\tv = p.AsValueString()\r\n\t\t\telse:\r\n\t\t\t\tif p.StorageType == StorageType.String:\r\n\t\t\t\t\tif p.AsString():\r\n\t\t\t\t\t\tv = p.AsString()\t\t\r\n\t\t\toneline += cbTxt.format(n,v,ATTBREAK) + BREAK\r\n\t\texcept:\r\n\t\t\tpass\r\n\treturn oneline\r\n###\r\nopt = Options()\r\ncategories = doc.Settings.Categories\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n# Place your code below this line\r\nprojectInfoDat=\"\"\r\n\r\ntry:\r\n\t### get all elements of categories\r\n\tfor c in categories:\r\n\t\tif c.Name == \"Project Information\":\r\n\t\t\tprojInfo = FilteredElementCollector(doc).OfCategoryId(c.Id).WhereElementIsNotElementType().ToElements()[0]\r\n\t######## ParameterSet\r\n\t#instance property\r\n\tprojectInfoDat = getProperties(projInfo.Parameters)\r\n\t\t\r\nexcept:\r\n\tpass\r\n\r\nOUT = projectInfoDat",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "4b8ce2e1696f47eba0c225307dec6e1f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "760a1d6b60964e6cb415b7f8e4e31dcd",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "dir;",
      "Id": "e9e717f70a6d47b9997305cdabb7eedf",
      "Inputs": [
        {
          "Id": "d43a4cf3ae0a4df7beaf82955eb7c70f",
          "Name": "dir",
          "Description": "dir",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d723f59df11c49fa85a18bd5505e8d21",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "dir+shn+\".txt\";",
      "Id": "69c1ad048a6b48af88940878fc7f88f8",
      "Inputs": [
        {
          "Id": "758107aa570744eaa6c9c5c0cafd7506",
          "Name": "dir",
          "Description": "dir",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ad28039373c04c4387998720c0f64d03",
          "Name": "shn",
          "Description": "shn",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fc5b9b026325499898115c1223357d89",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('System.IO')\r\nclr.AddReference('System.Drawing')\r\nclr.AddReference('System.Reflection')\r\nclr.AddReference('System.Threading')\r\nclr.AddReference(\"System.Windows.Forms\")\r\n\r\nimport System\r\nimport System.IO\r\nimport System.Drawing\r\nimport System.Reflection\r\nimport System.Windows.Forms\r\n\r\nfrom System.Threading import ApartmentState, Thread, ThreadStart\r\nfrom System.Windows.Forms import *\r\n\r\nfrom shutil import copyfile\r\nimport tempfile\r\nimport os\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nexDat = IN[0]\r\n_path = IN[1]\r\n#list1Line = []\r\nallText=\"\"\r\n\r\nTAB = \"\\t\"\r\nBREAKLINE = \"\\n\"\r\n\r\ntest1 = os.path.isdir(_path)\r\ntest2 = os.path.exists(_path)\r\ntest3 = os.path.isfile(_path)\r\n\r\n# Place your code below this line\r\n\r\n#WRITE EXCEL DATA LIST TO TEMP TXT FILE THEN COPY TO TARGET PATH\r\ndef writeTxtFromExcelDat(exDat,_TAB,_BREAKLINE): #from excel data list\r\n\tallText=\"\"\r\n\tTAB = _TAB\r\n\tBREAKLINE = _BREAKLINE\t\r\n\tfor d in exDat:\r\n\t\tstr = \"\"\r\n\t\tstrF = \"{0}{1}\"\t\t\r\n\t\tif d[0] and len(d)>0:\t\t\r\n\t\t\tfor c in d:\r\n\t\t\t\tif c:\r\n\t\t\t\t\tstr += strF.format(c,TAB)\r\n\t\tif len(str)>0:\r\n\t\t\tstr += BREAKLINE\t\r\n\t\t#list1Line.append(str)\r\n\t\tallText += str\t\r\n\tf = open(path,\"w\")\r\n\tf.write(allText.encode('utf8'))\r\n\tf.close\r\n\treturn allText\r\n\t\r\n#WRITE \"ONE_LINE\" DATA TO TEMP TXT FILE THEN COPY TO TARGET PATH\r\ndef writeTxtFromTxtString(PATH, exDat,_TAB,_BREAKLINE): #from txt string\r\n\twith open(PATH,\"w\") as f:\r\n\t\tf.write(exDat.encode('utf8'))\t\t\r\n\tcopyfile(PATH, _path)\r\n\tif os.path.isfile(_path):\r\n\t\tos.remove(PATH)\r\n\treturn exDat\r\n###################\r\n\r\ntempDir = tempfile.gettempdir()\r\nfileName = _path.split(\"\\\\\")[-1]\r\nPATH = tempDir + fileName\r\nif not test1 and len(exDat) >0:\r\n\tallText = writeTxtFromTxtString(PATH, exDat,TAB,BREAKLINE)\r\n#MessageBox.Show(allText)\r\n# Assign your output to the OUT variable.\r\nOUT = allText",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "12e9252ae759437eb45f2e0ca7b771ff",
      "Inputs": [
        {
          "Id": "cff0f9d94ea54bed9200b2940aabeaeb",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a77fae9ca34d4abe955ae6e64430f415",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cbecd45c615c4eab8a0d9b12c0fd573e",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nimport os\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\npath = IN[0]\r\n# ini\r\nTAB = \"\\t\"\r\n\r\n###\r\ndef createQTOreqDic (path):\r\n\tdat=[]\r\n\tdic = []\r\n\twith open(path,\"r\") as f:\r\n\t\tlines = f.readlines()\r\n\t\tfor l in lines:\r\n\t\t\tif len(l)>0:\r\n\t\t\t\td =[]\r\n\t\t\t\tfor att in l.decode('utf-8').split(TAB):\r\n\t\t\t\t\td.append(att)\r\n\t\t\t\tdat.append(l.decode('utf-8'))\r\n\tfor d in dat[1:]:\r\n\t\t#di = {}\r\n\t\t#di[d.split(TAB)[0]] = d.split(TAB)[1]\r\n\t\tdic.append(d.split(TAB)[0])\r\n\t\t#for att in d.split(TAB):\r\n\t\r\n\treturn dic\r\n# Place your code below this line\r\n\r\ntest1 = os.path.isdir(path)\r\ntest2 = os.path.exists(path)\r\ntest3 = os.path.isfile(path)\r\n\r\ndat=createQTOreqDic (path)\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = dat",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "ce02a93d0c244fcd9d661856784348c1",
      "Inputs": [
        {
          "Id": "44f00181aee24800a8078619e1ee46ab",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b49514a2c69b41bc84c96bf0ba888d3f",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": false,
      "Id": "85cea14d2dd94e1a85f60b881d20cd40",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f024bb44af2747eab70333054069d3f6",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Directory, CoreNodeModels",
      "HintPath": "C:\\Users\\USER\\Downloads",
      "InputValue": "C:\\Users\\USER\\Downloads",
      "NodeType": "ExtensionNode",
      "Id": "2380f17afee247ff97aa23f6550eb2ac",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5e6b5d161ec441219f04deafac4f23ed",
          "Name": "",
          "Description": "Directory",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a directory on the system to get its path"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.If, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "a20e50bbdced420e8e9df7e25a320ec1",
      "Inputs": [
        {
          "Id": "6de22c340a1c4dd280f764a7eb680c8a",
          "Name": "test",
          "Description": "Test block",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "19314bbd4ad84b7fabbe11684a9b0b15",
          "Name": "true",
          "Description": "True block",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b27f2767c56e476787a8e545be1175c1",
          "Name": "false",
          "Description": "False block",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "69b47a30131b4ac084382b619730e4c9",
          "Name": "result",
          "Description": "result",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Conditional statement"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "dir+shn+\"-\"+pn+\".txt\";",
      "Id": "cc178813d363444e88b1cf7daaad5f13",
      "Inputs": [
        {
          "Id": "49d545af58fc428982e07d8a60f56a6a",
          "Name": "dir",
          "Description": "dir",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4731e4c9a1644318a4e4d1cb5c6794be",
          "Name": "shn",
          "Description": "shn",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ebe60e0a02e94d1888b3d4315bfa7ecd",
          "Name": "pn",
          "Description": "pn",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7c5d5fefa13c489dab18b68b99286cf4",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "dir = res[0];\npn = res[1];",
      "Id": "7621d35c2388426cb74abd16ae6665ba",
      "Inputs": [
        {
          "Id": "1d3f179b6f964a26b16a58806c1d9208",
          "Name": "res",
          "Description": "res",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "01e3d2cb4fe647f1b0621106a3393c91",
          "Name": "",
          "Description": "dir",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e55b7aaff7f14c539ebacf4339de17a4",
          "Name": "",
          "Description": "pn",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nclr.AddReference('RevitAPIUI')\r\nfrom Autodesk.Revit.UI import TaskDialog\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nclr.AddReference(\"RevitServices\")\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\nfrom System.Collections.Generic import *\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\n\r\n##\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\nuiapp = DocumentManager.Instance.CurrentUIApplication\r\napp = uiapp.Application\r\n\r\nopt = Options()\r\ncategories = doc.Settings.Categories\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ncats = IN[0]\r\nprojectInfoDat = IN[1]\r\n# Place your code below this line\r\nres = []\r\nmodel_cat = []\r\nparamsets = []\r\ntypeparamsets = []\r\n\r\nelemDat=[]\r\n\r\n#NOTE\r\n\r\nTAB = \"____\"\r\nATTBREAK = \" : \"\r\nLINEBREAK = \"\\n\"\r\ndef getProperties (params):\r\n\toneline = \"\"\r\n\tfor p in params:\t\t\r\n\t\ttry:\r\n\t\t\tcbTxt = \"{0}{2}{1}\"\t\t\t\r\n\t\t\tn = p.Definition.Name\r\n\t\t\tv= \"\"\r\n\t\t\tif p.AsValueString():\r\n\t\t\t\tv = p.AsValueString()\r\n\t\t\telse:\r\n\t\t\t\tif p.StorageType == StorageType.String:\r\n\t\t\t\t\tif p.AsString():\r\n\t\t\t\t\t\tv = p.AsString()\t\t\r\n\t\t\toneline += cbTxt.format(n,v,ATTBREAK) + TAB\r\n\t\texcept:\r\n\t\t\tpass\r\n\treturn oneline\r\n\r\n###\r\ntry:\r\n\t### get all elements of categories\r\n\tfor c in categories:\r\n\t\tfor cat in cats:\r\n\t\t\tif cat and c.Name == cat:\r\n\t\t\t\tfor e in FilteredElementCollector(doc).OfCategoryId(c.Id).WhereElementIsNotElementType().ToElements():\r\n\t\t\t\t\tres.append(e)\r\nexcept:\r\n\tpass\r\n\r\n\t\r\n# Assign your output to the OUT variable.\r\nOUT = res",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "5ad1130e7b404c1ca59c941a9f759d59",
      "Inputs": [
        {
          "Id": "7c216443a83340058de14773aadc17ba",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b599cb88fb36456ba3ce2009b7744548",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "db0da68fdb4f441699ddaf19e6898f85",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": false,
      "Id": "9a742c741e03421083d65672bbc6fdeb",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0a3289e3644e4d369a51a9701bc3386d",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.If, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "ec177573881342ef9b96b94c91b726dc",
      "Inputs": [
        {
          "Id": "29cff51b324c4d0db2ce876a1630528a",
          "Name": "test",
          "Description": "Test block",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e0e884d81160469d9da5f8738f75db7d",
          "Name": "true",
          "Description": "True block",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e9a9734465414b2bb9afab3895748132",
          "Name": "false",
          "Description": "False block",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6a83f75198c54d7eab73f63aa5a60994",
          "Name": "result",
          "Description": "result",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Conditional statement"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nimport os\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = dir(os)",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "58670c2514a1454484595a21545ff59a",
      "Inputs": [
        {
          "Id": "f014ba8f674243ebb5d9f9a235b79d94",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "59258b3a8a4b42879185d8d642b1598f",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "ed01eb0f12b3484a85166c7795471f92",
      "Inputs": [
        {
          "Id": "bf5f97720a524d1aa07c7915314ce2d6",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4204b5a6dd634bb7ac5240851b6e0d35",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the output of node."
    }
  ],
  "Connectors": [
    {
      "Start": "6f267b4b1b104a8d90e66e8057913ada",
      "End": "1d3f179b6f964a26b16a58806c1d9208",
      "Id": "c05fd3313dd142c1b24921154340d7cd"
    },
    {
      "Start": "52e47c7004ff4936bea1fd24122c3e02",
      "End": "ad28039373c04c4387998720c0f64d03",
      "Id": "2173b0a7e26545e493c03b484274c787"
    },
    {
      "Start": "9bd4c9996986462f931e45aab22a7569",
      "End": "4731e4c9a1644318a4e4d1cb5c6794be",
      "Id": "eed0cce7e496422b9eb6ff2dc89f5c4e"
    },
    {
      "Start": "9a05bf7cfb644ba1a9dadfa67c9d111a",
      "End": "cff0f9d94ea54bed9200b2940aabeaeb",
      "Id": "1c63f565ecb7474686bb8649cd70ae86"
    },
    {
      "Start": "760a1d6b60964e6cb415b7f8e4e31dcd",
      "End": "4a7a1e533e9042fea32367312ec7583d",
      "Id": "bed90930c81e4b34a5a2296cdb7ee8b9"
    },
    {
      "Start": "760a1d6b60964e6cb415b7f8e4e31dcd",
      "End": "b599cb88fb36456ba3ce2009b7744548",
      "Id": "375dfec3b0b447588b840e58ab041649"
    },
    {
      "Start": "d723f59df11c49fa85a18bd5505e8d21",
      "End": "758107aa570744eaa6c9c5c0cafd7506",
      "Id": "6db474f93bf9428da2dd016f8aff2d81"
    },
    {
      "Start": "d723f59df11c49fa85a18bd5505e8d21",
      "End": "49d545af58fc428982e07d8a60f56a6a",
      "Id": "515d5670126f4e6685366b20ab9c84f5"
    },
    {
      "Start": "fc5b9b026325499898115c1223357d89",
      "End": "44f00181aee24800a8078619e1ee46ab",
      "Id": "86673b3d0fba416cb82d08fb26a3bb0b"
    },
    {
      "Start": "b49514a2c69b41bc84c96bf0ba888d3f",
      "End": "6b9469459ab944e293a164d3a000e798",
      "Id": "a96116e1c8db4dfb8bcbb71623c74188"
    },
    {
      "Start": "b49514a2c69b41bc84c96bf0ba888d3f",
      "End": "7c216443a83340058de14773aadc17ba",
      "Id": "17d5f32054b1430190c73369dbcda765"
    },
    {
      "Start": "f024bb44af2747eab70333054069d3f6",
      "End": "6de22c340a1c4dd280f764a7eb680c8a",
      "Id": "8a91b8f08aad4fd0bd97fc2b87eab1b6"
    },
    {
      "Start": "5e6b5d161ec441219f04deafac4f23ed",
      "End": "19314bbd4ad84b7fabbe11684a9b0b15",
      "Id": "3d7e8b1bf1e345758a5a74fa5b6a1787"
    },
    {
      "Start": "69b47a30131b4ac084382b619730e4c9",
      "End": "d43a4cf3ae0a4df7beaf82955eb7c70f",
      "Id": "2bb9eb00f2224b2d96c20dcdeb2fe99a"
    },
    {
      "Start": "7c5d5fefa13c489dab18b68b99286cf4",
      "End": "a77fae9ca34d4abe955ae6e64430f415",
      "Id": "e24695d0b77e4f929eef2728f907bbd2"
    },
    {
      "Start": "01e3d2cb4fe647f1b0621106a3393c91",
      "End": "b27f2767c56e476787a8e545be1175c1",
      "Id": "3e784297d6804782b4cb2526912baf84"
    },
    {
      "Start": "e55b7aaff7f14c539ebacf4339de17a4",
      "End": "ebe60e0a02e94d1888b3d4315bfa7ecd",
      "Id": "6fee360c913d4bada720de78c7853620"
    },
    {
      "Start": "0a3289e3644e4d369a51a9701bc3386d",
      "End": "29cff51b324c4d0db2ce876a1630528a",
      "Id": "c9d4e879b6064d8e99c80193842dbb1f"
    },
    {
      "Start": "59258b3a8a4b42879185d8d642b1598f",
      "End": "bf5f97720a524d1aa07c7915314ce2d6",
      "Id": "2d631af41e7248bdb84ed41a595fb149"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.10.0.3455",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "18ec972b473b4272969d8e2115eee377",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -983.744656990795,
        "Y": -258.40280592782256
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "2304b0b89bb64748bf5be85e45904bbe",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1221.7867020745855,
        "Y": -116.91021040734267
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script-Setup Units",
        "Id": "00a0f89a880b4019abc2622db9a7ee7e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1213.2803471183163,
        "Y": 71.371858200545034
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script-ALL OneLine Element Property",
        "Id": "d3c1e3ad607143dcb9544b6c62fddd35",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 172.50303962158736,
        "Y": -27.860365578125
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script-OneLine Project Info Property",
        "Id": "4b8ce2e1696f47eba0c225307dec6e1f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -322.93244178243128,
        "Y": 157.23094135723579
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "e9e717f70a6d47b9997305cdabb7eedf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -520.34928835935443,
        "Y": -268.63510391675987
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "69c1ad048a6b48af88940878fc7f88f8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -334.463716825744,
        "Y": -353.812657565276
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script-Write Txt",
        "Id": "12e9252ae759437eb45f2e0ca7b771ff",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 814.85226722198763,
        "Y": -236.2062809338982
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script-Read txt-OUT List Cats",
        "Id": "ce02a93d0c244fcd9d661856784348c1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -104.81546408014799,
        "Y": -352.71205046321
      },
      {
        "ShowGeometry": true,
        "Name": "Browse DIR manualy",
        "Id": "85cea14d2dd94e1a85f60b881d20cd40",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1195.438395323584,
        "Y": -350.19991230437375
      },
      {
        "ShowGeometry": true,
        "Name": "Directory Path",
        "Id": "2380f17afee247ff97aa23f6550eb2ac",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1208.7605714831675,
        "Y": -284.49409752441596
      },
      {
        "ShowGeometry": true,
        "Name": "If",
        "Id": "a20e50bbdced420e8e9df7e25a320ec1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -708.62684039803912,
        "Y": -398.26934560816994
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "cc178813d363444e88b1cf7daaad5f13",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 514.38933129448435,
        "Y": -325.11043569750757
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "7621d35c2388426cb74abd16ae6665ba",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -866.4397444368667,
        "Y": -175.11205111262666
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script-ALL OneLine Element Property",
        "Id": "5ad1130e7b404c1ca59c941a9f759d59",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "X": 178.54494202751346,
        "Y": 155.06727043823216
      },
      {
        "ShowGeometry": true,
        "Name": "Manual name PREFIX",
        "Id": "9a742c741e03421083d65672bbc6fdeb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1183.535444856024,
        "Y": 165.76090803449995
      },
      {
        "ShowGeometry": true,
        "Name": "If",
        "Id": "ec177573881342ef9b96b94c91b726dc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -940.02022853004871,
        "Y": 207.89156829850958
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "58670c2514a1454484595a21545ff59a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 610.81405665317936,
        "Y": 30.44698642065714
      },
      {
        "ShowGeometry": true,
        "Name": "Watch",
        "Id": "ed01eb0f12b3484a85166c7795471f92",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 760.66683104329547,
        "Y": -151.34162513456596
      }
    ],
    "Annotations": [
      {
        "Id": "33a7767c06a7452b8e6ac89f81c1f449",
        "Title": "INPUT MAIN",
        "Nodes": [
          "2304b0b89bb64748bf5be85e45904bbe"
        ],
        "Left": -1231.7867020745855,
        "Top": -146.91021040734267,
        "Width": 277.0,
        "Height": 151.0,
        "FontSize": 14.0,
        "InitialTop": -116.91021040734267,
        "InitialHeight": 145.0,
        "TextblockHeight": 20.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "a0feec31821748f5a1a4bcef17342602",
        "Title": "Get Revit models' dir",
        "Nodes": [
          "18ec972b473b4272969d8e2115eee377",
          "e9e717f70a6d47b9997305cdabb7eedf"
        ],
        "Left": -993.744656990795,
        "Top": -307.63510391675987,
        "Width": 596.39536863144053,
        "Height": 153.23229798893732,
        "FontSize": 24.0,
        "InitialTop": -268.63510391675987,
        "InitialHeight": 155.23229798893732,
        "TextblockHeight": 29.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "aa33c4d5995b4537abfd832f04ba6775",
        "Title": "DIR",
        "Nodes": [
          "85cea14d2dd94e1a85f60b881d20cd40",
          "2380f17afee247ff97aa23f6550eb2ac"
        ],
        "Left": -1218.7605714831675,
        "Top": -403.19991230437375,
        "Width": 220.32217615958348,
        "Height": 212.70581477995779,
        "FontSize": 36.0,
        "InitialTop": -350.19991230437375,
        "InitialHeight": 210.70581477995779,
        "TextblockHeight": 43.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "72c64e1498514c81a315aaac52f2adaf",
        "Title": "",
        "Nodes": [
          "a20e50bbdced420e8e9df7e25a320ec1"
        ],
        "Left": -718.62684039803912,
        "Top": -451.26934560816994,
        "Width": 147.0,
        "Height": 198.0,
        "FontSize": 36.0,
        "InitialTop": -398.26934560816994,
        "InitialHeight": 145.0,
        "TextblockHeight": 43.0,
        "Background": "#FFFF7BAC"
      },
      {
        "Id": "69b9f6a0ee59417f88c3d89e5524b35f",
        "Title": "Get Project Inforamtion data",
        "Nodes": [
          "4b8ce2e1696f47eba0c225307dec6e1f"
        ],
        "Left": -332.93244178243128,
        "Top": 61.230941357235793,
        "Width": 352.0,
        "Height": 200.0,
        "FontSize": 36.0,
        "InitialTop": 157.23094135723579,
        "InitialHeight": 145.0,
        "TextblockHeight": 86.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "4a6bca013f3941af87226a32efe240b9",
        "Title": "get All elements data ",
        "Nodes": [
          "d3c1e3ad607143dcb9544b6c62fddd35",
          "77ce9d84c30649e0bbc787450fc3725c"
        ],
        "Left": 162.50303962158736,
        "Top": -116.00646868766046,
        "Width": 357.0,
        "Height": 218.14610310953546,
        "FontSize": 36.0,
        "InitialTop": -63.006468687660458,
        "InitialHeight": 180.14610310953546,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "a79bf3d122934291bf17f30c7eafea72",
        "Title": "create Category requirements",
        "Nodes": [
          "69c1ad048a6b48af88940878fc7f88f8",
          "ce02a93d0c244fcd9d661856784348c1"
        ],
        "Left": -344.463716825744,
        "Top": -406.812657565276,
        "Width": 534.648252745596,
        "Height": 158.10060710206602,
        "FontSize": 36.0,
        "InitialTop": -353.812657565276,
        "InitialHeight": 146.10060710206602,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "43689e1e75004ce9aacf0c6bdf228d1d",
        "Title": "write to txt",
        "Nodes": [
          "12e9252ae759437eb45f2e0ca7b771ff",
          "cc178813d363444e88b1cf7daaad5f13"
        ],
        "Left": 504.38933129448435,
        "Top": -378.11043569750757,
        "Width": 522.46293592750328,
        "Height": 271.90415476360937,
        "FontSize": 36.0,
        "InitialTop": -325.11043569750757,
        "InitialHeight": 233.90415476360937,
        "TextblockHeight": 43.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "0f20f33ce2554ad184edf6fb0c184bad",
        "Title": "",
        "Nodes": [
          "00a0f89a880b4019abc2622db9a7ee7e"
        ],
        "Left": -1223.2803471183163,
        "Top": 18.371858200545034,
        "Width": 238.0,
        "Height": 157.0,
        "FontSize": 36.0,
        "InitialTop": 71.371858200545034,
        "InitialHeight": 145.0,
        "TextblockHeight": 43.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "77ce9d84c30649e0bbc787450fc3725c",
        "Title": "Out Put = All oneline properties of all elements",
        "Nodes": [],
        "Left": 198.02127150609965,
        "Top": -63.006468687660458,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      }
    ],
    "X": -429.92527780990031,
    "Y": 619.818182461707,
    "Zoom": 1.2211986114023521
  }
}