{
  "Uuid": "3c9d0464-8643-5ffe-96e5-ab1769818209",
  "IsCustomNode": false,
  "Description": "",
  "Name": "09-FINAL-01-WRITE TO QTO DATA EXCEL-2",
  "ElementResolver": {
    "ResolutionMap": {
      "List": {
        "Key": "List",
        "Value": "BuiltIn.ds"
      }
    }
  },
  "Inputs": [
    {
      "Id": "85cea14d2dd94e1a85f60b881d20cd40",
      "Name": "Browse DIR manualy",
      "Type": "boolean",
      "Value": "false",
      "Description": "Selection between a true and false."
    },
    {
      "Id": "2380f17afee247ff97aa23f6550eb2ac",
      "Name": "Directory Path",
      "Type": "string",
      "Value": "C:\\Users\\USER\\Desktop",
      "Description": "Allows you to select a directory on the system to get its path"
    }
  ],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nclr.AddReference('RevitAPIUI')\r\nfrom Autodesk.Revit.UI import TaskDialog\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nclr.AddReference(\"RevitServices\")\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\nfrom System.Collections.Generic import *\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\n\r\n##\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\nuiapp = DocumentManager.Instance.CurrentUIApplication\r\napp = uiapp.Application\r\n\r\nopt = Options()\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n##\r\n\r\nres = []\r\ndir = \"\"\r\ndataFullPath =\"\"\r\n\r\n\"\"\"\r\nres.append(app.VersionName)\r\nres.append(app.SharedParametersFilename)\r\nres.append(app.Username)\r\nres.append(doc.PathName)\r\nres.append(list(enumerate(doc.ProjectLocations)))\r\nres.append(doc.SiteLocation)\r\n\"\"\"\r\n#\r\ntry:\r\n\tp = doc.PathName.split(\"\\\\\")\r\n\tpp = p[0:len(p)-1]\r\n\r\n\tfor s in pp:\r\n\t\tdir += s + \"\\\\\"\r\nexcept:\r\n\tpass\r\n\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = dir,doc.PathName.split(\"\\\\\")[-1].split(\".\")[0]",
      "VariableInputPorts": true,
      "Id": "18ec972b473b4272969d8e2115eee377",
      "Inputs": [
        {
          "Id": "791f2c4f4c244b4bbd668bf0e87131be",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6f267b4b1b104a8d90e66e8057913ada",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "ExcelPath = \"BIMData.xlsx\";\nQTOdata = \"QTO.ITEM.DAT\";\nQTOreq = \"QTOreq\";\nSOCats = \"SOCats\";\nQTO=\"QTO\";",
      "Id": "2304b0b89bb64748bf5be85e45904bbe",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2d075427253f40ab98d1b0ddce162741",
          "Name": "",
          "Description": "ExcelPath",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e4451bda0c7e4647a68cc82044f5ee51",
          "Name": "",
          "Description": "QTOdata",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "90994f61d8034f8da8bf9a5b2400656e",
          "Name": "",
          "Description": "QTOreq",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "48be4ef48edd4cbc85d21cdba5428a4e",
          "Name": "",
          "Description": "SOCats",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "190393ea54234062a680f6bb4b69012d",
          "Name": "",
          "Description": "QTO",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "dir;",
      "Id": "e9e717f70a6d47b9997305cdabb7eedf",
      "Inputs": [
        {
          "Id": "d43a4cf3ae0a4df7beaf82955eb7c70f",
          "Name": "dir",
          "Description": "dir",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d723f59df11c49fa85a18bd5505e8d21",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "dir+shn+\"-\"+pn+\".txt\";",
      "Id": "69c1ad048a6b48af88940878fc7f88f8",
      "Inputs": [
        {
          "Id": "0e8588ec808845ea90b889dc0fa295b5",
          "Name": "dir",
          "Description": "dir",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0a601e54650249099749b0e343eaabbe",
          "Name": "shn",
          "Description": "shn",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e2392d2d483148f392f0a8487421f5f7",
          "Name": "pn",
          "Description": "pn",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "78b270f580f34ff6a074e4beded87d6c",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nimport os\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\npath = IN[0]\r\nkeys = IN[1]\r\ndic1 = IN[2]\r\ndic2 = IN[3]\r\n\r\n# ini\r\nTAB = \"____\"\r\nATTBREAK = \" : \"\r\nTAB1 = \"\\t\"\r\nBREAKLINE = \"\\n\"\r\n###\r\ndef readTxtDatToDic(path):\r\n\tdat=[]\r\n\tdic = []\r\n\twith open(path,\"r\") as f:\r\n\t\tlines = f.readlines()\r\n\t\tfor l in lines:\r\n\t\t\ttry:\r\n\t\t\t\tdL = {}\r\n\t\t\t\tif len(l)>0:\r\n\t\t\t\t\td =[]\r\n\t\t\t\t\tspl = l.decode('utf-8').split(TAB)\r\n\t\t\t\t\tfor att in spl:\r\n\t\t\t\t\t\ttry:\r\n\t\t\t\t\t\t\tif len(att.split(ATTBREAK)) == 1:\r\n\t\t\t\t\t\t\t\tdL[att.split(ATTBREAK)[0]] = \"\"\r\n\t\t\t\t\t\t\telse:\r\n\t\t\t\t\t\t\t\tdL[att.split(ATTBREAK)[0]] = att.split(ATTBREAK)[1]\r\n\t\t\t\t\t\texcept:\r\n\t\t\t\t\t\t\tpass\r\n\t\t\t\t\t#dat.append(l.decode('utf-8'))\r\n\t\t\t\t\tdat.append(dL)\r\n\t\t\texcept:\r\n\t\t\t\tpass\r\n\t\t\t#dat.append(dL)\t\r\n\treturn dat\r\n\r\n\r\n\r\n\r\n# Place your code below this line\r\n\r\ntest1 = os.path.isdir(path)\r\ntest2 = os.path.exists(path)\r\ntest3 = os.path.isfile(path)\r\n\r\ndat=readTxtDatToDic(path)\r\n\r\nres= []\r\nfn = \"\"\r\nexxx=[]\r\ntry:\r\n\tfor d in dat:\r\n\t\tstr = \"\"\r\n\t\tdicParamKey = \"\"\r\n\t\tdicParam=\"\"\r\n\t\ttry:\r\n\t\t\tfor k in keys:\r\n\t\t\t\tif d.get('Category') == k:\r\n\t\t\t\t\tdicParamKey = dic1.get(k)\r\n\t\t\t\t\tdicParam = dic2.get(dicParamKey)\r\n\t\texcept Exception, ex2:\r\n\t\t\texxx.append(ex2)\r\n\t\t\tpass\r\n\t\ttry:\r\n\t\t\tfor p in dicParam:\r\n\t\t\t\tv=\"\"\r\n\t\t\t\tif d.get(p) is None:\r\n\t\t\t\t\td[p] = \"\"\r\n\t\t\t\tv= d.get(p).ToString()\r\n\t\t\t\t\r\n\t\t\t\tstr += v + TAB1\r\n\t\t\t\ts2 = p + \" : \" + d.get(p)\r\n\t\texcept Exception, ex2:\r\n\t\t\texxx.append(ex2)\r\n\t\t\tpass\r\n\t\tfn += str + BREAKLINE\r\n\t\tres.append(str)\r\n\t\t\r\nexcept Exception, ex3:\r\n\texxx.append(ex3)\r\n\tpass\r\n\"\"\"\r\nfor d1 in dic2.keys():\r\n\tres.append(dic2.get(d1))\r\n\"\"\"\r\n# Assign your output to the OUT variable.\r\nOUT = fn#dat#createDic(dat)#dat[0].split(TAB) #",
      "VariableInputPorts": true,
      "Id": "ce02a93d0c244fcd9d661856784348c1",
      "Inputs": [
        {
          "Id": "44f00181aee24800a8078619e1ee46ab",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "718717ae64394ce3874e1990a39a4d2e",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fff76cff82bf4bc4bdab6aa5f6036ab4",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "26c46974a99149c0b0960e5b4795b565",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b49514a2c69b41bc84c96bf0ba888d3f",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": false,
      "Id": "85cea14d2dd94e1a85f60b881d20cd40",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f024bb44af2747eab70333054069d3f6",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Directory, CoreNodeModels",
      "HintPath": "C:\\Users\\USER\\Desktop",
      "InputValue": "C:\\Users\\USER\\Desktop",
      "NodeType": "ExtensionNode",
      "Id": "2380f17afee247ff97aa23f6550eb2ac",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5e6b5d161ec441219f04deafac4f23ed",
          "Name": "",
          "Description": "Directory",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a directory on the system to get its path"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.If, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "a20e50bbdced420e8e9df7e25a320ec1",
      "Inputs": [
        {
          "Id": "6de22c340a1c4dd280f764a7eb680c8a",
          "Name": "test",
          "Description": "Test block",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "19314bbd4ad84b7fabbe11684a9b0b15",
          "Name": "true",
          "Description": "True block",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b27f2767c56e476787a8e545be1175c1",
          "Name": "false",
          "Description": "False block",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "69b47a30131b4ac084382b619730e4c9",
          "Name": "result",
          "Description": "result",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Conditional statement"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nimport os\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\npath = IN[0]\r\n# ini\r\nTAB = \"\\t\"\r\n\r\n###\r\ndef createQTOreqDic (path):\r\n\tdat=[]\r\n\tdic = []\r\n\twith open(path,\"r\") as f:\r\n\t\tlines = f.readlines()\r\n\t\tfor l in lines:\r\n\t\t\tif len(l)>0:\r\n\t\t\t\td =[]\r\n\t\t\t\tfor att in l.decode('utf-8').split(TAB):\r\n\t\t\t\t\td.append(att)\r\n\t\t\t\tdat.append(l.decode('utf-8'))\r\n\tdi = {}\r\n\tfor d in dat[1:]:\t\t\r\n\t\treqs = []\r\n\t\tfor req in d.split(TAB)[1:]:\t\t\t\r\n\t\t\tif req and not req == \"\\n\":\r\n\t\t\t\treqs.append(req)\r\n\t\t\t\r\n\t\tdi[d.split(TAB)[0]] = reqs\r\n\t\t#for att in d.split(TAB):\r\n\t\r\n\treturn di\r\n# Place your code below this line\r\n\r\ntest1 = os.path.isdir(path)\r\ntest2 = os.path.exists(path)\r\ntest3 = os.path.isfile(path)\r\n\r\ndat=createQTOreqDic (path)\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = dat",
      "VariableInputPorts": true,
      "Id": "b12b703df88e43a3b252d92beeaab801",
      "Inputs": [
        {
          "Id": "c307211fef704e2e939b5f851b5d4aee",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "79acca297355450591c2422f2e2e20ac",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "dir+shn+\".txt\";",
      "Id": "e9d0de5d67a8426283b87b7c038f6d38",
      "Inputs": [
        {
          "Id": "be0e1e37d95544c98ce7eaff1f12f4fb",
          "Name": "dir",
          "Description": "dir",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "476225e5ae9546a4b762e23108bb1411",
          "Name": "shn",
          "Description": "shn",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "610e9edfc0c144a8bafa874ed1b8e138",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nimport os\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\npath = IN[0]\r\n# ini\r\nTAB = \"\\t\"\r\n\r\n###\r\ndef createQTOreqDic (path):\r\n\tdat=[]\r\n\tdic = []\r\n\twith open(path,\"r\") as f:\r\n\t\tlines = f.readlines()\r\n\t\tfor l in lines:\r\n\t\t\tif len(l)>0:\r\n\t\t\t\td =[]\r\n\t\t\t\tfor att in l.decode('utf-8').split(TAB):\r\n\t\t\t\t\td.append(att)\r\n\t\t\t\tdat.append(l.decode('utf-8'))\r\n\tdi = {}\r\n\tfor d in dat[1:]:\t\t\r\n\t\tdi[d.split(TAB)[0]] = d.split(TAB)[1]\r\n\t\t#for att in d.split(TAB):\r\n\treturn di\r\n# Place your code below this line\r\n\r\ntest1 = os.path.isdir(path)\r\ntest2 = os.path.exists(path)\r\ntest3 = os.path.isfile(path)\r\n\r\ndat=createQTOreqDic(path)\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = dat",
      "VariableInputPorts": true,
      "Id": "e97406f4443d400cb2c2d509682cd7b2",
      "Inputs": [
        {
          "Id": "de5aec0228b74393b8988633405cab65",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "433a42f9e4974f32add05b9da9bd6c87",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "dir+shn+\".txt\";",
      "Id": "dcdf5ba94edd4e8d9001c5919a074d05",
      "Inputs": [
        {
          "Id": "0428dd071b5147ef918b1c07f6d4e605",
          "Name": "dir",
          "Description": "dir",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "30c3830bec7149af8541599a069c2a46",
          "Name": "shn",
          "Description": "shn",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "340883ed19a74ea4a363d01282d2e7d6",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nimport os\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\npath = IN[0]\r\n# ini\r\nTAB = \"\\t\"\r\n\r\n###\r\ndef createCatslist(path):\r\n\tdat=[]\r\n\tdic = []\r\n\twith open(path,\"r\") as f:\r\n\t\tlines = f.readlines()\r\n\t\tfor l in lines:\r\n\t\t\tif len(l)>0:\r\n\t\t\t\td =[]\r\n\t\t\t\tfor att in l.decode('utf-8').split(TAB):\r\n\t\t\t\t\td.append(att)\r\n\t\t\t\tdat.append(l.decode('utf-8'))\r\n\tfor d in dat[1:]:\r\n\t\tdi = d.split(TAB)[0]\r\n\t\tdic.append(di)\r\n\t\t#for att in d.split(TAB):\r\n\t\r\n\treturn dic\r\n# Place your code below this line\r\n\r\ntest1 = os.path.isdir(path)\r\ntest2 = os.path.exists(path)\r\ntest3 = os.path.isfile(path)\r\n\r\ndat=createCatslist(path)\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = dat",
      "VariableInputPorts": true,
      "Id": "9a80a915acd043efa6a899db63a88965",
      "Inputs": [
        {
          "Id": "6292c18c362e461db1a51dd1d8f65e5d",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "500ca693f0654b6688ec1568af20ff89",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "dir+shn+\".txt\";",
      "Id": "d4b09077fecd4a9faa08e7fe6a0ac901",
      "Inputs": [
        {
          "Id": "ba7364d06c6c48b3b131b36b0047f025",
          "Name": "dir",
          "Description": "dir",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ee61ad7150774ec1b43ad010104ecd52",
          "Name": "shn",
          "Description": "shn",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9b4f72c0db0d4f29b226f34242e4c066",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('System.IO')\r\nclr.AddReference('System.Drawing')\r\nclr.AddReference('System.Reflection')\r\nclr.AddReference('System.Threading')\r\nclr.AddReference(\"System.Windows.Forms\")\r\n\r\nimport System\r\nimport System.IO\r\nimport System.Drawing\r\nimport System.Reflection\r\nimport System.Windows.Forms\r\n\r\nfrom System.Threading import ApartmentState, Thread, ThreadStart\r\nfrom System.Windows.Forms import *\r\n\r\nfrom shutil import copyfile\r\nimport tempfile\r\nimport os\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nexDat = IN[0]\r\n_path = IN[1]\r\n#list1Line = []\r\nallText=\"\"\r\n\r\nTAB = \"\\t\"\r\nBREAKLINE = \"\\n\"\r\n\r\ntest1 = os.path.isdir(_path)\r\ntest2 = os.path.exists(_path)\r\ntest3 = os.path.isfile(_path)\r\n\r\n# Place your code below this line\r\n\r\n#WRITE EXCEL DATA LIST TO TEMP TXT FILE THEN COPY TO TARGET PATH\r\ndef writeTxtFromExcelDat(exDat,_TAB,_BREAKLINE): #from excel data list\r\n\tallText=\"\"\r\n\tTAB = _TAB\r\n\tBREAKLINE = _BREAKLINE\t\r\n\tfor d in exDat:\r\n\t\tstr = \"\"\r\n\t\tstrF = \"{0}{1}\"\t\t\r\n\t\tif d[0] and len(d)>0:\t\t\r\n\t\t\tfor c in d:\r\n\t\t\t\tif c:\r\n\t\t\t\t\tstr += strF.format(c,TAB)\r\n\t\tif len(str)>0:\r\n\t\t\tstr += BREAKLINE\t\r\n\t\t#list1Line.append(str)\r\n\t\tallText += str\t\r\n\tf = open(path,\"w\")\r\n\tf.write(allText.encode('utf8'))\r\n\tf.close\r\n\treturn allText\r\n\t\r\n#WRITE \"ONE_LINE\" DATA TO TEMP TXT FILE THEN COPY TO TARGET PATH\r\ndef writeTxtFromTxtString(PATH, exDat,_TAB,_BREAKLINE): #from txt string\t\r\n\twith open(PATH,\"w\") as f:\r\n\t\tf.write(exDat.encode('utf8'))\t\t\r\n\tcopyfile(PATH,_path)\t\r\n\treturn exDat\r\n###################\r\ntempDir = tempfile.gettempdir()\r\nfileName = _path.split(\"\\\\\")[-1]\r\nPATH = tempDir + fileName\r\nif not exDat ==  None and not test1 and len(exDat) >0:\r\n\tallText = writeTxtFromTxtString(PATH, exDat,TAB,BREAKLINE)\r\n#MessageBox.Show(allText)\r\n# Assign your output to the OUT variable.\r\nOUT = allText",
      "VariableInputPorts": true,
      "Id": "65297558c818444d90061262d2f0ab9f",
      "Inputs": [
        {
          "Id": "8e2ccf49312047ac8620afb5d0b4258f",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6a275a95e94e4379a07152edec3da2bc",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ea275095e3164e7da461d29755952f78",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "dir+fn+\"-\"+proj+\".txt\";",
      "Id": "7bc0437ede304c48a2aca01bf5a4db38",
      "Inputs": [
        {
          "Id": "d767870da3cb44699626753346045964",
          "Name": "dir",
          "Description": "dir",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bc5ea88bd7ff48c9b7522d81f0f4992c",
          "Name": "fn",
          "Description": "fn",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "353c8c292a044c83b01db78a0ee7f6c2",
          "Name": "proj",
          "Description": "proj",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4027f85c589a426abf25a2acbdf999eb",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "dir = res[0];\nprojN = res[1];\n//res[1];",
      "Id": "43b5c171c80047aaad0c0d34861447e3",
      "Inputs": [
        {
          "Id": "ef1eaf19a6a8445c87fba6fc42f486c3",
          "Name": "res",
          "Description": "res",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "54e14a900bfc4dfca68b7b09a7861f7f",
          "Name": "",
          "Description": "dir",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5b626fb910f846f98f7babec6286e93f",
          "Name": "",
          "Description": "projN",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('System.IO')\r\nclr.AddReference('System.Drawing')\r\nclr.AddReference('System.Reflection')\r\nclr.AddReference('System.Threading')\r\nclr.AddReference(\"System.Windows.Forms\")\r\n\r\nimport System\r\nimport System.IO\r\nimport System.Drawing\r\nimport System.Reflection\r\nimport System.Windows.Forms\r\n\r\nfrom System.Threading import ApartmentState, Thread, ThreadStart\r\nfrom System.Windows.Forms import *\r\n\r\nimport os\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nexDat = IN[0]\r\npath = IN[1]\r\n#list1Line = []\r\nallText=\"\"\r\n\r\nTAB = \"\\t\"\r\nBREAKLINE = \"\\n\"\r\n\r\ntest1 = os.path.isdir(path)\r\ntest2 = os.path.exists(path)\r\ntest3 = os.path.isfile(path)\r\n\r\n# Place your code below this line\r\n\r\ndef writeTxtFromExcelDat(exDat,_TAB,_BREAKLINE): #from excel data list\r\n\tallText=\"\"\r\n\tTAB = _TAB\r\n\tBREAKLINE = _BREAKLINE\t\r\n\tfor d in exDat:\r\n\t\tstr = \"\"\r\n\t\tstrF = \"{0}{1}\"\t\t\r\n\t\tif d[0] and len(d)>0:\t\t\r\n\t\t\tfor c in d:\r\n\t\t\t\tif c:\r\n\t\t\t\t\tstr += strF.format(c,TAB)\r\n\t\tif len(str)>0:\r\n\t\t\tstr += BREAKLINE\t\r\n\t\t#list1Line.append(str)\r\n\t\tallText += str\t\r\n\tf = open(path,\"a\")\r\n\tf.write(allText.encode('utf8'))\r\n\tf.close\r\n\treturn allText\r\ndef writeTxtFromTxtString(exDat,_TAB,_BREAKLINE): #from txt string\t\r\n\tf = open(path,\"a\")\r\n\tf.write(exDat.encode('utf8'))\r\n\tf.close\r\n\treturn exDat\r\n###################\r\nif not test1 and len(exDat) >0:\r\n\tallText = writeTxtFromTxtString(exDat,TAB,BREAKLINE)\r\n#MessageBox.Show(allText)\r\n# Assign your output to the OUT variable.\r\nOUT = path",
      "VariableInputPorts": true,
      "Id": "533bf95d25f64a01a8b5bea2bc6a7fc0",
      "Inputs": [
        {
          "Id": "e2813f43ad7a488e8ac28246dd32ee29",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "22cd455b431d43db8f0087d723476181",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "46512a5fde864fba9928dd021b9040ec",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "dir+fn+\"-Combine.txt\";",
      "Id": "2e8336ab2c9045c998d253c383978e48",
      "Inputs": [
        {
          "Id": "3b1c2ec933514b39a6731b06b18bb583",
          "Name": "dir",
          "Description": "dir",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cf75929a8f5646cb9b3baa2b4a53fc0b",
          "Name": "fn",
          "Description": "fn",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c10b63ac395e42a0ac3567e5be6ab7fa",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nimport os\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\npath = IN[0]\r\n# ini\r\nTAB = \"\\t\"\r\nBREAKLINE = \"\\n\"\r\n###\r\ndef createData(path):\r\n\tdic = {}\r\n\twith open(path,\"r\") as f:\r\n\t\tlines = f.readlines()\r\n\t\tfor l in lines:\r\n\t\t\tdic[l.split(TAB)[0]] = l\r\n\t\t\t#dic.append(l)\t\r\n\t\r\n\treturn dic\r\n# Place your code below this line\r\n\r\ntest1 = os.path.isdir(path)\r\ntest2 = os.path.exists(path)\r\ntest3 = os.path.isfile(path)\r\n\r\nres = createData(path)\r\nres2 = \"\"\r\nfor k in res.keys():\r\n\tres2 += res.get(k) + BREAKLINE\r\n\t\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = res2",
      "VariableInputPorts": true,
      "Id": "535be5ed7c654d729b8fa9b6b8798fe3",
      "Inputs": [
        {
          "Id": "3424b50de2a74ab699442c072c368521",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8c93e48a66a0474faabcaa6bcfda2827",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('System.IO')\r\nclr.AddReference('System.Drawing')\r\nclr.AddReference('System.Reflection')\r\nclr.AddReference('System.Threading')\r\nclr.AddReference(\"System.Windows.Forms\")\r\n\r\nimport System\r\nimport System.IO\r\nimport System.Drawing\r\nimport System.Reflection\r\nimport System.Windows.Forms\r\n\r\nfrom System.Threading import ApartmentState, Thread, ThreadStart\r\nfrom System.Windows.Forms import *\r\n\r\nimport os\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nexDat = IN[0]\r\npath = IN[1]\r\n#list1Line = []\r\nallText=\"\"\r\n\r\nTAB = \"\\t\"\r\nBREAKLINE = \"\\n\"\r\n\r\ntest1 = os.path.isdir(path)\r\ntest2 = os.path.exists(path)\r\ntest3 = os.path.isfile(path)\r\n\r\n# Place your code below this line\r\n\r\ndef writeTxtFromExcelDat(exDat,_TAB,_BREAKLINE): #from excel data list\r\n\tallText=\"\"\r\n\tTAB = _TAB\r\n\tBREAKLINE = _BREAKLINE\t\r\n\tfor d in exDat:\r\n\t\tstr = \"\"\r\n\t\tstrF = \"{0}{1}\"\t\t\r\n\t\tif d[0] and len(d)>0:\t\t\r\n\t\t\tfor c in d:\r\n\t\t\t\tif c:\r\n\t\t\t\t\tstr += strF.format(c,TAB)\r\n\t\tif len(str)>0:\r\n\t\t\tstr += BREAKLINE\t\r\n\t\t#list1Line.append(str)\r\n\t\tallText += str\t\r\n\tf = open(path,\"a\")\r\n\tf.write(allText.encode('utf8'))\r\n\tf.close\r\n\treturn allText\r\ndef writeTxtFromTxtString(exDat,_TAB,_BREAKLINE): #from txt string\t\r\n\tf = open(path,\"a\")\r\n\tf.write(exDat.encode('utf8'))\r\n\tf.close\r\n\treturn exDat\r\n###################\r\nif not test1 and len(exDat) >0:\r\n\tallText = writeTxtFromTxtString(exDat,TAB,BREAKLINE)\r\n#MessageBox.Show(allText)\r\n# Assign your output to the OUT variable.\r\nOUT = path",
      "VariableInputPorts": true,
      "Id": "243c510c53a54e8696c9774d2a50c5ce",
      "Inputs": [
        {
          "Id": "b8d64936ad0c4b18878cd928ffad4227",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8543c51727d54a64b2f7a5d8bec42c30",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c2cb112f31d04369bef8a1f56311e4e1",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nimport os\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\npath = IN[0]\r\nkeys = IN[1]\r\ndic1 = IN[2]\r\ndic2 = IN[3]\r\n\r\n# ini\r\nTAB = \"____\"\r\nATTBREAK = \" : \"\r\nTAB1 = \"\\t\"\r\nBREAKLINE = \"\\n\"\r\n###\r\ndef readTxtDatToDic(path):\r\n\tdat=[]\r\n\tdic = []\r\n\twith open(path,\"r\") as f:\r\n\t\tlines = f.readlines()\r\n\t\tfor l in lines:\r\n\t\t\ttry:\r\n\t\t\t\tdL = {}\r\n\t\t\t\tif len(l)>0:\r\n\t\t\t\t\td =[]\r\n\t\t\t\t\tspl = l.decode('utf-8').split(TAB)\r\n\t\t\t\t\tfor att in spl:\r\n\t\t\t\t\t\ttry:\r\n\t\t\t\t\t\t\tif len(att.split(ATTBREAK)) == 1:\r\n\t\t\t\t\t\t\t\tdL[att.split(ATTBREAK)[0]] = \"\"\r\n\t\t\t\t\t\t\telse:\r\n\t\t\t\t\t\t\t\tdL[att.split(ATTBREAK)[0]] = att.split(ATTBREAK)[1]\r\n\t\t\t\t\t\texcept:\r\n\t\t\t\t\t\t\tpass\r\n\t\t\t\t\t#dat.append(l.decode('utf-8'))\r\n\t\t\t\t\tdat.append(dL)\r\n\t\t\texcept:\r\n\t\t\t\tpass\r\n\t\t\t#dat.append(dL)\t\r\n\treturn dat\r\n\r\n\r\n\r\n\r\n# Place your code below this line\r\n\r\ntest1 = os.path.isdir(path)\r\ntest2 = os.path.exists(path)\r\ntest3 = os.path.isfile(path)\r\n\r\ndat=readTxtDatToDic(path)\r\n\r\nres= []\r\nfn = \"\"\r\nfn2 = []\r\nexxx = []\r\ntry:\r\n\tfor d in dat:\r\n\t\tstr = \"\"\r\n\t\tf2 = []\r\n\t\tdicParamKey = \"\"\r\n\t\tdicParam=\"\"\r\n\t\ttry:\r\n\t\t\tfor k in keys:\r\n\t\t\t\tif d.get('Category') == k:\r\n\t\t\t\t\tdicParamKey = dic1.get(k)\r\n\t\t\t\t\tdicParam = dic2.get(dicParamKey)\r\n\t\texcept Exception, ex2:\r\n\t\t\texxx.append(ex2)\r\n\t\t\tpass\r\n\t\ttry:\r\n\t\t\tfor p in dicParam:\r\n\t\t\t\tv=\"\"\r\n\t\t\t\tif d.get(p) is None:\r\n\t\t\t\t\td[p] = \"\"\r\n\t\t\t\tv= d.get(p).ToString()\r\n\t\t\t\t\r\n\t\t\t\tstr += v + TAB1\r\n\t\t\t\ts2 = p + \" : \" + d.get(p)\r\n\t\t\t\t\r\n\t\t\t\tf2.append(s2)\r\n\t\texcept Exception, ex2:\r\n\t\t\texxx.append(ex2)\r\n\t\t\tpass\r\n\t\tfn += str + BREAKLINE\r\n\t\tres.append(str)\r\n\t\t\r\n\t\tfn2.append(f2)\r\n\t\t\r\nexcept Exception, ex3:\r\n\texxx.append(ex3)\r\n\tpass\r\n\t\r\n\r\nt = dat[0].get('Width')\r\n\"\"\"\r\nfor d1 in dic2.keys():\r\n\tres.append(dic2.get(d1))\r\n\"\"\"\r\n# Assign your output to the OUT variable.\r\nOUT = dicParam,dat,fn2,exxx,t##dat#createDic(dat)#dat[0].split(TAB) #",
      "VariableInputPorts": true,
      "Id": "89afc3cec1cb47e3a5638db9b8e1799e",
      "Inputs": [
        {
          "Id": "dd32f66e317140f98ced8d2c82a753f9",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "81cc95edbde34151a115b348c3bb56ae",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0153dcc6b00347ec8f0ae247f112ee10",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "84cc9a35836f462a85f9c2f78f126761",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f8df8e91c97049d8a6cbfe8360cd7a4d",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "50fa3c8dd23b496bb560c421b58bb05e",
      "Inputs": [
        {
          "Id": "9b6f2303106541a08e06a7a4da6bb6f2",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b7afecbe0b854b98bebb7bdad21458a6",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the output of node."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "r[0];\nr[2];\nr[1];\nr[4];",
      "Id": "ca6334c35247437d8c015eee8cf6de47",
      "Inputs": [
        {
          "Id": "e15f0d0f1262418d936d3df14a1ad2ed",
          "Name": "r",
          "Description": "r",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3f1e08bf09144301955dbf86710c509a",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6d81da3569084a26864649e4975ae063",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ede639e877e2432d9c7fc167d9abf158",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4ecd6236946042b082c8570b468e886f",
          "Name": "",
          "Description": "Value of expression at line 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "fface7f53eab4942a3c886f747edbc1c",
      "Inputs": [
        {
          "Id": "85b1e9c3102a43768b198b7fe8b50650",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "67840532dc574b0aa9d54ec545b5003b",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the output of node."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "12c6715b1e034910a946bfb54f4aaa47",
      "Inputs": [
        {
          "Id": "b0fd8b77a1f64bf9be062c67e1222b36",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d0b2be56c20d4bb393836f697bedaec8",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the output of node."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "00103cb4105743c6a208e8e3d9fab0c3",
      "Inputs": [
        {
          "Id": "b894e145d60d4350af23e6d825e3cc36",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "841817d3b8044d0499d5209855800d47",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the output of node."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "dir + \"\\\\\";",
      "Id": "c1920d571b374d228a8af97a5adcffb2",
      "Inputs": [
        {
          "Id": "b537f8fd1e434b849b45fc222cd16811",
          "Name": "dir",
          "Description": "dir",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ad405d37083b4b7faffe91dcc5c7eba9",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    }
  ],
  "Connectors": [
    {
      "Start": "6f267b4b1b104a8d90e66e8057913ada",
      "End": "ef1eaf19a6a8445c87fba6fc42f486c3",
      "Id": "7139272bdfff4a6683dca6eb8f4a1037"
    },
    {
      "Start": "e4451bda0c7e4647a68cc82044f5ee51",
      "End": "0a601e54650249099749b0e343eaabbe",
      "Id": "462107c4498e4fbc9d93ee6a3399b3ad"
    },
    {
      "Start": "90994f61d8034f8da8bf9a5b2400656e",
      "End": "476225e5ae9546a4b762e23108bb1411",
      "Id": "0aa3b077f8aa4ecebdd48f546e5600a5"
    },
    {
      "Start": "48be4ef48edd4cbc85d21cdba5428a4e",
      "End": "30c3830bec7149af8541599a069c2a46",
      "Id": "5bb24095b3d44142a4fcd83af34ae37a"
    },
    {
      "Start": "48be4ef48edd4cbc85d21cdba5428a4e",
      "End": "ee61ad7150774ec1b43ad010104ecd52",
      "Id": "8bc125c23175416595b4acab0796754f"
    },
    {
      "Start": "190393ea54234062a680f6bb4b69012d",
      "End": "bc5ea88bd7ff48c9b7522d81f0f4992c",
      "Id": "fdc79f5f51ef4fce9815b4351fe05076"
    },
    {
      "Start": "190393ea54234062a680f6bb4b69012d",
      "End": "cf75929a8f5646cb9b3baa2b4a53fc0b",
      "Id": "7fb203e712114c2abd6c2315409ca8cd"
    },
    {
      "Start": "d723f59df11c49fa85a18bd5505e8d21",
      "End": "0428dd071b5147ef918b1c07f6d4e605",
      "Id": "0ee0782353b34dbeb1fe55d20658a589"
    },
    {
      "Start": "d723f59df11c49fa85a18bd5505e8d21",
      "End": "ba7364d06c6c48b3b131b36b0047f025",
      "Id": "aa0a4ef4e5e24fc7a579f3c62a8664a8"
    },
    {
      "Start": "d723f59df11c49fa85a18bd5505e8d21",
      "End": "d767870da3cb44699626753346045964",
      "Id": "4e6d23163e2c4ea9a0982f19a95fd0df"
    },
    {
      "Start": "d723f59df11c49fa85a18bd5505e8d21",
      "End": "3b1c2ec933514b39a6731b06b18bb583",
      "Id": "6c50e9fb3cd04d0da8e20ac9447a309d"
    },
    {
      "Start": "d723f59df11c49fa85a18bd5505e8d21",
      "End": "be0e1e37d95544c98ce7eaff1f12f4fb",
      "Id": "4c6e33e8bd8c45ec984774c8c0c52e51"
    },
    {
      "Start": "d723f59df11c49fa85a18bd5505e8d21",
      "End": "0e8588ec808845ea90b889dc0fa295b5",
      "Id": "0bbf2403cb1e404f94920f4a25e732d5"
    },
    {
      "Start": "78b270f580f34ff6a074e4beded87d6c",
      "End": "44f00181aee24800a8078619e1ee46ab",
      "Id": "a58a85e2829a459f823ee75b83024ebd"
    },
    {
      "Start": "78b270f580f34ff6a074e4beded87d6c",
      "End": "dd32f66e317140f98ced8d2c82a753f9",
      "Id": "32b6efe08aae41b4ae2297cb8e0bd535"
    },
    {
      "Start": "b49514a2c69b41bc84c96bf0ba888d3f",
      "End": "8e2ccf49312047ac8620afb5d0b4258f",
      "Id": "c9b7bcc07fb1458e80ebed0798e5e9ef"
    },
    {
      "Start": "b49514a2c69b41bc84c96bf0ba888d3f",
      "End": "e2813f43ad7a488e8ac28246dd32ee29",
      "Id": "d604289b4ad746d5a26a52c569ac8797"
    },
    {
      "Start": "f024bb44af2747eab70333054069d3f6",
      "End": "6de22c340a1c4dd280f764a7eb680c8a",
      "Id": "8a91b8f08aad4fd0bd97fc2b87eab1b6"
    },
    {
      "Start": "5e6b5d161ec441219f04deafac4f23ed",
      "End": "b537f8fd1e434b849b45fc222cd16811",
      "Id": "129dd51a5c944677a75fe61bb9e8808a"
    },
    {
      "Start": "69b47a30131b4ac084382b619730e4c9",
      "End": "d43a4cf3ae0a4df7beaf82955eb7c70f",
      "Id": "6ec8121a3d3c49c39585faae489f7490"
    },
    {
      "Start": "79acca297355450591c2422f2e2e20ac",
      "End": "26c46974a99149c0b0960e5b4795b565",
      "Id": "39ba5535363d4b0799f94048197535a9"
    },
    {
      "Start": "79acca297355450591c2422f2e2e20ac",
      "End": "84cc9a35836f462a85f9c2f78f126761",
      "Id": "b43b5ceeb8ad410fb5c5c1fe33b359ae"
    },
    {
      "Start": "610e9edfc0c144a8bafa874ed1b8e138",
      "End": "c307211fef704e2e939b5f851b5d4aee",
      "Id": "ce974cd29aeb44fb97c2e8ecb75e4e98"
    },
    {
      "Start": "433a42f9e4974f32add05b9da9bd6c87",
      "End": "fff76cff82bf4bc4bdab6aa5f6036ab4",
      "Id": "89c32b12856f4adaa684003acfd02f26"
    },
    {
      "Start": "433a42f9e4974f32add05b9da9bd6c87",
      "End": "0153dcc6b00347ec8f0ae247f112ee10",
      "Id": "d240ec7d7fd440b3b1782ce890275871"
    },
    {
      "Start": "340883ed19a74ea4a363d01282d2e7d6",
      "End": "de5aec0228b74393b8988633405cab65",
      "Id": "20cdd3efa5b8452298c01e767b0759f4"
    },
    {
      "Start": "500ca693f0654b6688ec1568af20ff89",
      "End": "718717ae64394ce3874e1990a39a4d2e",
      "Id": "a57ebedb448e4076ab68356a343888ae"
    },
    {
      "Start": "500ca693f0654b6688ec1568af20ff89",
      "End": "81cc95edbde34151a115b348c3bb56ae",
      "Id": "628082a9923d44f7b600c98b79e821d9"
    },
    {
      "Start": "9b4f72c0db0d4f29b226f34242e4c066",
      "End": "6292c18c362e461db1a51dd1d8f65e5d",
      "Id": "1df886058c054d0a9d6cad1e2cd3fece"
    },
    {
      "Start": "4027f85c589a426abf25a2acbdf999eb",
      "End": "6a275a95e94e4379a07152edec3da2bc",
      "Id": "5fc248d95bb3438a9810687cb2ef153d"
    },
    {
      "Start": "54e14a900bfc4dfca68b7b09a7861f7f",
      "End": "b27f2767c56e476787a8e545be1175c1",
      "Id": "57c4ecbd10d24276a32a0d36ac5e6ca8"
    },
    {
      "Start": "5b626fb910f846f98f7babec6286e93f",
      "End": "353c8c292a044c83b01db78a0ee7f6c2",
      "Id": "7a4954d345cc479381b33b12ddfaa751"
    },
    {
      "Start": "5b626fb910f846f98f7babec6286e93f",
      "End": "e2392d2d483148f392f0a8487421f5f7",
      "Id": "9057089eadf9415e807bffdf76cbcacb"
    },
    {
      "Start": "46512a5fde864fba9928dd021b9040ec",
      "End": "3424b50de2a74ab699442c072c368521",
      "Id": "3aab6c17182442ebb71e0b434b78af0c"
    },
    {
      "Start": "c10b63ac395e42a0ac3567e5be6ab7fa",
      "End": "22cd455b431d43db8f0087d723476181",
      "Id": "e9b18ae658f84fbe91e90e2d8e0c56bd"
    },
    {
      "Start": "c10b63ac395e42a0ac3567e5be6ab7fa",
      "End": "8543c51727d54a64b2f7a5d8bec42c30",
      "Id": "667620cbd8664bd2adf6ddf8f6b21bf6"
    },
    {
      "Start": "8c93e48a66a0474faabcaa6bcfda2827",
      "End": "b8d64936ad0c4b18878cd928ffad4227",
      "Id": "896bbdf5e31045e0be9d704b71e876fa"
    },
    {
      "Start": "f8df8e91c97049d8a6cbfe8360cd7a4d",
      "End": "e15f0d0f1262418d936d3df14a1ad2ed",
      "Id": "c2bf8b4f772a47f68e2934195cc03f8b"
    },
    {
      "Start": "3f1e08bf09144301955dbf86710c509a",
      "End": "9b6f2303106541a08e06a7a4da6bb6f2",
      "Id": "5aa69d08a7cf4b94927a35718d8e649e"
    },
    {
      "Start": "6d81da3569084a26864649e4975ae063",
      "End": "85b1e9c3102a43768b198b7fe8b50650",
      "Id": "b00fc1fb8ce845d3b754281fdf304a9f"
    },
    {
      "Start": "ede639e877e2432d9c7fc167d9abf158",
      "End": "b0fd8b77a1f64bf9be062c67e1222b36",
      "Id": "7c41657e6630456c99d25fdf68ae1ea0"
    },
    {
      "Start": "4ecd6236946042b082c8570b468e886f",
      "End": "b894e145d60d4350af23e6d825e3cc36",
      "Id": "a530043b32db45b5863ffe7850e01eae"
    },
    {
      "Start": "ad405d37083b4b7faffe91dcc5c7eba9",
      "End": "19314bbd4ad84b7fabbe11684a9b0b15",
      "Id": "c8b65d218f2e440a8fd9cd452a527934"
    }
  ],
  "Dependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.1.0.7500",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "18ec972b473b4272969d8e2115eee377",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1744.3002600732102,
        "Y": -184.55633418073722
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "2304b0b89bb64748bf5be85e45904bbe",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1378.7844956036447,
        "Y": -0.51961315799098884
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "e9e717f70a6d47b9997305cdabb7eedf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -537.1812349831871,
        "Y": -205.78855331488575
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "69c1ad048a6b48af88940878fc7f88f8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -297.89620346559366,
        "Y": -482.19748086713935
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script-Read txt-OUT List DATA",
        "Id": "ce02a93d0c244fcd9d661856784348c1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -15.145501257708929,
        "Y": -350.4445611973839
      },
      {
        "ShowGeometry": true,
        "Name": "Browse DIR manualy",
        "Id": "85cea14d2dd94e1a85f60b881d20cd40",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1748.0853366150714,
        "Y": -432.81327817726878
      },
      {
        "ShowGeometry": true,
        "Name": "Directory Path",
        "Id": "2380f17afee247ff97aa23f6550eb2ac",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1739.5673088948056,
        "Y": -347.02553407307676
      },
      {
        "ShowGeometry": true,
        "Name": "If",
        "Id": "a20e50bbdced420e8e9df7e25a320ec1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1110.2092363350891,
        "Y": -402.06042206814107
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script-Read txt-OUT DIC ARRAY",
        "Id": "b12b703df88e43a3b252d92beeaab801",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -522.02225368121674,
        "Y": 943.327168852898
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "e9d0de5d67a8426283b87b7c038f6d38",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -788.28237981578275,
        "Y": 929.3141601245477
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script-Read txt-OUT DIC",
        "Id": "e97406f4443d400cb2c2d509682cd7b2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -537.89173541836942,
        "Y": 653.3461795831322
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "dcdf5ba94edd4e8d9001c5919a074d05",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -774.2589986479303,
        "Y": 438.02025661015841
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script-Read txt-OUT DIC",
        "Id": "9a80a915acd043efa6a899db63a88965",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -564.20946289064386,
        "Y": 149.14972607603789
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "d4b09077fecd4a9faa08e7fe6a0ac901",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -784.06351677469388,
        "Y": 144.36722225832187
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script-Write to TXT",
        "Id": "65297558c818444d90061262d2f0ab9f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 602.73649243486011,
        "Y": -50.971372490869612
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "7bc0437ede304c48a2aca01bf5a4db38",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 283.38795375228983,
        "Y": -5.0404366740053774
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "43b5c171c80047aaad0c0d34861447e3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1593.5181644180407,
        "Y": -173.88926891842715
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script-Write to TXT-APPEND",
        "Id": "533bf95d25f64a01a8b5bea2bc6a7fc0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "X": 1191.74819382597,
        "Y": 320.392609538089
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "2e8336ab2c9045c998d253c383978e48",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 841.77063962990633,
        "Y": 400.71424957613613
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script-Read txt-OUT DIC ARRAY",
        "Id": "535be5ed7c654d729b8fa9b6b8798fe3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "X": 1511.0972473384149,
        "Y": 254.92803161718592
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script-Write to TXT-APPEND",
        "Id": "243c510c53a54e8696c9774d2a50c5ce",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1823.9784950915268,
        "Y": 376.46724238734737
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script-Read txt-OUT List DATA",
        "Id": "89afc3cec1cb47e3a5638db9b8e1799e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "X": -67.4030399767988,
        "Y": 114.84298154657
      },
      {
        "ShowGeometry": true,
        "Name": "Watch",
        "Id": "50fa3c8dd23b496bb560c421b58bb05e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 233.57422155785002,
        "Y": 538.620725462408
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "ca6334c35247437d8c015eee8cf6de47",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 29.0,
        "Y": 362.0
      },
      {
        "ShowGeometry": true,
        "Name": "Watch",
        "Id": "fface7f53eab4942a3c886f747edbc1c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 477.33473191531527,
        "Y": 539.33053031669874
      },
      {
        "ShowGeometry": true,
        "Name": "Watch",
        "Id": "12c6715b1e034910a946bfb54f4aaa47",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -60.152513197031965,
        "Y": 535.6923045808602
      },
      {
        "ShowGeometry": true,
        "Name": "Watch",
        "Id": "00103cb4105743c6a208e8e3d9fab0c3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 311.83969286894251,
        "Y": 320.84975942147628
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "c1920d571b374d228a8af97a5adcffb2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1485.2227614166893,
        "Y": -338.73086920398976
      }
    ],
    "Annotations": [
      {
        "Id": "33a7767c06a7452b8e6ac89f81c1f449",
        "Title": "INPUT MAIN",
        "Nodes": [
          "2304b0b89bb64748bf5be85e45904bbe"
        ],
        "Left": -1388.7844956036447,
        "Top": -30.519613157990989,
        "Width": 273.0,
        "Height": 187.0,
        "FontSize": 14.0,
        "InitialTop": -0.51961315799098884,
        "InitialHeight": 145.0,
        "TextblockHeight": 0.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "a0feec31821748f5a1a4bcef17342602",
        "Title": "Get Revit models' dir",
        "Nodes": [
          "18ec972b473b4272969d8e2115eee377",
          "e9e717f70a6d47b9997305cdabb7eedf",
          "43b5c171c80047aaad0c0d34861447e3"
        ],
        "Left": -1754.3002600732102,
        "Top": -235.78855331488575,
        "Width": 1319.1190250900231,
        "Height": 181.8992843964586,
        "FontSize": 24.0,
        "InitialTop": -205.78855331488575,
        "InitialHeight": 176.8992843964586,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "aa33c4d5995b4537abfd832f04ba6775",
        "Title": "DIR",
        "Nodes": [
          "85cea14d2dd94e1a85f60b881d20cd40",
          "2380f17afee247ff97aa23f6550eb2ac"
        ],
        "Left": -1758.0853366150714,
        "Top": -485.81327817726878,
        "Width": 183.51802772026576,
        "Height": 232.78774410419203,
        "FontSize": 36.0,
        "InitialTop": -432.81327817726878,
        "InitialHeight": 230.78774410419203,
        "TextblockHeight": 43.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "72c64e1498514c81a315aaac52f2adaf",
        "Title": "",
        "Nodes": [
          "a20e50bbdced420e8e9df7e25a320ec1"
        ],
        "Left": -1120.2092363350891,
        "Top": -455.06042206814107,
        "Width": 147.0,
        "Height": 198.0,
        "FontSize": 36.0,
        "InitialTop": -402.06042206814107,
        "InitialHeight": 145.0,
        "TextblockHeight": 43.0,
        "Background": "#FFFF7BAC"
      },
      {
        "Id": "a79bf3d122934291bf17f30c7eafea72",
        "Title": "create Qto elem dat",
        "Nodes": [
          "69c1ad048a6b48af88940878fc7f88f8",
          "ce02a93d0c244fcd9d661856784348c1"
        ],
        "Left": -307.89620346559366,
        "Top": -535.19748086713935,
        "Width": 547.75070220788473,
        "Height": 355.75291966975544,
        "FontSize": 36.0,
        "InitialTop": -482.19748086713935,
        "InitialHeight": 276.75291966975544,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "8ce3f75ccc4f453695fead44a3181a16",
        "Title": "DIC SOCats",
        "Nodes": [
          "e97406f4443d400cb2c2d509682cd7b2",
          "dcdf5ba94edd4e8d9001c5919a074d05"
        ],
        "Left": -784.2589986479303,
        "Top": 385.02025661015841,
        "Width": 463.36726322956088,
        "Height": 361.32592297297379,
        "FontSize": 36.0,
        "InitialTop": 438.02025661015841,
        "InitialHeight": 360.32592297297379,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "08607942da3f4c128a76bf1d6dd6c974",
        "Title": "DIC QTOreq",
        "Nodes": [
          "b12b703df88e43a3b252d92beeaab801",
          "e9d0de5d67a8426283b87b7c038f6d38"
        ],
        "Left": -798.28237981578275,
        "Top": 876.3141601245477,
        "Width": 538.260126134566,
        "Height": 160.01300872835031,
        "FontSize": 36.0,
        "InitialTop": 929.3141601245477,
        "InitialHeight": 159.01300872835031,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "66dc0751d2d8434ca0fa3b98b435c6b2",
        "Title": "LIST SOCats = KEYS",
        "Nodes": [
          "9a80a915acd043efa6a899db63a88965",
          "d4b09077fecd4a9faa08e7fe6a0ac901"
        ],
        "Left": -794.06351677469388,
        "Top": 91.367222258321874,
        "Width": 446.85405388405,
        "Height": 150.78250381771602,
        "FontSize": 36.0,
        "InitialTop": 144.36722225832187,
        "InitialHeight": 149.78250381771602,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "811c674a2a244155a41f0d98ee304d9e",
        "Title": "Instantly data",
        "Nodes": [
          "65297558c818444d90061262d2f0ab9f",
          "7bc0437ede304c48a2aca01bf5a4db38"
        ],
        "Left": 273.38795375228983,
        "Top": -103.97137249086961,
        "Width": 514.34853868257028,
        "Height": 219.93093581686423,
        "FontSize": 36.0,
        "InitialTop": -50.971372490869612,
        "InitialHeight": 190.93093581686423,
        "TextblockHeight": 43.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "7f66c678aca74ce6ad444e0c06538cbb",
        "Title": "Combine data",
        "Nodes": [
          "533bf95d25f64a01a8b5bea2bc6a7fc0",
          "2e8336ab2c9045c998d253c383978e48"
        ],
        "Left": 831.77063962990633,
        "Top": 267.392609538089,
        "Width": 600.97755419606369,
        "Height": 236.32164003804712,
        "FontSize": 36.0,
        "InitialTop": 320.392609538089,
        "InitialHeight": 225.32164003804712,
        "TextblockHeight": 43.0,
        "Background": "#FFFFAA45"
      }
    ],
    "X": 499.51722273770861,
    "Y": 486.99002153142374,
    "Zoom": 0.19889530630992705
  }
}