{
  "Uuid": "3c9d0464-8643-5ffe-96e5-ab1769818209",
  "IsCustomNode": false,
  "Description": "",
  "Name": "01-OUTPUT-00-WRITE EXCEL REQUIREMENT TO TXT-2",
  "ElementResolver": {
    "ResolutionMap": {
      "List": {
        "Key": "List",
        "Value": "BuiltIn.ds"
      }
    }
  },
  "Inputs": [
    {
      "Id": "85cea14d2dd94e1a85f60b881d20cd40",
      "Name": "Browse DIR manualy",
      "Type": "boolean",
      "Value": "false",
      "Description": "Selection between a true and false."
    },
    {
      "Id": "2380f17afee247ff97aa23f6550eb2ac",
      "Name": "Directory Path",
      "Type": "string",
      "Value": "R:\\BimESC\\00-BIM STANDARD\\DYNAMO\\210223",
      "Description": "Allows you to select a directory on the system to get its path"
    }
  ],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nclr.AddReference('RevitAPIUI')\r\nfrom Autodesk.Revit.UI import TaskDialog\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nclr.AddReference(\"RevitServices\")\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\nfrom System.Collections.Generic import *\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\n\r\n##\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\nuiapp = DocumentManager.Instance.CurrentUIApplication\r\napp = uiapp.Application\r\n\r\nopt = Options()\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n\r\n\r\n##\r\n\r\nres = []\r\ndir = \"\"\r\ndataFullPath =\"\"\r\n\r\n#\r\ntry:\r\n\tp = doc.PathName.split(\"\\\\\")\r\n\tpp = p[0:len(p)-1]\r\n\r\n\tfor s in pp:\r\n\t\tdir += s + \"\\\\\"\r\nexcept:\r\n\tpass\r\n\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = dir",
      "VariableInputPorts": true,
      "Id": "18ec972b473b4272969d8e2115eee377",
      "Inputs": [
        {
          "Id": "791f2c4f4c244b4bbd668bf0e87131be",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6f267b4b1b104a8d90e66e8057913ada",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "shn = \"QTOreq\";\nSOCats = \"SOCats\";",
      "Id": "2304b0b89bb64748bf5be85e45904bbe",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ed50d8175dc84c34bfd25a1d1d43d3a1",
          "Name": "",
          "Description": "shn",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8c2d344771154bb0a22c5f137e5d7dd3",
          "Name": "",
          "Description": "SOCats",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nclr.AddReference('RevitAPIUI')\r\nfrom Autodesk.Revit.UI import TaskDialog\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nclr.AddReference(\"RevitServices\")\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\nfrom System.Collections.Generic import *\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\n\r\n##\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\nuiapp = DocumentManager.Instance.CurrentUIApplication\r\napp = uiapp.Application\r\n\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\n\r\n\r\nt = Transaction(doc)\r\n\t\r\nt.Start(\"Units setup\")\r\ntry:\r\n\t#Area\r\n\tunit = Units(UnitSystem.Metric)\r\n\r\n\tfmOp = FormatOptions(DisplayUnitType.DUT_SQUARE_METERS,UnitSymbolType.UST_NONE,0.001)\r\n\t\r\n\tunit.SetFormatOptions(UnitType.UT_Area,fmOp)\r\n\t\r\n\tdoc.SetUnits(unit)\r\n\t#Volume\r\n\tunit1 = Units(UnitSystem.Metric)\r\n\r\n\tfmOp1 = FormatOptions(DisplayUnitType.DUT_CUBIC_METERS,UnitSymbolType.UST_NONE,0.001)\r\n\t\r\n\tunit.SetFormatOptions(UnitType.UT_Volume,fmOp1)\r\n\t\r\n\tdoc.SetUnits(unit)\r\n\t#doc.GetUnits().SetFormatOptions(UnitType.UT_Area,fmOp)\r\nexcept Exception, e:\r\n\tpass\r\nt.Commit()\r\n\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = 0",
      "VariableInputPorts": true,
      "Id": "00a0f89a880b4019abc2622db9a7ee7e",
      "Inputs": [
        {
          "Id": "9d453d04f4394058a8b3bec7d622f3c2",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b4a640dd38184f0a8d56ce344c02d6fe",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "dir;",
      "Id": "e9e717f70a6d47b9997305cdabb7eedf",
      "Inputs": [
        {
          "Id": "d43a4cf3ae0a4df7beaf82955eb7c70f",
          "Name": "dir",
          "Description": "dir",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d723f59df11c49fa85a18bd5505e8d21",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('System.IO')\r\nclr.AddReference('System.Drawing')\r\nclr.AddReference('System.Reflection')\r\nclr.AddReference('System.Threading')\r\nclr.AddReference(\"System.Windows.Forms\")\r\n\r\nimport System\r\nimport System.IO\r\nimport System.Drawing\r\nimport System.Reflection\r\nimport System.Windows.Forms\r\n\r\nfrom System.Threading import ApartmentState, Thread, ThreadStart\r\nfrom System.Windows.Forms import *\r\n\r\nimport os\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nexDat = IN[0]\r\npath = IN[1]\r\n#list1Line = []\r\nallText=\"\"\r\n\r\nTAB = \"\\t\"\r\nBREAKLINE = \"\\n\"\r\n\r\ntest1 = os.path.isdir(path)\r\ntest2 = os.path.exists(path)\r\ntest3 = os.path.isfile(path)\r\n\r\n# Place your code below this line\r\n\r\ndef writeTxtFromExcelDat(exDat,_TAB,_BREAKLINE): #from excel data list\r\n\tallText=\"\"\r\n\tTAB = _TAB\r\n\tBREAKLINE = _BREAKLINE\t\r\n\tfor d in exDat:\r\n\t\tstr = \"\"\r\n\t\tstrF = \"{0}{1}\"\t\t\r\n\t\tif d[0] and len(d)>0:\t\t\r\n\t\t\tfor c in d:\r\n\t\t\t\tif c:\r\n\t\t\t\t\tstr += strF.format(c,TAB)\r\n\t\tif len(str)>0:\r\n\t\t\tstr += BREAKLINE\t\r\n\t\t#list1Line.append(str)\r\n\t\tallText += str\t\r\n\tf = open(path,\"w\")\r\n\tf.write(allText.encode('utf8'))\r\n\tf.close\r\n\treturn allText\r\ndef writeTxtFromTxtString(exDat,_TAB,_BREAKLINE): #from txt string\t\r\n\tf = open(path,\"w\")\r\n\tf.write(exDat.encode('utf8'))\r\n\tf.close\r\n\treturn exDat\r\n###################\r\nif not test1 and len(exDat) >0:\r\n\tallText = writeTxtFromExcelDat(exDat,TAB,BREAKLINE)\r\n#MessageBox.Show(allText)\r\n# Assign your output to the OUT variable.\r\nOUT = allText",
      "VariableInputPorts": true,
      "Id": "12e9252ae759437eb45f2e0ca7b771ff",
      "Inputs": [
        {
          "Id": "cff0f9d94ea54bed9200b2940aabeaeb",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a77fae9ca34d4abe955ae6e64430f415",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cbecd45c615c4eab8a0d9b12c0fd573e",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": false,
      "Id": "85cea14d2dd94e1a85f60b881d20cd40",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f024bb44af2747eab70333054069d3f6",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Directory, CoreNodeModels",
      "HintPath": "C:\\Users\\USER\\Downloads\\DYNAMO-210218\\210218-Z2 - ARC\\No file selected",
      "InputValue": "R:\\BimESC\\00-BIM STANDARD\\DYNAMO\\210223",
      "NodeType": "ExtensionNode",
      "Id": "2380f17afee247ff97aa23f6550eb2ac",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5e6b5d161ec441219f04deafac4f23ed",
          "Name": "",
          "Description": "Directory",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a directory on the system to get its path"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.If, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "a20e50bbdced420e8e9df7e25a320ec1",
      "Inputs": [
        {
          "Id": "6de22c340a1c4dd280f764a7eb680c8a",
          "Name": "test",
          "Description": "Test block",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "19314bbd4ad84b7fabbe11684a9b0b15",
          "Name": "true",
          "Description": "True block",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b27f2767c56e476787a8e545be1175c1",
          "Name": "false",
          "Description": "False block",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "69b47a30131b4ac084382b619730e4c9",
          "Name": "result",
          "Description": "result",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Conditional statement"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "dir+shn+\".txt\";",
      "Id": "cc178813d363444e88b1cf7daaad5f13",
      "Inputs": [
        {
          "Id": "72efcad0723e4cc589eea2944a319b82",
          "Name": "dir",
          "Description": "dir",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d024de9c29474ef0876dc896da7a0f7a",
          "Name": "shn",
          "Description": "shn",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "01c29f6cbe1f4490aba2674fe50f0288",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "dir+shn+\".txt\";",
      "Id": "791c72e217c34b448d825eeacb8f1ae1",
      "Inputs": [
        {
          "Id": "f45da4d0a4c04ec1805c8b022a1c6231",
          "Name": "dir",
          "Description": "dir",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1f80792bfdab4653917c798883542328",
          "Name": "shn",
          "Description": "shn",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6adebb7042d74b8bb9284d561bd34b94",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "dir+shn+\".xlsx\";\ntrue;",
      "Id": "4a126fc5c9654b6594f1a95f3391f047",
      "Inputs": [
        {
          "Id": "5f3c2187196f462c9ac44a7891747a09",
          "Name": "dir",
          "Description": "dir",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "803bbccdb7ae4485879d7698fba9f547",
          "Name": "shn",
          "Description": "shn",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "adbe17cfd96f48cf86d74e52ae7309aa",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d22a92092f31408b8e1caf0644067d7c",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "excelFileName = \"BIMData\";",
      "Id": "96c709e51a1b4520b9ad6f3460062b62",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7af4b4fc68e041ef963ecacbdd58b004",
          "Name": "",
          "Description": "excelFileName",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSOffice.Data.ImportExcel@var,string,bool,bool",
      "Id": "6151babe7c2b42dfb584e5ad918fbc8c",
      "Inputs": [
        {
          "Id": "bf2214cf98f842f8b02f60a24ebb191e",
          "Name": "file",
          "Description": "File representing the Microsoft Excel spreadsheet.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f218fd516b3a4d4f812e42edd04f5025",
          "Name": "sheetName",
          "Description": "Name of the worksheet containing the data.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dd27e621d4b64a1f8b9e042ed30c16f0",
          "Name": "readAsStrings",
          "Description": "Toggle to switch between reading Excel file as strings.\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3e27b4ad2d8e4e42bee15e65200b039e",
          "Name": "showExcel",
          "Description": "Toggle to switch between showing and hiding the main Excel window.\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cafea741fcb24f05a864622cbd8b5485",
          "Name": "data",
          "Description": "Rows of data from the Excel worksheet.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Read data from a Microsoft Excel spreadsheet. Data is read by row and returned in a series of lists by row. Rows and columns are zero-indexed; for example, the value in cell A1 will appear in the data list at [0,0]. This node requires Microsoft Excel to be installed.\n\nData.ImportExcel (file: var, sheetName: string, readAsStrings: bool = false, showExcel: bool = true): var[][]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.FileObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "62d4e7079ecb4478a3e6b445853987de",
      "Inputs": [
        {
          "Id": "02083136377b4ac3b91ebe8687ffe857",
          "Name": "path",
          "Description": "Path to the file.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3b127e3e273048e2a95f4b06554656de",
          "Name": "file",
          "Description": "File object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a file object from a path."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('System.IO')\r\nclr.AddReference('System.Drawing')\r\nclr.AddReference('System.Reflection')\r\nclr.AddReference('System.Threading')\r\nclr.AddReference(\"System.Windows.Forms\")\r\n\r\nimport System\r\nimport System.IO\r\nimport System.Drawing\r\nimport System.Reflection\r\nimport System.Windows.Forms\r\n\r\nfrom System.Threading import ApartmentState, Thread, ThreadStart\r\nfrom System.Windows.Forms import *\r\n\r\nimport os\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nexDat = IN[0]\r\npath = IN[1]\r\n#list1Line = []\r\nallText=\"\"\r\n\r\nTAB = \"\\t\"\r\nBREAKLINE = \"\\n\"\r\n\r\ntest1 = os.path.isdir(path)\r\ntest2 = os.path.exists(path)\r\ntest3 = os.path.isfile(path)\r\n\r\n# Place your code below this line\r\n\r\ndef writeTxtFromExcelDat(exDat,_TAB,_BREAKLINE): #from excel data list\r\n\tallText=\"\"\r\n\tTAB = _TAB\r\n\tBREAKLINE = _BREAKLINE\t\r\n\tfor d in exDat:\r\n\t\tstr = \"\"\r\n\t\tstrF = \"{0}{1}\"\t\t\r\n\t\tif d[0] and len(d)>0:\t\t\r\n\t\t\tfor c in d:\r\n\t\t\t\tif c:\r\n\t\t\t\t\tstr += strF.format(c,TAB)\r\n\t\tif len(str)>0:\r\n\t\t\tstr += BREAKLINE\t\r\n\t\t#list1Line.append(str)\r\n\t\tallText += str\t\r\n\tf = open(path,\"w\")\r\n\tf.write(allText.encode('utf8'))\r\n\tf.close\r\n\treturn allText\r\ndef writeTxtFromTxtString(exDat,_TAB,_BREAKLINE): #from txt string\t\r\n\tf = open(path,\"w\")\r\n\tf.write(exDat.encode('utf8'))\r\n\tf.close\r\n\treturn exDat\r\n###################\r\nif not test1 and len(exDat) >0:\r\n\tallText = writeTxtFromExcelDat(exDat,TAB,BREAKLINE)\r\n#MessageBox.Show(allText)\r\n# Assign your output to the OUT variable.\r\nOUT = allText",
      "VariableInputPorts": true,
      "Id": "732ce0f868354beea908434ae8170fa8",
      "Inputs": [
        {
          "Id": "10bbd80200d14f8ba39f2e4211f9d89b",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d4fb96293fd34c85b9e0d68f9037f996",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e1a0fba42a4b4c56adba8e9b096ff390",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSOffice.Data.ImportExcel@var,string,bool,bool",
      "Id": "4df0439c7bda4b1a8a17a865beba4bef",
      "Inputs": [
        {
          "Id": "68d9e0c3e3b241c9ac3a5c55cb60e1e8",
          "Name": "file",
          "Description": "File representing the Microsoft Excel spreadsheet.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "873f9058c5ad40b9b63ef9d1d04ed0e6",
          "Name": "sheetName",
          "Description": "Name of the worksheet containing the data.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e51364b2d0ca4a16bb630cc3c15466b7",
          "Name": "readAsStrings",
          "Description": "Toggle to switch between reading Excel file as strings.\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8e148411f6434df28bef114c33681d70",
          "Name": "showExcel",
          "Description": "Toggle to switch between showing and hiding the main Excel window.\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8981e496736f486fa9f36689b59cd0a7",
          "Name": "data",
          "Description": "Rows of data from the Excel worksheet.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Read data from a Microsoft Excel spreadsheet. Data is read by row and returned in a series of lists by row. Rows and columns are zero-indexed; for example, the value in cell A1 will appear in the data list at [0,0]. This node requires Microsoft Excel to be installed.\n\nData.ImportExcel (file: var, sheetName: string, readAsStrings: bool = false, showExcel: bool = true): var[][]"
    }
  ],
  "Connectors": [
    {
      "Start": "6f267b4b1b104a8d90e66e8057913ada",
      "End": "b27f2767c56e476787a8e545be1175c1",
      "Id": "b658da4a29f749509f33aa98f6e5a2b6"
    },
    {
      "Start": "ed50d8175dc84c34bfd25a1d1d43d3a1",
      "End": "1f80792bfdab4653917c798883542328",
      "Id": "b404a901acfe483bb686e6bd2b04248a"
    },
    {
      "Start": "ed50d8175dc84c34bfd25a1d1d43d3a1",
      "End": "f218fd516b3a4d4f812e42edd04f5025",
      "Id": "07539bae819343188191a845df1ff4e5"
    },
    {
      "Start": "8c2d344771154bb0a22c5f137e5d7dd3",
      "End": "d024de9c29474ef0876dc896da7a0f7a",
      "Id": "141c5d4a751546a3afd7a1b1a059fa4c"
    },
    {
      "Start": "8c2d344771154bb0a22c5f137e5d7dd3",
      "End": "873f9058c5ad40b9b63ef9d1d04ed0e6",
      "Id": "01bec966abcc4d25a750b05c0402f79b"
    },
    {
      "Start": "d723f59df11c49fa85a18bd5505e8d21",
      "End": "72efcad0723e4cc589eea2944a319b82",
      "Id": "9ffa983935be42a58b66b96b17644401"
    },
    {
      "Start": "d723f59df11c49fa85a18bd5505e8d21",
      "End": "f45da4d0a4c04ec1805c8b022a1c6231",
      "Id": "43c62b107b8e4a9ca3d20a304f9be1fb"
    },
    {
      "Start": "d723f59df11c49fa85a18bd5505e8d21",
      "End": "5f3c2187196f462c9ac44a7891747a09",
      "Id": "61a9888263c14b35904ba497cb487d09"
    },
    {
      "Start": "f024bb44af2747eab70333054069d3f6",
      "End": "6de22c340a1c4dd280f764a7eb680c8a",
      "Id": "8a91b8f08aad4fd0bd97fc2b87eab1b6"
    },
    {
      "Start": "5e6b5d161ec441219f04deafac4f23ed",
      "End": "19314bbd4ad84b7fabbe11684a9b0b15",
      "Id": "3d7e8b1bf1e345758a5a74fa5b6a1787"
    },
    {
      "Start": "69b47a30131b4ac084382b619730e4c9",
      "End": "d43a4cf3ae0a4df7beaf82955eb7c70f",
      "Id": "2bb9eb00f2224b2d96c20dcdeb2fe99a"
    },
    {
      "Start": "01c29f6cbe1f4490aba2674fe50f0288",
      "End": "a77fae9ca34d4abe955ae6e64430f415",
      "Id": "82f2536717054a3b9f44e64e85a05be1"
    },
    {
      "Start": "6adebb7042d74b8bb9284d561bd34b94",
      "End": "d4fb96293fd34c85b9e0d68f9037f996",
      "Id": "6a7c83a80a234232af8c634a26b28068"
    },
    {
      "Start": "adbe17cfd96f48cf86d74e52ae7309aa",
      "End": "02083136377b4ac3b91ebe8687ffe857",
      "Id": "116e1547d251464683dbd482cff8c256"
    },
    {
      "Start": "d22a92092f31408b8e1caf0644067d7c",
      "End": "3e27b4ad2d8e4e42bee15e65200b039e",
      "Id": "6210b6b3bd3e4b549c2561fcc5b46e80"
    },
    {
      "Start": "d22a92092f31408b8e1caf0644067d7c",
      "End": "dd27e621d4b64a1f8b9e042ed30c16f0",
      "Id": "4e033b5fd4164019b2ada0ddd3eaa00a"
    },
    {
      "Start": "d22a92092f31408b8e1caf0644067d7c",
      "End": "e51364b2d0ca4a16bb630cc3c15466b7",
      "Id": "8beb4376963644629b6a969e4b39a5b6"
    },
    {
      "Start": "d22a92092f31408b8e1caf0644067d7c",
      "End": "8e148411f6434df28bef114c33681d70",
      "Id": "9d0eca65627a4a269842fc266dcc9041"
    },
    {
      "Start": "7af4b4fc68e041ef963ecacbdd58b004",
      "End": "803bbccdb7ae4485879d7698fba9f547",
      "Id": "a5ce0b2fe0c4406f973d661952dd5a71"
    },
    {
      "Start": "cafea741fcb24f05a864622cbd8b5485",
      "End": "10bbd80200d14f8ba39f2e4211f9d89b",
      "Id": "9466df61431540e4ba145751dc5a51ae"
    },
    {
      "Start": "3b127e3e273048e2a95f4b06554656de",
      "End": "bf2214cf98f842f8b02f60a24ebb191e",
      "Id": "4fe49e2b4ee84e44af944d08cffaa26f"
    },
    {
      "Start": "3b127e3e273048e2a95f4b06554656de",
      "End": "68d9e0c3e3b241c9ac3a5c55cb60e1e8",
      "Id": "7bf6eb7214b3474e8088bace85d14165"
    },
    {
      "Start": "8981e496736f486fa9f36689b59cd0a7",
      "End": "cff0f9d94ea54bed9200b2940aabeaeb",
      "Id": "7f51c4fa417a434eacd60fab98867a6a"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.3.0.5885",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "Id": "18ec972b473b4272969d8e2115eee377",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Python Script",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -935.98280688964985,
        "Y": -382.2641462658
      },
      {
        "Id": "2304b0b89bb64748bf5be85e45904bbe",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -1235.6994644678139,
        "Y": -6.4659263385023
      },
      {
        "Id": "00a0f89a880b4019abc2622db9a7ee7e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Python Script-Setup Units",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -1231.1854644469786,
        "Y": -259.87281237971138
      },
      {
        "Id": "e9e717f70a6d47b9997305cdabb7eedf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -509.13790668559432,
        "Y": -372.02895713032581
      },
      {
        "Id": "12e9252ae759437eb45f2e0ca7b771ff",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Python Script-Write Txt",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 366.702092296319,
        "Y": 215.702055217049
      },
      {
        "Id": "85cea14d2dd94e1a85f60b881d20cd40",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Name": "Browse DIR manualy",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -1213.3435126522465,
        "Y": -472.55154738356759
      },
      {
        "Id": "2380f17afee247ff97aa23f6550eb2ac",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Name": "Directory Path",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -1281.1498523165058,
        "Y": -386.74625745924584
      },
      {
        "Id": "a20e50bbdced420e8e9df7e25a320ec1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "If",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -708.62684039803912,
        "Y": -398.26934560816994
      },
      {
        "Id": "cc178813d363444e88b1cf7daaad5f13",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -92.218458315774228,
        "Y": 240.86015759815706
      },
      {
        "Id": "791c72e217c34b448d825eeacb8f1ae1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -102.74430425519176,
        "Y": -41.499011051349669
      },
      {
        "Id": "4a126fc5c9654b6594f1a95f3391f047",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -259.70273578872593,
        "Y": -630.61642125788285
      },
      {
        "Id": "96c709e51a1b4520b9ad6f3460062b62",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -1271.824115739711,
        "Y": -142.1109058940782
      },
      {
        "Id": "6151babe7c2b42dfb584e5ad918fbc8c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Data.ImportExcel",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 235.64949642351667,
        "Y": -618.56358743986186
      },
      {
        "Id": "62d4e7079ecb4478a3e6b445853987de",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "File From Path",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 31.035984010209859,
        "Y": -635.18726667945577
      },
      {
        "Id": "732ce0f868354beea908434ae8170fa8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Python Script-Write Txt",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 356.176246356901,
        "Y": -66.6571134324577
      },
      {
        "Id": "4df0439c7bda4b1a8a17a865beba4bef",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Data.ImportExcel",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 242.70193871713809,
        "Y": -385.10677373252344
      }
    ],
    "Annotations": [
      {
        "Id": "33a7767c06a7452b8e6ac89f81c1f449",
        "Title": "INPUT MAIN",
        "Nodes": [
          "2304b0b89bb64748bf5be85e45904bbe"
        ],
        "Left": -1245.6994644678139,
        "Top": -36.4659263385023,
        "Width": 198.0,
        "Height": 133.0,
        "FontSize": 14.0,
        "InitialTop": -6.4659263385023,
        "InitialHeight": 145.0,
        "TextblockHeight": 20.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "a0feec31821748f5a1a4bcef17342602",
        "Title": "Get Revit models' dir",
        "Nodes": [
          "18ec972b473b4272969d8e2115eee377",
          "e9e717f70a6d47b9997305cdabb7eedf"
        ],
        "Left": -945.98280688964985,
        "Top": -421.2641462658,
        "Width": 538.84490020405553,
        "Height": 142.23518913547417,
        "FontSize": 24.0,
        "InitialTop": -382.2641462658,
        "InitialHeight": 155.23518913547417,
        "TextblockHeight": 29.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "aa33c4d5995b4537abfd832f04ba6775",
        "Title": "DIR",
        "Nodes": [
          "85cea14d2dd94e1a85f60b881d20cd40",
          "2380f17afee247ff97aa23f6550eb2ac"
        ],
        "Left": -1291.1498523165058,
        "Top": -525.55154738356759,
        "Width": 315.0,
        "Height": 234.80528992432176,
        "FontSize": 36.0,
        "InitialTop": -472.55154738356759,
        "InitialHeight": 205.304312664676,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "72c64e1498514c81a315aaac52f2adaf",
        "Title": "",
        "Nodes": [
          "a20e50bbdced420e8e9df7e25a320ec1"
        ],
        "Left": -718.62684039803912,
        "Top": -451.26934560816994,
        "Width": 147.0,
        "Height": 198.0,
        "FontSize": 36.0,
        "InitialTop": -398.26934560816994,
        "InitialHeight": 145.0,
        "TextblockHeight": 43.0,
        "Background": "#FFFF7BAC"
      },
      {
        "Id": "43689e1e75004ce9aacf0c6bdf228d1d",
        "Title": "write to txt",
        "Nodes": [
          "12e9252ae759437eb45f2e0ca7b771ff",
          "cc178813d363444e88b1cf7daaad5f13"
        ],
        "Left": -102.21845831577423,
        "Top": 162.702055217049,
        "Width": 633.92055061209317,
        "Height": 181.15810238110805,
        "FontSize": 36.0,
        "InitialTop": 215.702055217049,
        "InitialHeight": 170.15810238110805,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "9b3b605401d2494e8d96793e2fb6576c",
        "Title": "write to txt",
        "Nodes": [
          "732ce0f868354beea908434ae8170fa8",
          "791c72e217c34b448d825eeacb8f1ae1"
        ],
        "Left": -112.74430425519176,
        "Top": -119.65711343245771,
        "Width": 633.92055061209271,
        "Height": 181.15810238110805,
        "FontSize": 36.0,
        "InitialTop": -66.6571134324577,
        "InitialHeight": 170.15810238110805,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "b04bd1e341d94285b7b4160aef963080",
        "Title": "",
        "Nodes": [
          "4a126fc5c9654b6594f1a95f3391f047",
          "62d4e7079ecb4478a3e6b445853987de"
        ],
        "Left": -269.70273578872593,
        "Top": -688.18726667945577,
        "Width": 420.73871979893579,
        "Height": 160.57084542157293,
        "FontSize": 36.0,
        "InitialTop": -635.18726667945577,
        "InitialHeight": 149.57084542157293,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "ffc48ca900054026823a0889dabff967",
        "Title": "",
        "Nodes": [
          "6151babe7c2b42dfb584e5ad918fbc8c",
          "4df0439c7bda4b1a8a17a865beba4bef"
        ],
        "Left": 225.64949642351667,
        "Top": -671.56358743986186,
        "Width": 257.05244229362143,
        "Height": 457.45681370733843,
        "FontSize": 36.0,
        "InitialTop": -618.56358743986186,
        "InitialHeight": 378.45681370733843,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      }
    ],
    "X": 1239.1849493790187,
    "Y": 564.56449039667575,
    "Zoom": 0.78418408383627713
  }
}