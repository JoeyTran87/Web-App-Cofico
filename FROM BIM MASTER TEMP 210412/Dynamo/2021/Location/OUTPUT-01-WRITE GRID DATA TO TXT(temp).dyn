{
  "Uuid": "3c9d0464-8643-5ffe-96e5-ab1769818209",
  "IsCustomNode": false,
  "Description": "",
  "Name": "06-QTO 3D-(2C)-WRITE EXCEL-ELEMENT DATA (APPEND)-run on REVIT-210219-3",
  "ElementResolver": {
    "ResolutionMap": {
      "List": {
        "Key": "List",
        "Value": "BuiltIn.ds"
      }
    }
  },
  "Inputs": [
    {
      "Id": "85cea14d2dd94e1a85f60b881d20cd40",
      "Name": "Browse DIR manualy",
      "Type": "boolean",
      "Value": "false",
      "Description": "Selection between a true and false."
    },
    {
      "Id": "2380f17afee247ff97aa23f6550eb2ac",
      "Name": "Directory Path",
      "Type": "string",
      "Value": "No file selected.",
      "Description": "Allows you to select a directory on the system to get its path"
    }
  ],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nclr.AddReference('RevitAPIUI')\r\nfrom Autodesk.Revit.UI import TaskDialog\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nclr.AddReference(\"RevitServices\")\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\nfrom System.Collections.Generic import *\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\n\r\n##\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\nuiapp = DocumentManager.Instance.CurrentUIApplication\r\napp = uiapp.Application\r\n\r\nopt = Options()\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n\r\n\r\n##\r\n\r\nres = []\r\ndir = \"\"\r\ndataFullPath =\"\"\r\n\r\n#\r\ntry:\r\n\tp = doc.PathName.split(\"\\\\\")\r\n\tpp = p[0:len(p)-1]\r\n\r\n\tfor s in pp:\r\n\t\tdir += s + \"\\\\\"\r\nexcept:\r\n\tpass\r\n\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = dir",
      "VariableInputPorts": true,
      "Id": "18ec972b473b4272969d8e2115eee377",
      "Inputs": [
        {
          "Id": "791f2c4f4c244b4bbd668bf0e87131be",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6f267b4b1b104a8d90e66e8057913ada",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "shn = \"QTO.ITEM.DAT\";\nSOCats = \"SOCats\";\nQTOdata = \"QTO.ITEM.DAT\";",
      "Id": "2304b0b89bb64748bf5be85e45904bbe",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a0a7d3cdd0354356be99c8828c52db99",
          "Name": "",
          "Description": "shn",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "52e47c7004ff4936bea1fd24122c3e02",
          "Name": "",
          "Description": "SOCats",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9bd4c9996986462f931e45aab22a7569",
          "Name": "",
          "Description": "QTOdata",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nclr.AddReference('RevitAPIUI')\r\nfrom Autodesk.Revit.UI import TaskDialog\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nclr.AddReference(\"RevitServices\")\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\nfrom System.Collections.Generic import *\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\n\r\n##\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\nuiapp = DocumentManager.Instance.CurrentUIApplication\r\napp = uiapp.Application\r\n\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\n\r\n\r\nt = Transaction(doc)\r\n\t\r\nt.Start(\"Units setup\")\r\ntry:\r\n\t#Area\r\n\tunit = Units(UnitSystem.Metric)\r\n\r\n\tfmOp = FormatOptions(DisplayUnitType.DUT_SQUARE_METERS,UnitSymbolType.UST_NONE,0.001)\r\n\t\r\n\tunit.SetFormatOptions(UnitType.UT_Area,fmOp)\r\n\t\r\n\tdoc.SetUnits(unit)\r\n\t#Volume\r\n\tunit1 = Units(UnitSystem.Metric)\r\n\r\n\tfmOp1 = FormatOptions(DisplayUnitType.DUT_CUBIC_METERS,UnitSymbolType.UST_NONE,0.001)\r\n\t\r\n\tunit.SetFormatOptions(UnitType.UT_Volume,fmOp1)\r\n\t\r\n\tdoc.SetUnits(unit)\r\n\t#doc.GetUnits().SetFormatOptions(UnitType.UT_Area,fmOp)\r\nexcept Exception, e:\r\n\tpass\r\nt.Commit()\r\n\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = 0",
      "VariableInputPorts": true,
      "Id": "00a0f89a880b4019abc2622db9a7ee7e",
      "Inputs": [
        {
          "Id": "9d453d04f4394058a8b3bec7d622f3c2",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b4a640dd38184f0a8d56ce344c02d6fe",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nclr.AddReference('RevitAPIUI')\r\nfrom Autodesk.Revit.UI import TaskDialog\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nclr.AddReference(\"RevitServices\")\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\nfrom System.Collections.Generic import *\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\n\r\n##\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\nuiapp = DocumentManager.Instance.CurrentUIApplication\r\napp = uiapp.Application\r\n\r\nopt = Options()\r\ncategories = doc.Settings.Categories\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ncats = IN[0]\r\nprojectInfoDat = IN[1]\r\n# Place your code below this line\r\nres = []\r\nmodel_cat = []\r\nparamsets = []\r\ntypeparamsets = []\r\n\r\nelemDat=[]\r\n\r\n#NOTE\r\n\r\nTAB = \"____\"\r\nATTBREAK = \" : \"\r\nLINEBREAK = \"/N\"\r\ndef getProperties (params):\r\n\toneline = \"\"\r\n\tfor p in params:\t\t\r\n\t\ttry:\r\n\t\t\tcbTxt = \"{0}{2}{1}\"\t\t\t\r\n\t\t\tn = p.Definition.Name\r\n\t\t\tv= \"\"\r\n\t\t\tif p.AsValueString():\r\n\t\t\t\tv = p.AsValueString()\r\n\t\t\telse:\r\n\t\t\t\tif p.StorageType == StorageType.String:\r\n\t\t\t\t\tif p.AsString():\r\n\t\t\t\t\t\tv = p.AsString()\t\t\r\n\t\t\toneline += cbTxt.format(n,v,ATTBREAK) + TAB\r\n\t\texcept:\r\n\t\t\tpass\r\n\treturn oneline\r\n\r\n###\r\ntry:\r\n\t### get all elements of categories\r\n\tfor c in categories:\r\n\t\tfor cat in cats:\r\n\t\t\tif cat and c.Name == cat:\r\n\t\t\t\tfor e in FilteredElementCollector(doc).OfCategoryId(c.Id).WhereElementIsNotElementType().ToElements():\r\n\t\t\t\t\tres.append(e)\r\nexcept:\r\n\tpass\r\n\r\n######## ParameterSet\r\nstrDat = \"\"\r\nfor e in res:\r\n\t# projectInfoDat + BREAK\r\n\t#type property\r\n\ttyp = doc.GetElement(e.GetTypeId())\r\n\tstrDat += getProperties(typ.Parameters) + TAB\t\t\r\n\t#instance property\r\n\tstrDat +=  getProperties(e.Parameters) + TAB\r\n\t\r\n\tstrDat +=  LINEBREAK\r\n\t\r\n\telemDat.append(strDat)\r\n\t\t\r\n# Assign your output to the OUT variable.\r\nOUT = strDat#elemDat",
      "VariableInputPorts": true,
      "Id": "d3c1e3ad607143dcb9544b6c62fddd35",
      "Inputs": [
        {
          "Id": "6b9469459ab944e293a164d3a000e798",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4a7a1e533e9042fea32367312ec7583d",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "11d17f1127b54fceb06bded0e5a5dac4",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9a05bf7cfb644ba1a9dadfa67c9d111a",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nclr.AddReference('RevitAPIUI')\r\nfrom Autodesk.Revit.UI import TaskDialog\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nclr.AddReference(\"RevitServices\")\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\nfrom System.Collections.Generic import *\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\n\r\n##\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\nuiapp = DocumentManager.Instance.CurrentUIApplication\r\napp = uiapp.Application\r\n####\r\n\r\nBREAK = \"____\"\r\nATTBREAK = \" : \"\r\n\r\n\r\n\r\ndef getProperties (params):\r\n\toneline = \"\"\r\n\tfor p in params:\t\t\r\n\t\ttry:\r\n\t\t\tcbTxt = \"{0}{2}{1}\"\t\t\t\r\n\t\t\tn = p.Definition.Name\r\n\t\t\tv= \"\"\r\n\t\t\tif p.AsValueString():\r\n\t\t\t\tv = p.AsValueString()\r\n\t\t\telse:\r\n\t\t\t\tif p.StorageType == StorageType.String:\r\n\t\t\t\t\tif p.AsString():\r\n\t\t\t\t\t\tv = p.AsString()\t\t\r\n\t\t\toneline += cbTxt.format(n,v,ATTBREAK) + BREAK\r\n\t\texcept:\r\n\t\t\tpass\r\n\treturn oneline\r\n###\r\nopt = Options()\r\ncategories = doc.Settings.Categories\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n# Place your code below this line\r\nprojectInfoDat=\"\"\r\n\r\ntry:\r\n\t### get all elements of categories\r\n\tfor c in categories:\r\n\t\tif c.Name == \"Project Information\":\r\n\t\t\tprojInfo = FilteredElementCollector(doc).OfCategoryId(c.Id).WhereElementIsNotElementType().ToElements()[0]\r\n\t######## ParameterSet\r\n\t#instance property\r\n\tprojectInfoDat = getProperties(projInfo.Parameters)\r\n\t\t\r\nexcept:\r\n\tpass\r\n\r\nOUT = projectInfoDat",
      "VariableInputPorts": true,
      "Id": "4b8ce2e1696f47eba0c225307dec6e1f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "760a1d6b60964e6cb415b7f8e4e31dcd",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "dir;",
      "Id": "e9e717f70a6d47b9997305cdabb7eedf",
      "Inputs": [
        {
          "Id": "d43a4cf3ae0a4df7beaf82955eb7c70f",
          "Name": "dir",
          "Description": "dir",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d723f59df11c49fa85a18bd5505e8d21",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "dir+shn+\".txt\";",
      "Id": "69c1ad048a6b48af88940878fc7f88f8",
      "Inputs": [
        {
          "Id": "758107aa570744eaa6c9c5c0cafd7506",
          "Name": "dir",
          "Description": "dir",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ad28039373c04c4387998720c0f64d03",
          "Name": "shn",
          "Description": "shn",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fc5b9b026325499898115c1223357d89",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('System.IO')\r\nclr.AddReference('System.Drawing')\r\nclr.AddReference('System.Reflection')\r\nclr.AddReference('System.Threading')\r\nclr.AddReference(\"System.Windows.Forms\")\r\n\r\nimport System\r\nimport System.IO\r\nimport System.Drawing\r\nimport System.Reflection\r\nimport System.Windows.Forms\r\n\r\nfrom System.Threading import ApartmentState, Thread, ThreadStart\r\nfrom System.Windows.Forms import *\r\n\r\nimport os\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nexDat = IN[0]\r\npath = IN[1]\r\n#list1Line = []\r\nallText=\"\"\r\n\r\nTAB = \"\\t\"\r\nBREAKLINE = \"\\n\"\r\n\r\ntest1 = os.path.isdir(path)\r\ntest2 = os.path.exists(path)\r\ntest3 = os.path.isfile(path)\r\n\r\n# Place your code below this line\r\n\r\ndef writeTxtFromExcelDat(exDat,_TAB,_BREAKLINE): #from excel data list\r\n\tallText=\"\"\r\n\tTAB = _TAB\r\n\tBREAKLINE = _BREAKLINE\t\r\n\tfor d in exDat:\r\n\t\tstr = \"\"\r\n\t\tstrF = \"{0}{1}\"\t\t\r\n\t\tif d[0] and len(d)>0:\t\t\r\n\t\t\tfor c in d:\r\n\t\t\t\tif c:\r\n\t\t\t\t\tstr += strF.format(c,TAB)\r\n\t\tif len(str)>0:\r\n\t\t\tstr += BREAKLINE\t\r\n\t\t#list1Line.append(str)\r\n\t\tallText += str\t\r\n\tf = open(path,\"w\")\r\n\tf.write(allText.encode('utf8'))\r\n\tf.close\r\n\treturn allText\r\ndef writeTxtFromTxtString(exDat,_TAB,_BREAKLINE): #from txt string\t\r\n\tf = open(path,\"w\")\r\n\tf.write(exDat.encode('utf8'))\r\n\tf.close\r\n\treturn exDat\r\n###################\r\nif not test1 and len(exDat) >0:\r\n\tallText = writeTxtFromTxtString(exDat,TAB,BREAKLINE)\r\n#MessageBox.Show(allText)\r\n# Assign your output to the OUT variable.\r\nOUT = allText",
      "VariableInputPorts": true,
      "Id": "12e9252ae759437eb45f2e0ca7b771ff",
      "Inputs": [
        {
          "Id": "cff0f9d94ea54bed9200b2940aabeaeb",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a77fae9ca34d4abe955ae6e64430f415",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cbecd45c615c4eab8a0d9b12c0fd573e",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nimport os\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\npath = IN[0]\r\n# ini\r\nTAB = \"\\t\"\r\n\r\n###\r\ndef createQTOreqDic (path):\r\n\tdat=[]\r\n\tdic = []\r\n\twith open(path,\"r\") as f:\r\n\t\tlines = f.readlines()\r\n\t\tfor l in lines:\r\n\t\t\tif len(l)>0:\r\n\t\t\t\td =[]\r\n\t\t\t\tfor att in l.decode('utf-8').split(TAB):\r\n\t\t\t\t\td.append(att)\r\n\t\t\t\tdat.append(l.decode('utf-8'))\r\n\tfor d in dat[1:]:\r\n\t\t#di = {}\r\n\t\t#di[d.split(TAB)[0]] = d.split(TAB)[1]\r\n\t\tdic.append(d.split(TAB)[0])\r\n\t\t#for att in d.split(TAB):\r\n\t\r\n\treturn dic\r\n# Place your code below this line\r\n\r\ntest1 = os.path.isdir(path)\r\ntest2 = os.path.exists(path)\r\ntest3 = os.path.isfile(path)\r\n\r\ndat=createQTOreqDic (path)\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = dat",
      "VariableInputPorts": true,
      "Id": "ce02a93d0c244fcd9d661856784348c1",
      "Inputs": [
        {
          "Id": "44f00181aee24800a8078619e1ee46ab",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b49514a2c69b41bc84c96bf0ba888d3f",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": false,
      "Id": "85cea14d2dd94e1a85f60b881d20cd40",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f024bb44af2747eab70333054069d3f6",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Directory, CoreNodeModels",
      "HintPath": "C:\\Users\\USER\\Downloads\\DYNAMO-210218\\210218-Z2 - ARC\\No file selected",
      "InputValue": "No file selected.",
      "NodeType": "ExtensionNode",
      "Id": "2380f17afee247ff97aa23f6550eb2ac",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5e6b5d161ec441219f04deafac4f23ed",
          "Name": "",
          "Description": "Directory",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a directory on the system to get its path"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.If, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "a20e50bbdced420e8e9df7e25a320ec1",
      "Inputs": [
        {
          "Id": "6de22c340a1c4dd280f764a7eb680c8a",
          "Name": "test",
          "Description": "Test block",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "19314bbd4ad84b7fabbe11684a9b0b15",
          "Name": "true",
          "Description": "True block",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b27f2767c56e476787a8e545be1175c1",
          "Name": "false",
          "Description": "False block",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "69b47a30131b4ac084382b619730e4c9",
          "Name": "result",
          "Description": "result",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Conditional statement"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "dir+shn+\".txt\";",
      "Id": "cc178813d363444e88b1cf7daaad5f13",
      "Inputs": [
        {
          "Id": "72efcad0723e4cc589eea2944a319b82",
          "Name": "dir",
          "Description": "dir",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d024de9c29474ef0876dc896da7a0f7a",
          "Name": "shn",
          "Description": "shn",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "01c29f6cbe1f4490aba2674fe50f0288",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    }
  ],
  "Connectors": [
    {
      "Start": "6f267b4b1b104a8d90e66e8057913ada",
      "End": "b27f2767c56e476787a8e545be1175c1",
      "Id": "b658da4a29f749509f33aa98f6e5a2b6"
    },
    {
      "Start": "52e47c7004ff4936bea1fd24122c3e02",
      "End": "ad28039373c04c4387998720c0f64d03",
      "Id": "2173b0a7e26545e493c03b484274c787"
    },
    {
      "Start": "9bd4c9996986462f931e45aab22a7569",
      "End": "d024de9c29474ef0876dc896da7a0f7a",
      "Id": "5561aae1923c419db7e75e7d66400a35"
    },
    {
      "Start": "9a05bf7cfb644ba1a9dadfa67c9d111a",
      "End": "cff0f9d94ea54bed9200b2940aabeaeb",
      "Id": "1c63f565ecb7474686bb8649cd70ae86"
    },
    {
      "Start": "760a1d6b60964e6cb415b7f8e4e31dcd",
      "End": "4a7a1e533e9042fea32367312ec7583d",
      "Id": "bed90930c81e4b34a5a2296cdb7ee8b9"
    },
    {
      "Start": "d723f59df11c49fa85a18bd5505e8d21",
      "End": "758107aa570744eaa6c9c5c0cafd7506",
      "Id": "6db474f93bf9428da2dd016f8aff2d81"
    },
    {
      "Start": "d723f59df11c49fa85a18bd5505e8d21",
      "End": "72efcad0723e4cc589eea2944a319b82",
      "Id": "9ffa983935be42a58b66b96b17644401"
    },
    {
      "Start": "fc5b9b026325499898115c1223357d89",
      "End": "44f00181aee24800a8078619e1ee46ab",
      "Id": "86673b3d0fba416cb82d08fb26a3bb0b"
    },
    {
      "Start": "b49514a2c69b41bc84c96bf0ba888d3f",
      "End": "6b9469459ab944e293a164d3a000e798",
      "Id": "a96116e1c8db4dfb8bcbb71623c74188"
    },
    {
      "Start": "f024bb44af2747eab70333054069d3f6",
      "End": "6de22c340a1c4dd280f764a7eb680c8a",
      "Id": "8a91b8f08aad4fd0bd97fc2b87eab1b6"
    },
    {
      "Start": "5e6b5d161ec441219f04deafac4f23ed",
      "End": "19314bbd4ad84b7fabbe11684a9b0b15",
      "Id": "3d7e8b1bf1e345758a5a74fa5b6a1787"
    },
    {
      "Start": "69b47a30131b4ac084382b619730e4c9",
      "End": "d43a4cf3ae0a4df7beaf82955eb7c70f",
      "Id": "2bb9eb00f2224b2d96c20dcdeb2fe99a"
    },
    {
      "Start": "01c29f6cbe1f4490aba2674fe50f0288",
      "End": "a77fae9ca34d4abe955ae6e64430f415",
      "Id": "82f2536717054a3b9f44e64e85a05be1"
    }
  ],
  "Dependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.1.0.7500",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "Id": "18ec972b473b4272969d8e2115eee377",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Python Script",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -935.98280688964985,
        "Y": -382.2641462658
      },
      {
        "Id": "2304b0b89bb64748bf5be85e45904bbe",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -1220.7509555694669,
        "Y": -157.19672439683336
      },
      {
        "Id": "00a0f89a880b4019abc2622db9a7ee7e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Python Script-Setup Units",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -1231.1854644469786,
        "Y": -259.87281237971138
      },
      {
        "Id": "d3c1e3ad607143dcb9544b6c62fddd35",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Python Script-ALL OneLine Element Property",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 200.12304201005892,
        "Y": -253.86210451735215
      },
      {
        "Id": "4b8ce2e1696f47eba0c225307dec6e1f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Python Script-OneLine Project Info Property",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -702.83168548721324,
        "Y": -43.818214572073543
      },
      {
        "Id": "e9e717f70a6d47b9997305cdabb7eedf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -509.13790668559432,
        "Y": -372.02895713032581
      },
      {
        "Id": "69c1ad048a6b48af88940878fc7f88f8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -334.463716825744,
        "Y": -353.812657565276
      },
      {
        "Id": "12e9252ae759437eb45f2e0ca7b771ff",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Python Script-Write Txt",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 806.61760540693922,
        "Y": -346.91673422510377
      },
      {
        "Id": "ce02a93d0c244fcd9d661856784348c1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Python Script-Read txt-OUT List Cats",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -104.815464080148,
        "Y": -352.71205046321
      },
      {
        "Id": "85cea14d2dd94e1a85f60b881d20cd40",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Name": "Browse DIR manualy",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -1213.3435126522465,
        "Y": -472.55154738356759
      },
      {
        "Id": "2380f17afee247ff97aa23f6550eb2ac",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Name": "Directory Path",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -1188.8448856322216,
        "Y": -412.2472347188916
      },
      {
        "Id": "a20e50bbdced420e8e9df7e25a320ec1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "If",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -708.62684039803912,
        "Y": -398.26934560816994
      },
      {
        "Id": "cc178813d363444e88b1cf7daaad5f13",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 551.54690980516318,
        "Y": -324.24630596470109
      }
    ],
    "Annotations": [
      {
        "Id": "33a7767c06a7452b8e6ac89f81c1f449",
        "Title": "INPUT MAIN",
        "Nodes": [
          "2304b0b89bb64748bf5be85e45904bbe"
        ],
        "Left": -1230.7509555694669,
        "Top": -187.19672439683336,
        "Width": 256.0,
        "Height": 151.0,
        "FontSize": 14.0,
        "InitialTop": -157.19672439683336,
        "InitialHeight": 633.50407945993834,
        "TextblockHeight": 20.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "a0feec31821748f5a1a4bcef17342602",
        "Title": "Get Revit models' dir",
        "Nodes": [
          "18ec972b473b4272969d8e2115eee377",
          "e9e717f70a6d47b9997305cdabb7eedf"
        ],
        "Left": -945.98280688964985,
        "Top": -421.2641462658,
        "Width": 538.84490020405553,
        "Height": 142.23518913547417,
        "FontSize": 24.0,
        "InitialTop": -382.2641462658,
        "InitialHeight": 193.68419202167803,
        "TextblockHeight": 29.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "aa33c4d5995b4537abfd832f04ba6775",
        "Title": "DIR",
        "Nodes": [
          "85cea14d2dd94e1a85f60b881d20cd40",
          "2380f17afee247ff97aa23f6550eb2ac"
        ],
        "Left": -1223.3435126522465,
        "Top": -525.55154738356759,
        "Width": 156.49862702002497,
        "Height": 207.304312664676,
        "FontSize": 36.0,
        "InitialTop": -472.55154738356759,
        "InitialHeight": 184.304312664676,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "72c64e1498514c81a315aaac52f2adaf",
        "Title": "",
        "Nodes": [
          "a20e50bbdced420e8e9df7e25a320ec1"
        ],
        "Left": -718.62684039803912,
        "Top": -451.26934560816994,
        "Width": 147.0,
        "Height": 198.0,
        "FontSize": 36.0,
        "InitialTop": -398.26934560816994,
        "InitialHeight": 175.0,
        "TextblockHeight": 43.0,
        "Background": "#FFFF7BAC"
      },
      {
        "Id": "69b9f6a0ee59417f88c3d89e5524b35f",
        "Title": "Get Project Inforamtion data",
        "Nodes": [
          "4b8ce2e1696f47eba0c225307dec6e1f"
        ],
        "Left": -712.83168548721324,
        "Top": -139.81821457207354,
        "Width": 305.0,
        "Height": 189.0,
        "FontSize": 36.0,
        "InitialTop": -43.818214572073543,
        "InitialHeight": 123.0,
        "TextblockHeight": 86.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "4a6bca013f3941af87226a32efe240b9",
        "Title": "get All elements data in 1 Line",
        "Nodes": [
          "d3c1e3ad607143dcb9544b6c62fddd35",
          "77ce9d84c30649e0bbc787450fc3725c"
        ],
        "Left": 180.54513333826492,
        "Top": -384.29685579243812,
        "Width": 319.57790867179403,
        "Height": 275.434751275086,
        "FontSize": 36.0,
        "InitialTop": -288.29685579243812,
        "InitialHeight": 183.434751275086,
        "TextblockHeight": 86.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "a79bf3d122934291bf17f30c7eafea72",
        "Title": "create Category requirements",
        "Nodes": [
          "69c1ad048a6b48af88940878fc7f88f8",
          "ce02a93d0c244fcd9d661856784348c1"
        ],
        "Left": -344.463716825744,
        "Top": -406.812657565276,
        "Width": 487.648252745596,
        "Height": 147.10060710206602,
        "FontSize": 36.0,
        "InitialTop": -353.812657565276,
        "InitialHeight": 124.10060710206602,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "43689e1e75004ce9aacf0c6bdf228d1d",
        "Title": "write to txt",
        "Nodes": [
          "12e9252ae759437eb45f2e0ca7b771ff",
          "cc178813d363444e88b1cf7daaad5f13"
        ],
        "Left": 541.54690980516318,
        "Top": -399.91673422510377,
        "Width": 430.07069560177604,
        "Height": 178.67042826040267,
        "FontSize": 36.0,
        "InitialTop": -346.91673422510377,
        "InitialHeight": 123.0,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "77ce9d84c30649e0bbc787450fc3725c",
        "Title": "Out Put = All oneline properties of all elements",
        "Nodes": [],
        "Left": 190.54513333826492,
        "Top": -288.29685579243812,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      }
    ],
    "X": 1016.1682709611187,
    "Y": 547.71190476290246,
    "Zoom": 0.5717411192537476
  }
}